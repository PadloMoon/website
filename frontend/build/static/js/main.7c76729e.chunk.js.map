{"version":3,"sources":["components/Tokenomics/Tokenomics.module.css","routes/App/App.module.css","routes/Poker/Poker.module.css","routes/PokerRegistration/PokerRegistration.module.css","components/Footer/Footer.module.css","styles/main.module.css","components/Roadmap/Roadmap.module.css","components/WalletConnect/WalletConnect.module.css","components/Navigation/Navigation.module.css","slices/interfaces.ts","slices/walletSlice.ts","slices/transactionSlice.ts","slices/store.ts","components/Roadmap/Roadmap.tsx","components/Tokenomics/Tokenomics.tsx","assets/PadloMoon_litepaper.pdf","components/Navigation/Navigation.tsx","components/Footer/Footer.tsx","assets/images/Padlologo_new_transparent.png","routes/App/App.tsx","routes/Poker/Poker.tsx","slices/hooks.ts","assets/icons/metamask-minified.svg","assets/icons/walletconnect-logo.svg","assets/icons/defiwallet.png","config/config.ts","utils/utils.ts","utils/metamask.ts","utils/defiwallet.ts","utils/walletConnect.ts","components/WalletConnect/WalletConnect.tsx","utils/transactions.ts","utils/sendRegistrationEmail.ts","routes/PokerRegistration/PokerRegistration.tsx","index.tsx"],"names":["module","exports","defaultWallet","walletProviderName","address","browserWeb3Provider","serverWeb3Provider","wcConnector","wcProvider","connected","chainId","defaultQueryResults","lastBlockNumber","croBalance","padloBalance","lastTxHash","initialState","refreshing","status","message","wallet","walletWeb3Modal","fetching","web3","provider","networkId","assets","showModal","pendingRequest","result","queryResults","walletSlice","createSlice","name","reducers","setRefreshing","state","action","payload","updateWallet","updateWalletWeb3Modal","updateQueryResults","actions","transactionSlice","processing","transaction","setProcessing","setTransaction","store","configureStore","middleware","getDefaultMiddleWare","serializableCheck","reducer","walletReducer","transactionReducer","Roadmap","Row","className","Col","xs","lg","classNames","mainStyles","CommonElement","Title","styles","RoadmapTitle","lineColor","VerticalTimeLine","dateClassName","Date","textClassName","RoadmapText","contentArrowStyle","borderRight","date","iconClassName","Icon","icon","color","size","style","textDecoration","Tokenomics","md","TokenomicsTitle","Card","Body","TokenomicsCardTitle","Text","Navigation","Navbar","expand","sticky","collapseOnSelect","NavbarCustom","Container","Brand","href","Toggle","Collapse","id","Nav","navbarScroll","Link","NavbarLink","as","to","pdf","target","rel","NavbarIcon","Footer","fluid","Links","App","console","log","Image","src","logo","alt","Logo","LogoTitle","About","Poker","PokerInfoContainer","PokerTitle","Calendar","CalendarTitle","useAppDispatch","useDispatch","useAppSelector","useSelector","configVars","mode","rpcNetwork_test","rpcUrl","chainIdHex","chainName","chainType","nativeCurrency","symbol","decimals","blockExplorerUrl","rpcNetwork","padlo","test_devWallet","devWallet","pokerRegistrationFee","delay","ms","Promise","res","setTimeout","hexToInt","s","bn","ethers","BigNumber","from","parseInt","toString","reloadApp","window","location","reload","getLastBlockNumber","ethersProvider","a","getBlockNumber","getCroBalance","getBalance","balance","div","toNumber","getPadloBalance","contractAbi","PadloJson","abi","readContractInstance","Contract","config","contractResponse","wait","resolve","switchNetwork","ethereum","request","method","params","rpcUrls","blockExplorerUrls","connect","utils","accounts","on","providers","Web3Provider","JsonRpcProvider","alert","connector","DeFiWeb3Connector","supportedChainIds","rpc","pollingInterval","activate","getProvider","web3Provider","listAccounts","localStorage","clear","WalletConnectProvider","enable","WalletConnect","props","show","handleClose","dispatch","handleConnect","option","walletMetamask","walletDefiwallet","walletConnect","Modal","onHide","Header","closeButton","ModalTitle","ModalBody","card","Img","variant","MetamaskLogo","WalletLogo","onClick","WalletName","WalletconnectLogo","WalletConnectLogo","DefiWalletLogo","payWithMetamask","sender","signer","getSigner","parseEther","String","getTransactionCount","hexlify","getGasPrice","tx","value","nonce","gasLimit","gasPrice","sendTransaction","hash","sendRegistrationEmail","player","transactionHash","templateParams","from_name","transaction_hash","emailjs","send","env","POKER_BOT_SERVICE_ID","POKER_BOT_TEMPLATE_ID","POKER_BOT_USER_ID","PokerRegistration","useState","showWalletConnect","setShowWalletConnect","showRegistrationModal","setShowRegistrationModal","validated","setValidated","error","setError","toggleWalletConnect","toggleRegistrationModal","disconnect","getWalletState","length","handleSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","txRes","username","display","justifyContent","Button","disabled","ButtonSecondary","ConnectWalletButton","active","getWalletButtonTitle","Registration","Form","noValidate","onSubmit","Group","controlId","Control","Input","required","type","placeholder","Feedback","SubmitButton","backdrop","keyboard","Spinner","animation","fontWeight","fontSize","marginLeft","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.7c76729e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Tokenomics_Card__1QwS_\",\"TokenomicsTitle\":\"Tokenomics_TokenomicsTitle__jTwH4\",\"TokenomicsCardTitle\":\"Tokenomics_TokenomicsCardTitle__2dapD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"App_Logo__2BfXR\",\"LogoTitle\":\"App_LogoTitle__260Dp\",\"About\":\"App_About__3ML4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokerLogo\":\"Poker_PokerLogo__2EHx0\",\"PokerLogoTitle\":\"Poker_PokerLogoTitle__27-L2\",\"LogoTitle\":\"Poker_LogoTitle__3_UN6\",\"PokerInfoContainer\":\"Poker_PokerInfoContainer__2NXEC\",\"PokerTitle\":\"Poker_PokerTitle__2oGMa\",\"Calendar\":\"Poker_Calendar__2IPZb\",\"CalendarTitle\":\"Poker_CalendarTitle__2559N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConnectWalletButton\":\"PokerRegistration_ConnectWalletButton__hG2sX\",\"Registration\":\"PokerRegistration_Registration__3e2MO\",\"Input\":\"PokerRegistration_Input__NNjTB\",\"SubmitButton\":\"PokerRegistration_SubmitButton__32SNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__238hM\",\"Links\":\"Footer_Links__mnUs6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"main_Container__3VIs1\",\"CommonElement\":\"main_CommonElement__1ud7k\",\"Title\":\"main_Title__17WNc\",\"Button\":\"main_Button__2UIG6\",\"ButtonSecondary\":\"main_ButtonSecondary__8Ah_U\",\"Registration\":\"main_Registration__3uXRU\",\"Link\":\"main_Link__fAPTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoadmapTitle\":\"Roadmap_RoadmapTitle__UT6xL\",\"Date\":\"Roadmap_Date__37Bqz\",\"VerticalTimeLine\":\"Roadmap_VerticalTimeLine__14YHm\",\"RoadmapText\":\"Roadmap_RoadmapText__2GTut\",\"Icon\":\"Roadmap_Icon__sMEct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalTitle\":\"WalletConnect_ModalTitle__NpMls\",\"ModalBody\":\"WalletConnect_ModalBody__1CetU\",\"card\":\"WalletConnect_card__lZ-Pv\",\"WalletLogo\":\"WalletConnect_WalletLogo__1rK72\",\"MetamaskLogo\":\"WalletConnect_MetamaskLogo__3uq9b\",\"WalletconnectLogo\":\"WalletConnect_WalletconnectLogo__1AaEO\",\"DefiWalletLogo\":\"WalletConnect_DefiWalletLogo__2pdeh\",\"WalletName\":\"WalletConnect_WalletName__-wy9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavbarCustom\":\"Navigation_NavbarCustom__2a0WY\",\"NavbarLink\":\"Navigation_NavbarLink__1Nz4Q\",\"NavbarIcon\":\"Navigation_NavbarIcon__2CvfH\",\"Icon\":\"Navigation_Icon__1Vwfs\",\"Brand\":\"Navigation_Brand__3RBdw\"};","import { ethers } from \"ethers\";\n\n// walletSlice\nexport interface WalletState {\n  refreshing: IRefreshing;\n  wallet: IWallet;\n  walletWeb3Modal: IWalletWeb3Modal;\n  queryResults: IQueryResults;\n}\n\nexport interface IRefreshing {\n  status: boolean;\n  message: string;\n}\n\nexport interface IWallet {\n  walletProviderName: string; // for example, \"metamask\" or \"defiwallet\"\n  address: string; // 0x address of the user\n  browserWeb3Provider: any; // Web3 provider connected to the wallet's browser extension\n  serverWeb3Provider: ethers.providers.JsonRpcProvider | null; // cloud based Web3 provider for read-only\n  wcConnector: any; // connector object provided by some wallet connection methods, stored if relevant\n  wcProvider: any; // provider object provided by some wallet connection methods, stored if relevant\n  connected: boolean; // is the wallet connected to the Dapp, or not?\n  chainId: number; // for example, 25 for Cronos mainnet, and 338 for Cronos testnet\n}\n\nexport interface IWalletWeb3Modal {\n  fetching: boolean;\n  address: string;\n  web3: any;\n  provider: any;\n  connected: boolean;\n  chainId: number;\n  networkId: number;\n  assets: IAssetData[];\n  showModal: boolean;\n  pendingRequest: boolean;\n  result: any | null;\n}\n\nexport interface IAssetData {\n  symbol: string;\n  name: string;\n  decimals: string;\n  contractAddress: string;\n  balance?: string;\n}\n\nexport interface IQueryResults {\n  lastBlockNumber: number;\n  croBalance: number;\n  padloBalance: number;\n  lastTxHash: string;\n}\n\nexport const defaultRefreshing = {\n  status: false,\n  message: \"Please wait a few seconds...\",\n};\n\nexport const defaultWallet: IWallet = {\n  walletProviderName: \"\",\n  address: \"\",\n  browserWeb3Provider: null,\n  serverWeb3Provider: null,\n  wcConnector: null,\n  wcProvider: null,\n  connected: false,\n  chainId: 0,\n};\n\nexport const defaultWalletWeb3Modal: IWalletWeb3Modal = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null,\n};\n\nexport const defaultQueryResults: IQueryResults = {\n  lastBlockNumber: 0,\n  croBalance: 0,\n  padloBalance: 0,\n  lastTxHash: \"\",\n};\n\n// transactionSlice\n\nexport interface TransactionState {\n  processing: boolean;\n  transaction: string | null;\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"./store\";\nimport {\n  WalletState,\n  defaultRefreshing,\n  defaultWallet,\n  defaultWalletWeb3Modal,\n  defaultQueryResults,\n  IWallet,\n  IWalletWeb3Modal,\n  IQueryResults,\n  IRefreshing,\n} from \"./interfaces\";\n\nconst initialState: WalletState = {\n  refreshing: defaultRefreshing,\n  wallet: defaultWallet,\n  walletWeb3Modal: defaultWalletWeb3Modal,\n  queryResults: defaultQueryResults,\n};\n\nexport const walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    setRefreshing: (state, action: PayloadAction<IRefreshing>) => {\n      state.refreshing = action.payload;\n    },\n    updateWallet: (state, action: PayloadAction<IWallet>) => {\n      state.wallet = action.payload;\n    },\n    updateWalletWeb3Modal: (state, action: PayloadAction<IWalletWeb3Modal>) => {\n      state.walletWeb3Modal = action.payload;\n    },\n    updateQueryResults: (state, action: PayloadAction<IQueryResults>) => {\n      state.queryResults = action.payload;\n    },\n  },\n});\n\nexport const {\n  setRefreshing,\n  updateWallet,\n  updateQueryResults,\n  updateWalletWeb3Modal,\n} = walletSlice.actions;\n\nexport const selectWallet = (state: RootState) => state.wallet.wallet;\nexport const selectRefreshing = (state: RootState) => state.wallet.refreshing;\nexport const selectWalletWeb3Modal = (state: RootState) =>\n  state.wallet.walletWeb3Modal;\nexport const selectQueryResults = (state: RootState) =>\n  state.wallet.queryResults;\n\nexport default walletSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TransactionState } from \"./interfaces\";\nimport { RootState } from \"./store\";\n\nconst initialState: TransactionState = {\n  processing: false,\n  transaction: null,\n};\n\nexport const transactionSlice = createSlice({\n  name: \"transaction\",\n  initialState,\n  reducers: {\n    setProcessing: (state, action: PayloadAction<boolean>) => {\n      state.processing = action.payload;\n    },\n    setTransaction: (state, action: PayloadAction<string>) => {\n      state.transaction = action.payload;\n    },\n  },\n});\n\nexport const { setProcessing, setTransaction } = transactionSlice.actions;\n\nexport const selectRefreshing = (state: RootState) =>\n  state.transaction.processing;\nexport const selectTransaction = (state: RootState) =>\n  state.transaction.transaction;\n\nexport default transactionSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport walletReducer from \"./walletSlice\";\nimport transactionReducer from \"./transactionSlice\";\n\nexport const store = configureStore({\n  middleware: (getDefaultMiddleWare) =>\n    getDefaultMiddleWare({\n      serializableCheck: false,\n    }),\n  reducer: {\n    wallet: walletReducer,\n    transaction: transactionReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { BiLock, BiRocket } from \"react-icons/bi\";\nimport { RiStarLine } from \"react-icons/ri\";\nimport { HiCurrencyDollar, HiFire } from \"react-icons/hi\";\nimport { AiTwotoneThunderbolt } from \"react-icons/ai\";\nimport { FaChartLine } from \"react-icons/fa\";\n\nimport \"react-vertical-timeline-component/style.min.css\";\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Roadmap.module.css\";\n\nconst Roadmap = () => {\n  return (\n    <>\n      <Row className=\"justify-content-center\">\n        <Col\n          xs={10}\n          lg={6}\n          className={classNames(\n            mainStyles.CommonElement,\n            mainStyles.Title,\n            styles.RoadmapTitle\n          )}\n        >\n          Roadmap\n        </Col>\n      </Row>\n      <VerticalTimeline lineColor=\"#daa520\" className={styles.VerticalTimeLine}>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          dateClassName={styles.Date}\n          textClassName={styles.RoadmapText}\n          contentArrowStyle={{ borderRight: \"1vh solid  #daa520\" }}\n          date=\"Stage 1\"\n          iconClassName={styles.Icon}\n          icon={<BiRocket color=\"#e0e0e0\" size={48} />}\n        >\n          <ul>\n            <li>\n              <span style={{ textDecoration: \"line-through\" }}>\n                Presale & Launch\n              </span>\n            </li>\n            <li>\n              <span style={{ textDecoration: \"line-through\" }}>\n                DEX listing\n              </span>\n            </li>\n            <li>\n              <span style={{ textDecoration: \"line-through\" }}>Website</span>\n            </li>\n            <li>200 holders</li>\n            <li>\n              Community building: contests, games and grass root marketing\n            </li>\n          </ul>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Stage 2\"\n          dateClassName={styles.Date}\n          textClassName={styles.RoadmapText}\n          iconClassName={styles.Icon}\n          icon={<HiCurrencyDollar color=\"#e0e0e0\" size={36} />}\n          contentArrowStyle={{ borderRight: \"1vh solid  #daa520\" }}\n        >\n          <ul>\n            <li>500 holders</li>\n            <li>Padlo NFT</li>\n            <li>Project Paracosm</li>\n          </ul>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Stage 3\"\n          dateClassName={styles.Date}\n          textClassName={styles.RoadmapText}\n          iconClassName={styles.Icon}\n          icon={<HiFire color=\"#e0e0e0\" size={36} />}\n          contentArrowStyle={{ borderRight: \"1vh solid  #daa520\" }}\n        >\n          <ul>\n            <li>1500 holders</li>\n            <li>CEX listing</li>\n            <li>\n              <BiLock color=\"#e0e0e0\" size={48} />\n            </li>\n          </ul>\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Stage 4\"\n          dateClassName={styles.Date}\n          textClassName={styles.RoadmapText}\n          iconClassName={styles.Icon}\n          icon={<AiTwotoneThunderbolt color=\"#e0e0e0\" size={36} />}\n          contentArrowStyle={{ borderRight: \"1vh solid  #daa520\" }}\n        >\n          <BiLock color=\"#e0e0e0\" size={48} />\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          date=\"Stage 5\"\n          dateClassName={styles.Date}\n          textClassName={styles.RoadmapText}\n          iconClassName={styles.Icon}\n          icon={<FaChartLine color=\"#e0e0e0\" size={36} />}\n          contentArrowStyle={{ borderRight: \"1vh solid  #daa520\" }}\n        >\n          <BiLock color=\"#e0e0e0\" size={48} />\n        </VerticalTimelineElement>\n        <VerticalTimelineElement\n          className=\"vertical-timeline-element--work\"\n          iconClassName={styles.Icon}\n          icon={<RiStarLine color=\"#e0e0e0\" size={36} />}\n        ></VerticalTimelineElement>\n      </VerticalTimeline>\n    </>\n  );\n};\n\nexport default Roadmap;\n","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Tokenomics.module.css\";\n\nconst Tokenomics = () => {\n  return (\n    <>\n      <Row className=\"justify-content-center\">\n        <Col\n          xs={10}\n          md={8}\n          lg={6}\n          className={classNames(\n            mainStyles.CommonElement,\n            mainStyles.Title,\n            styles.TokenomicsTitle\n          )}\n        >\n          Tokenomics\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card className={classNames(mainStyles.CommonElement, styles.Card)}>\n            <Card.Body>\n              <Card.Title className={classNames(styles.TokenomicsCardTitle)}>\n                1% Reward\n              </Card.Title>\n              <Card.Text>\n                Reward is paid to holders in PDM. Hold on your Padlo and you\n                will get even more Padlo!\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Card className={mainStyles.CommonElement}>\n            <Card.Body>\n              <Card.Title className={classNames(styles.TokenomicsCardTitle)}>\n                3% liquidity pool\n              </Card.Title>\n              <Card.Text>\n                3% of every transaction is put to liquidity pool to make Padlo\n                more stable against big moves\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col>\n          <Card className={mainStyles.CommonElement}>\n            <Card.Body>\n              <Card.Title className={classNames(styles.TokenomicsCardTitle)}>\n                3% Treasury\n              </Card.Title>\n              <Card.Text>\n                We need some funds, for example for marketing to get more\n                friends for Padlo. We're always looking for ways to grow this\n                great community!\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Tokenomics;\n","export default __webpack_public_path__ + \"static/media/PadloMoon_litepaper.889dcbfd.pdf\";","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Telegram, Twitter } from \"react-bootstrap-icons\";\nimport styles from \"./Navigation.module.css\";\n// @ts-ignore\nimport pdf from \"../../assets/PadloMoon_litepaper.pdf\";\n\nconst Navigation = () => {\n  return (\n    <Navbar\n      expand=\"lg\"\n      sticky=\"top\"\n      collapseOnSelect\n      className={styles.NavbarCustom}\n    >\n      <Container>\n        <Navbar.Brand href=\"#\" className={styles.Brand}>\n          PadloMoon\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\" navbarScroll>\n            <Nav.Link href=\"/#home\" className={styles.NavbarLink}>\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"/#tokenomics\" className={styles.NavbarLink}>\n              Tokenomics\n            </Nav.Link>\n            <Nav.Link href=\"/#roadmap\" className={styles.NavbarLink}>\n              Roadmap\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/poker\" className={styles.NavbarLink}>\n              Program-X\n            </Nav.Link>\n            <Nav.Link\n              href={pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={styles.NavbarLink}\n            >\n              Litepaper\n            </Nav.Link>\n            <Nav.Link\n              href=\"https://t.me/PADLOmoon\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={classNames(styles.NavbarLink, styles.NavbarIcon)}\n            >\n              <Telegram className={styles.Icon} />\n            </Nav.Link>\n            <Nav.Link\n              href=\"https://twitter.com/PadloMoon\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={classNames(styles.NavbarLink, styles.NavbarIcon)}\n            >\n              <Twitter className={styles.Icon} />\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import * as React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Telegram, Twitter } from \"react-bootstrap-icons\";\nimport styles from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return (\n    <Container fluid className={styles.Footer}>\n      <div>Copyright &copy;2022 PadloMoon</div>\n      <div className={styles.Links}>\n        <div>\n          <a href=\"#home\">Home</a>\n          <a href=\"#about\">About</a>\n          <a href=\"#tokenomics\">Tokenomics</a>\n          <a href=\"#roadmap\">Roadmap</a>\n        </div>\n        <div>\n          <a href=\"https://t.me/PADLOmoon\" target=\"_blank\" rel=\"noreferrer\">\n            <Telegram />\n          </a>\n          <a\n            href=\"https://twitter.com/PadloMoon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Twitter />\n          </a>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/Padlologo_new_transparent.27530702.png\";","import React from \"react\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport Roadmap from \"../../components/Roadmap/Roadmap\";\nimport classNames from \"classnames\";\nimport Tokenomics from \"../../components/Tokenomics/Tokenomics\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport Footer from \"../../components/Footer/Footer\";\n\nimport logo from \"../../assets/images/Padlologo_new_transparent.png\";\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./App.module.css\";\n\nconst App = () => {\n  console.log(\"styles\", styles);\n  return (\n    <>\n      <Container fluid=\"lg\" className={mainStyles.Container}>\n        {/* eslint-disable-next-line */}\n        <a id=\"home\" />\n        <Navigation />\n        <Row className=\"justify-content-center\">\n          <Image src={logo} alt=\"padlo logo\" className={styles.Logo} />\n        </Row>\n        <Row>\n          <div className={styles.LogoTitle}>PadloMoon</div>\n        </Row>\n        {/* eslint-disable-next-line */}\n        <a id=\"about\" />\n        <Row className=\"justify-content-center\">\n          <Col\n            lg=\"10\"\n            className={classNames(styles.About, mainStyles.CommonElement)}\n          >\n            <p>\n              Meet Padlo, 1920´s Gangster-type gentleman, who launched token\n              named after him, first ever on Crow Finance launchpad. Padlo\n              rewards his holders with PDM token from every transaction. Later\n              on you will be introduced with his amazing NFT collection and\n              perhaps few other great utilities as well!\n            </p>\n          </Col>\n        </Row>\n        {/* eslint-disable-next-line */}\n        <a id=\"tokenomics\" />\n        <Tokenomics />\n        {/* eslint-disable-next-line */}\n        <a id=\"roadmap\" />\n        <Roadmap />\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Navigation from \"../../components/Navigation/Navigation\";\n\nimport PokerCollab from \"../../assets/images/padlo_poker_programx.png\";\n\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Poker.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Poker = () => {\n  return (\n    <>\n      <Container fluid=\"lg\" className={mainStyles.Container}>\n        <Navigation />\n        <Row className=\"justify-content-center\">\n          <Col md=\"10\">\n            <div\n              className={classNames(\n                mainStyles.CommonElement,\n                styles.PokerInfoContainer\n              )}\n            >\n              <h3 className={styles.PokerTitle}>\n                PadloMoon’s poker tournaments\n              </h3>\n              <p>\n                Padlo likes to gamble and even more gamble with friends and\n                community members. PadloMoon community collaboration program\n                (Program-X) is live and couple of communities and projects have\n                already joined! Together with our partners we run series of\n                poker tournaments and challenge more projects and communities to\n                join for one big family, where everyone has a chance to connect\n                with other projects and communities for beneficial purposes or\n                even partnering for each other.\n              </p>\n            </div>\n          </Col>\n        </Row>\n        {/* <Row>\n          <h1 className={styles.PokerLogoTitle}>Coming up next!</h1>\n          <Image src={PokerCollab} className={styles.PokerLogo} />\n        </Row> */}\n        <Row className=\"justify-content-center\">\n          <Col md=\"10\">\n            <div\n              className={classNames(mainStyles.CommonElement, styles.Calendar)}\n            >\n              <h4 className={styles.CalendarTitle}>Poker Calendar</h4>\n              <ul>\n                <li>25.2. PadloMoon Poker Tournament #1</li>\n                <li>5.3. PadloMoon x Crows Club</li>\n                <li>12.3. PadloMoon x CroTrend x Crows Club x The Cronicle</li>\n                <li>\n                  18.3. PadloMoon x Boonk Gang x Crypto Investors x Crows Club\n                </li>\n                <li>26.3. PadloMoon x Kronos x Crows Club</li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n        {/* <Row>\n          <Link to=\"/poker-registration\" className={mainStyles.Link}>\n            Register for next tournament!\n          </Link>\n        </Row> */}\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default Poker;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export default __webpack_public_path__ + \"static/media/metamask-minified.386c9d10.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect-logo.dfa25e47.svg\";","export default __webpack_public_path__ + \"static/media/defiwallet.17357c58.png\";","export const configVars = {\n  mode: \"regular\",\n  rpcNetwork_test: {\n    rpcUrl: \"https://cronos-testnet-3.crypto.org:8545/\",\n    chainId: 338,\n    chainIdHex: \"0x152\",\n    chainName: \"Cronos Testnet\",\n    chainType: \"mainnet\",\n    nativeCurrency: {\n      name: \"CRO\",\n      symbol: \"CRO\",\n      decimals: 18,\n    },\n    blockExplorerUrl: \"https://cronos.crypto.org/explorer/testnet3/\",\n  },\n  rpcNetwork: {\n    rpcUrl: \"https://cronos.crowfi.app\",\n    // rpcUrl: \"https://evm.cronos.org/\",\n    chainId: 25,\n    chainIdHex: \"0x19\",\n    chainName: \"Cronos Mainnet Beta\",\n    chainType: \"mainnet\",\n    nativeCurrency: {\n      name: \"CRO\",\n      symbol: \"CRO\",\n      decimals: 18,\n    },\n    blockExplorerUrl: \"https://cronoscan.com/\",\n  },\n  padlo: {\n    address: \"0x9D5aDE1E4dd84E3e0818542Bf37f24F22648d946\",\n  },\n  test_devWallet: \"0x73926C8859D454ED6b014f5741D0b052208d2710\",\n  devWallet: \"0xbad10b866C88Fd0752691e98AF3eCBa3E61CabF4\",\n  pokerRegistrationFee: 1,\n};\n","import { ethers } from \"ethers\";\n\nimport * as config from \"../config/config\";\nimport PadloJson from \"../config/contracts/padloContract.json\";\n\nexport const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\nexport const hexToInt = (s: string) => {\n  const bn = ethers.BigNumber.from(s);\n  return parseInt(bn.toString());\n};\n\nexport const reloadApp = () => {\n  window.location.reload();\n};\n\n// Get the last block number\nexport const getLastBlockNumber = async (ethersProvider: any): Promise<any> => {\n  return ethersProvider.getBlockNumber();\n};\n\n// Get the CRO balance of address\nexport const getCroBalance = async (\n  serverWeb3Provider: ethers.providers.JsonRpcProvider | null,\n  address: string\n): Promise<number> => {\n  const balance = await serverWeb3Provider?.getBalance(address);\n  // Balance is rounded at 2 decimals instead of 18, to simplify the UI\n  return (\n    ethers.BigNumber.from(balance)\n      .div(ethers.BigNumber.from(\"10000000000000000\"))\n      .toNumber() / 100\n  );\n};\n\n// Get the CTOK token balance of address\n// The CTOK is a ERC20 smart contract, its address is retrieved from\n// the config/config.ts file\n// and the ABI from config/contracts/MyERC20MintableByAnyone.json\nexport const getPadloBalance = async (\n  serverWeb3Provider: ethers.providers.JsonRpcProvider | null,\n  address: string\n): Promise<number> => {\n  // Create ethers.Contract object using the smart contract's ABI\n  const contractAbi = PadloJson.abi;\n  if (!serverWeb3Provider) {\n    console.log(\"ServiceProvider not given\");\n    return 0;\n  }\n  const readContractInstance = new ethers.Contract(\n    config.configVars.padlo.address,\n    contractAbi,\n    serverWeb3Provider\n  );\n  const contractResponse = await readContractInstance[\"balanceOf\"](address);\n  // Balance is rounded at 2 decimals instead of 18, to simplify UI\n  return (\n    ethers.BigNumber.from(contractResponse)\n      .div(ethers.BigNumber.from(\"10000000000\"))\n      .toNumber() / 100\n  );\n};\n\nexport function wait(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import { ethers } from \"ethers\";\n\nimport { IWallet, defaultWallet } from \"../slices/interfaces\";\nimport * as utils from \"./utils\";\nimport * as config from \"../config/config\";\n\n// One feature of MetaMask is that the Dapp developer\n// can programmatically\n// change the network that the browser\n// extension is connected to.\n// This feature is implemented below,\n// to automatically set - up Cronos\nexport const switchNetwork = async () => {\n  try {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: config.configVars.rpcNetwork.chainIdHex }],\n    });\n  } catch (e) {\n    console.log(e);\n    await window.ethereum.request({\n      method: \"wallet_addEthereumChain\",\n      params: [\n        {\n          chainId: config.configVars.rpcNetwork.chainIdHex,\n          chainName: config.configVars.rpcNetwork.chainName,\n          rpcUrls: [config.configVars.rpcNetwork.rpcUrl],\n          nativeCurrency: config.configVars.rpcNetwork.nativeCurrency,\n          blockExplorerUrls: [config.configVars.rpcNetwork.blockExplorerUrl],\n        },\n      ],\n    });\n  }\n};\n\n// Main login flow for injected wallet like MetaMask\nexport const connect = async (): Promise<IWallet> => {\n  try {\n    let chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n    if (!(chainId === config.configVars.rpcNetwork.chainIdHex)) {\n      await switchNetwork();\n      await utils.delay(2000);\n      return defaultWallet;\n    }\n\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    // It is possible to subscribe to events chainChanged,\n    // accountsChanged or disconnect,\n    // and reload the Dapp whenever one of these events occurs\n    window.ethereum.on(\"chainChanged\", utils.reloadApp);\n    window.ethereum.on(\"accountsChanged\", utils.reloadApp);\n    window.ethereum.on(\"disconnect\", utils.reloadApp);\n\n    return {\n      ...defaultWallet,\n      walletProviderName: \"metamask\",\n      address: accounts[0],\n      browserWeb3Provider: new ethers.providers.Web3Provider(window.ethereum),\n      serverWeb3Provider: new ethers.providers.JsonRpcProvider(\n        config.configVars.rpcNetwork.rpcUrl\n      ),\n      connected: true,\n      chainId: utils.hexToInt(\n        await window.ethereum.request({ method: \"eth_chainId\" })\n      ),\n    };\n  } catch (e) {\n    console.log(\"error\", e);\n    window.alert(e);\n    return defaultWallet;\n  }\n};\n","import { ethers } from \"ethers\"; // npm install ethers\n\n// This is the SDK provided by Crypto.com DeFi Wallet\nimport { DeFiWeb3Connector } from \"deficonnect\";\n\nimport * as config from \"../config/config\";\nimport * as utils from \"./utils\";\nimport { IWallet, defaultWallet } from \"../slices/interfaces\";\n\n// Main login flow for Crypto.com DeFi Wallet with Wallet Extension\n// The connector must be activated, then it exposes a provider\n// that is used by the ethers Web3Provider constructor.\nexport const connect = async (): Promise<IWallet> => {\n  try {\n    const connector = new DeFiWeb3Connector({\n      supportedChainIds: [config.configVars.rpcNetwork.chainId],\n      rpc: {\n        [config.configVars.rpcNetwork.chainId]:\n          config.configVars.rpcNetwork.rpcUrl,\n      },\n      pollingInterval: 15000,\n    });\n    await connector.activate();\n    const provider = await connector.getProvider();\n    const web3Provider = new ethers.providers.Web3Provider(provider);\n    if (\n      !(parseInt(provider.chainId) === config.configVars.rpcNetwork.chainId)\n    ) {\n      window.alert(\n        \"Switch your Wallet to blockchain network \" +\n          config.configVars.rpcNetwork.chainName\n      );\n      return defaultWallet;\n    }\n    // Subscribe to events that reload the app\n    connector.on(\"session_update\", utils.reloadApp);\n    connector.on(\"Web3ReactDeactivate\", utils.reloadApp);\n    connector.on(\"Web3ReactUpdate\", utils.reloadApp);\n\n    return {\n      ...defaultWallet,\n      walletProviderName: \"defiwallet\",\n      address: (await web3Provider.listAccounts())[0],\n      browserWeb3Provider: web3Provider,\n      serverWeb3Provider: new ethers.providers.JsonRpcProvider(\n        config.configVars.rpcNetwork.rpcUrl\n      ),\n      wcProvider: provider,\n      wcConnector: connector,\n      connected: true,\n      chainId: provider.chainId,\n    };\n  } catch (e) {\n    window.alert(e);\n    return defaultWallet;\n  }\n};\n","// wallet-connect.ts\nimport { ethers } from \"ethers\"; // npm install ethers\n\n// This is the SDK provided by Wallet Connect\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nimport * as config from \"../config/config\";\nimport * as utils from \"./utils\";\nimport { IWallet, defaultWallet } from \"../slices/interfaces\";\n\n// Main login flow for Crypto.com DeFi Wallet with Wallet Extension\n// The connector must be activated, then it exposes a provider\n// that is used by the ethers Web3Provider constructor.\nexport const connect = async (): Promise<IWallet> => {\n  try {\n    // Reset cache\n    localStorage.clear();\n    const provider = new WalletConnectProvider({\n      rpc: {\n        [config.configVars.rpcNetwork.chainId]:\n          config.configVars.rpcNetwork.rpcUrl,\n      },\n      // This chainId parameter is not mentioned\n      // in the WalletConnect documentation,\n      // But is necessary otherwise\n      // WalletConnect will connect to Ethereum mainnet\n      chainId: config.configVars.rpcNetwork.chainId,\n    });\n    await provider.enable();\n    const ethersProvider = new ethers.providers.Web3Provider(provider);\n    if (!(provider.chainId === config.configVars.rpcNetwork.chainId)) {\n      window.alert(\n        \"Switch your Wallet to blockchain network \" +\n          config.configVars.rpcNetwork.chainName\n      );\n      return defaultWallet;\n    }\n    // Subscribe to events that reload the app\n    provider.on(\"accountsChanged\", utils.reloadApp);\n    provider.on(\"chainChanged\", utils.reloadApp);\n    provider.on(\"disconnect\", utils.reloadApp);\n    return {\n      ...defaultWallet,\n      walletProviderName: \"walletconnect\",\n      address: (await ethersProvider.listAccounts())[0],\n      browserWeb3Provider: ethersProvider,\n      serverWeb3Provider: new ethers.providers.JsonRpcProvider(\n        config.configVars.rpcNetwork.rpcUrl\n      ),\n      wcProvider: provider,\n      connected: true,\n      chainId: provider.chainId,\n    };\n  } catch (e) {\n    window.alert(e);\n    return defaultWallet;\n  }\n};\n","import React from \"react\";\nimport { Modal, Card } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport { useAppDispatch } from \"../../slices/hooks\";\nimport MetamaskLogo from \"../../assets/icons/metamask-minified.svg\";\nimport WalletConnectLogo from \"../../assets/icons/walletconnect-logo.svg\";\nimport DefiWalletLogo from \"../../assets/icons/defiwallet.png\";\n\nimport * as walletMetamask from \"../../utils/metamask\";\nimport * as walletDefiwallet from \"../../utils/defiwallet\";\nimport * as walletConnect from \"../../utils/walletConnect\";\nimport {\n  setRefreshing,\n  updateQueryResults,\n  updateWallet,\n} from \"../../slices/walletSlice\";\nimport * as utils from \"../../utils/utils\";\nimport { defaultQueryResults, IWallet } from \"../../slices/interfaces\";\n\nimport styles from \"./WalletConnect.module.css\";\n\ntype Props = {\n  show: boolean;\n  handleClose: () => void;\n};\n\nconst WalletConnect = (props: Props) => {\n  const { show, handleClose } = props;\n\n  const dispatch = useAppDispatch();\n  const handleConnect = async (\n    option: \"metamask-injected\" | \"defiwallet\" | \"wallet-connect\"\n  ) => {\n    handleClose();\n    dispatch(setRefreshing({ status: true, message: \"Connecting wallet...\" }));\n    let wallet: IWallet;\n    switch (option) {\n      case \"metamask-injected\":\n        wallet = await walletMetamask.connect();\n        break;\n      case \"defiwallet\":\n        wallet = await walletDefiwallet.connect();\n        break;\n      case \"wallet-connect\":\n        wallet = await walletConnect.connect();\n        break;\n      default:\n        wallet = await walletMetamask.connect();\n        break;\n    }\n    if (wallet.connected) {\n      const lastBlockNumber = await utils.getLastBlockNumber(\n        wallet.serverWeb3Provider\n      );\n      const croBalance = await utils.getCroBalance(\n        wallet.serverWeb3Provider,\n        wallet.address\n      );\n      const padloBalance = await utils.getPadloBalance(\n        wallet.serverWeb3Provider,\n        wallet.address\n      );\n      console.log(\"padloBalance\", padloBalance);\n      console.log(\"cro\", croBalance);\n      dispatch(updateWallet(wallet));\n      dispatch(\n        updateQueryResults({\n          ...defaultQueryResults,\n          lastBlockNumber,\n          croBalance,\n          padloBalance: 0,\n        })\n      );\n    }\n    dispatch(setRefreshing({ status: false, message: \"Completed\" }));\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title className={styles.ModalTitle}>\n          Connect your wallet\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.ModalBody}>\n        <Card className={styles.card}>\n          <Card.Img\n            variant=\"top\"\n            src={MetamaskLogo}\n            className={classNames(styles.MetamaskLogo, styles.WalletLogo)}\n            onClick={() => handleConnect(\"metamask-injected\")}\n          />\n          <Card.Body>\n            <Card.Text className={styles.WalletName}>Metamask</Card.Text>\n          </Card.Body>\n        </Card>\n        <Card className={styles.card}>\n          <Card.Img\n            variant=\"top\"\n            className={classNames(styles.WalletconnectLogo, styles.WalletLogo)}\n            src={WalletConnectLogo}\n            onClick={() => handleConnect(\"wallet-connect\")}\n          />\n          <Card.Body>\n            <Card.Text className={styles.WalletName}>WalletConnect</Card.Text>\n          </Card.Body>\n        </Card>\n        <Card className={styles.card}>\n          <Card.Img\n            variant=\"top\"\n            className={classNames(styles.DefiWalletLogo, styles.WalletLogo)}\n            src={DefiWalletLogo}\n            onClick={() => handleConnect(\"defiwallet\")}\n          />\n          <Card.Body>\n            <Card.Text className={styles.WalletName}>\n              Crypto.com DefiWallet\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default WalletConnect;\n","import { ethers } from \"ethers\";\nimport { configVars } from \"../config/config\";\nimport { store } from \"../slices/store\";\nimport { setProcessing, setTransaction } from \"../slices/transactionSlice\";\n\nexport async function payWithMetamask(sender: string): Promise<string | null> {\n  const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  const signer = provider.getSigner();\n  store.dispatch(setProcessing(true));\n\n  const tx = {\n    from: sender,\n    to: configVars.devWallet,\n    value: ethers.utils.parseEther(String(configVars.pokerRegistrationFee)),\n    nonce: await provider.getTransactionCount(sender, \"latest\"),\n    gasLimit: ethers.utils.hexlify(200000),\n    gasPrice: ethers.utils.hexlify(await provider.getGasPrice()),\n  };\n\n  try {\n    const transaction = await signer.sendTransaction(tx);\n    store.dispatch(setTransaction(transaction.hash));\n    store.dispatch(setProcessing(false));\n    return transaction.hash;\n  } catch (error) {\n    console.log(\"error\", error);\n    store.dispatch(setProcessing(false));\n    return null;\n  }\n}\n","import env from \"react-dotenv\";\nimport emailjs from \"@emailjs/browser\";\n\nexport async function sendRegistrationEmail(\n  player: string,\n  transactionHash: string\n): Promise<boolean> {\n  const templateParams = {\n    from_name: player,\n    transaction_hash: transactionHash,\n  };\n  const res = await emailjs.send(\n    env.POKER_BOT_SERVICE_ID,\n    env.POKER_BOT_TEMPLATE_ID,\n    templateParams,\n    env.POKER_BOT_USER_ID\n  );\n  console.log(\"res\", res);\n  if (res) {\n    return true;\n  }\n  return false;\n}\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\n\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Form,\n  Modal,\n  Spinner,\n} from \"react-bootstrap\";\n\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport Footer from \"../../components/Footer/Footer\";\nimport WalletConnect from \"../../components/WalletConnect/WalletConnect\";\n\nimport { useAppDispatch, useAppSelector } from \"../../slices/hooks\";\nimport { defaultWallet } from \"../../slices/interfaces\";\nimport { setRefreshing, updateWallet } from \"../../slices/walletSlice\";\nimport { wait } from \"../../utils/utils\";\nimport { payWithMetamask } from \"../../utils/transactions\";\n\nimport styles from \"./PokerRegistration.module.css\";\nimport mainStyles from \"../../styles/main.module.css\";\nimport { sendRegistrationEmail } from \"../../utils/sendRegistrationEmail\";\n\ntype WalletState = \"connected\" | \"loading\" | \"disconnected\";\n\nconst REGISTRATION_FEE = 60;\nconst PADLO_FEE = 6;\nconst POKERCLUB_URL =\n  \"https://www.pokernow.club/mtt/cronos-poker-night-4-GICfoTRwyA\";\n\nconst PokerRegistration = () => {\n  const [showWalletConnect, setShowWalletConnect] = useState(false);\n  const [showRegistrationModal, setShowRegistrationModal] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [error, setError] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const refreshing = useAppSelector((state) => state.wallet.refreshing);\n  const wallet = useAppSelector((state) => state.wallet.wallet);\n  const processing = useAppSelector((state) => state.transaction.processing);\n\n  const toggleWalletConnect = () => setShowWalletConnect(!showWalletConnect);\n\n  const toggleRegistrationModal = () =>\n    setShowRegistrationModal(!showRegistrationModal);\n\n  const disconnect = async () => {\n    dispatch(setRefreshing({ status: true, message: \"Disconnecting\" }));\n    dispatch(updateWallet(defaultWallet));\n    await wait(1000);\n    dispatch(setRefreshing({ status: false, message: \"Completed\" }));\n  };\n\n  const getWalletState = (): WalletState => {\n    if (refreshing.status) {\n      return \"loading\";\n    }\n    if (wallet.address.length) {\n      return \"connected\";\n    }\n    return \"disconnected\";\n  };\n\n  const getWalletButtonTitle = (state: WalletState): string => {\n    switch (state) {\n      case \"loading\":\n        return refreshing.message;\n      case \"connected\":\n        return \"Disconnect\";\n      case \"disconnected\":\n        return \"Connect wallet\";\n      default:\n        return \"Connect wallet\";\n    }\n  };\n\n  const handleSubmit = async (event: any) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n      return;\n    }\n    toggleRegistrationModal();\n    const txRes = await payWithMetamask(wallet.address);\n    if (txRes) {\n      const emailRes = await sendRegistrationEmail(\n        event.target.username.value,\n        txRes\n      );\n      if (!emailRes) {\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n    event.target.username.value = \"\";\n    setValidated(true);\n  };\n\n  return (\n    <>\n      <Container fluid=\"lg\" className={mainStyles.Container}>\n        <Navigation />\n        <Row>\n          <Col style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button\n              disabled={refreshing.status}\n              size=\"lg\"\n              className={classNames(\n                mainStyles.ButtonSecondary,\n                styles.ConnectWalletButton\n              )}\n              onClick={\n                getWalletState() !== \"connected\"\n                  ? toggleWalletConnect\n                  : disconnect\n              }\n              active\n            >\n              {getWalletButtonTitle(getWalletState())}\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col xs={11} md={10} lg={8}>\n            <h1\n              className={classNames(mainStyles.Title, mainStyles.CommonElement)}\n            >\n              Register for Padlo's Poker Tournament!\n            </h1>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col\n            lg=\"10\"\n            className={classNames(\n              mainStyles.CommonElement,\n              styles.Registration\n            )}\n          >\n            <div>\n              <p>\n                First, register to Poker at{\" \"}\n                <a\n                  className={mainStyles.Link}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href={POKERCLUB_URL}\n                >\n                  Pokernow.club\n                </a>\n                . Then fill in your name, connect your wallet and hit register\n                button. Use the same name as in pokernow.club.\n              </p>\n              <p>\n                Registration fee is{\" \"}\n                <strong>{`${REGISTRATION_FEE} + ${PADLO_FEE} CRO`}</strong>\n              </p>\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Control\n                    className={styles.Input}\n                    required\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    name=\"username\"\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    Please enter a username\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Button\n                  className={classNames(mainStyles.Button, styles.SubmitButton)}\n                  disabled={!wallet.connected}\n                  type=\"submit\"\n                >\n                  {processing ? \"Processing\" : \"Register\"}\n                </Button>\n              </Form>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <WalletConnect\n        show={showWalletConnect}\n        handleClose={toggleWalletConnect}\n      />\n      <Footer />\n      <Modal\n        show={showRegistrationModal}\n        onHide={toggleRegistrationModal}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Registering to poker</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {processing ? (\n            <>\n              <Spinner animation=\"border\" />{\" \"}\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                  fontSize: \"1.1rem\",\n                  marginLeft: \"2rem\",\n                }}\n              >\n                Processing your registration\n              </span>\n            </>\n          ) : error ? (\n            \"Something went wrong with your registration. Check your transaction and if it was completed, contact admin@padlomoon.com\"\n          ) : (\n            \"Registration was completed! Thank you and see you on the table!\"\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button disabled={processing} onClick={toggleRegistrationModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default PokerRegistration;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./slices/store\";\nimport App from \"./routes/App/App\";\nimport Poker from \"./routes/Poker/Poker\";\nimport PokerRegistration from \"./routes/PokerRegistration/PokerRegistration\";\n\nimport \"./styles/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          <Route path=\"/poker\" element={<Poker />} />\n          <Route path=\"/poker-registration\" element={<PokerRegistration />} />\n        </Routes>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}