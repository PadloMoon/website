{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tendermint34Client = void 0;\n\nconst jsonrpc_1 = require(\"../jsonrpc\");\n\nconst rpcclients_1 = require(\"../rpcclients\");\n\nconst adaptor_1 = require(\"./adaptor\");\n\nconst requests = __importStar(require(\"./requests\"));\n\nclass Tendermint34Client {\n  /**\n   * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.\n   */\n  constructor(client) {\n    this.client = client;\n    this.p = adaptor_1.adaptor34.params;\n    this.r = adaptor_1.adaptor34.responses;\n  }\n  /**\n   * Creates a new Tendermint client for the given endpoint.\n   *\n   * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n   */\n\n\n  static async connect(url) {\n    const useHttp = url.startsWith(\"http://\") || url.startsWith(\"https://\");\n    const rpcClient = useHttp ? new rpcclients_1.HttpClient(url) : new rpcclients_1.WebsocketClient(url);\n    return Tendermint34Client.create(rpcClient);\n  }\n  /**\n   * Creates a new Tendermint client given an RPC client.\n   */\n\n\n  static async create(rpcClient) {\n    // For some very strange reason I don't understand, tests start to fail on some systems\n    // (our CI) when skipping the status call before doing other queries. Sleeping a little\n    // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n    // even in cases where we don't use the result.\n    const _version = await this.detectVersion(rpcClient);\n\n    return new Tendermint34Client(rpcClient);\n  }\n\n  static async detectVersion(client) {\n    const req = jsonrpc_1.createJsonRpcRequest(requests.Method.Status);\n    const response = await client.execute(req);\n    const result = response.result;\n\n    if (!result || !result.node_info) {\n      throw new Error(\"Unrecognized format for status response\");\n    }\n\n    const version = result.node_info.version;\n\n    if (typeof version !== \"string\") {\n      throw new Error(\"Unrecognized version format: must be string\");\n    }\n\n    return version;\n  }\n\n  disconnect() {\n    this.client.disconnect();\n  }\n\n  async abciInfo() {\n    const query = {\n      method: requests.Method.AbciInfo\n    };\n    return this.doCall(query, this.p.encodeAbciInfo, this.r.decodeAbciInfo);\n  }\n\n  async abciQuery(params) {\n    const query = {\n      params: params,\n      method: requests.Method.AbciQuery\n    };\n    return this.doCall(query, this.p.encodeAbciQuery, this.r.decodeAbciQuery);\n  }\n\n  async block(height) {\n    const query = {\n      method: requests.Method.Block,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlock, this.r.decodeBlock);\n  }\n\n  async blockResults(height) {\n    const query = {\n      method: requests.Method.BlockResults,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockResults, this.r.decodeBlockResults);\n  }\n  /**\n   * Search for events that are in a block.\n   *\n   * NOTE\n   * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n   */\n\n\n  async blockSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BlockSearch\n    };\n    const resp = await this.doCall(query, this.p.encodeBlockSearch, this.r.decodeBlockSearch);\n    return Object.assign(Object.assign({}, resp), {\n      // make sure we sort by height, as tendermint may be sorting by string value of the height\n      blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)\n    });\n  } // this should paginate through all blockSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  //\n  // NOTE\n  // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n\n\n  async blockSearchAll(params) {\n    let page = params.page || 1;\n    const blocks = [];\n    let done = false;\n\n    while (!done) {\n      const resp = await this.blockSearch(Object.assign(Object.assign({}, params), {\n        page: page\n      }));\n      blocks.push(...resp.blocks);\n\n      if (blocks.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    } // make sure we sort by height, as tendermint may be sorting by string value of the height\n    // and the earlier items may be in a higher page than the later items\n\n\n    blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n    return {\n      totalCount: blocks.length,\n      blocks: blocks\n    };\n  }\n  /**\n   * Queries block headers filtered by minHeight <= height <= maxHeight.\n   *\n   * @param minHeight The minimum height to be included in the result. Defaults to 0.\n   * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n   */\n\n\n  async blockchain(minHeight, maxHeight) {\n    const query = {\n      method: requests.Method.Blockchain,\n      params: {\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      }\n    };\n    return this.doCall(query, this.p.encodeBlockchain, this.r.decodeBlockchain);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for response\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n   */\n\n\n  async broadcastTxSync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxSync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxSync);\n  }\n  /**\n   * Broadcast transaction to mempool and do not wait for result\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n   */\n\n\n  async broadcastTxAsync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxAsync\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxAsync);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n   */\n\n\n  async broadcastTxCommit(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxCommit\n    };\n    return this.doCall(query, this.p.encodeBroadcastTx, this.r.decodeBroadcastTxCommit);\n  }\n\n  async commit(height) {\n    const query = {\n      method: requests.Method.Commit,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, this.p.encodeCommit, this.r.decodeCommit);\n  }\n\n  async genesis() {\n    const query = {\n      method: requests.Method.Genesis\n    };\n    return this.doCall(query, this.p.encodeGenesis, this.r.decodeGenesis);\n  }\n\n  async health() {\n    const query = {\n      method: requests.Method.Health\n    };\n    return this.doCall(query, this.p.encodeHealth, this.r.decodeHealth);\n  }\n\n  async status() {\n    const query = {\n      method: requests.Method.Status\n    };\n    return this.doCall(query, this.p.encodeStatus, this.r.decodeStatus);\n  }\n\n  subscribeNewBlock() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlock\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockEvent);\n  }\n\n  subscribeNewBlockHeader() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlockHeader\n      }\n    };\n    return this.subscribe(request, this.r.decodeNewBlockHeaderEvent);\n  }\n\n  subscribeTx(query) {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.Tx,\n        raw: query\n      }\n    };\n    return this.subscribe(request, this.r.decodeTxEvent);\n  }\n  /**\n   * Get a single transaction by hash\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n   */\n\n\n  async tx(params) {\n    const query = {\n      params: params,\n      method: requests.Method.Tx\n    };\n    return this.doCall(query, this.p.encodeTx, this.r.decodeTx);\n  }\n  /**\n   * Search for transactions that are in a block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n   */\n\n\n  async txSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.TxSearch\n    };\n    return this.doCall(query, this.p.encodeTxSearch, this.r.decodeTxSearch);\n  } // this should paginate through all txSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n\n\n  async txSearchAll(params) {\n    let page = params.page || 1;\n    const txs = [];\n    let done = false;\n\n    while (!done) {\n      const resp = await this.txSearch(Object.assign(Object.assign({}, params), {\n        page: page\n      }));\n      txs.push(...resp.txs);\n\n      if (txs.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n\n    return {\n      totalCount: txs.length,\n      txs: txs\n    };\n  }\n\n  async validators(params) {\n    const query = {\n      method: requests.Method.Validators,\n      params: params\n    };\n    return this.doCall(query, this.p.encodeValidators, this.r.decodeValidators);\n  }\n\n  async validatorsAll(height) {\n    const validators = [];\n    let page = 1;\n    let done = false;\n    let blockHeight = height;\n\n    while (!done) {\n      const response = await this.validators({\n        per_page: 50,\n        height: blockHeight,\n        page: page\n      });\n      validators.push(...response.validators);\n      blockHeight = blockHeight || response.blockHeight;\n\n      if (validators.length < response.total) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n\n    return {\n      // NOTE: Default value is for type safety but this should always be set\n      blockHeight: blockHeight !== null && blockHeight !== void 0 ? blockHeight : 0,\n      count: validators.length,\n      total: validators.length,\n      validators: validators\n    };\n  } // doCall is a helper to handle the encode/call/decode logic\n\n\n  async doCall(request, encode, decode) {\n    const req = encode(request);\n    const result = await this.client.execute(req);\n    return decode(result);\n  }\n\n  subscribe(request, decode) {\n    if (!rpcclients_1.instanceOfRpcStreamingClient(this.client)) {\n      throw new Error(\"This RPC client type cannot subscribe to events\");\n    }\n\n    const req = this.p.encodeSubscribe(request);\n    const eventStream = this.client.listen(req);\n    return eventStream.map(event => {\n      return decode(event);\n    });\n  }\n\n}\n\nexports.Tendermint34Client = Tendermint34Client;","map":{"version":3,"mappings":"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","names":["Tendermint34Client","constructor","client","p","adaptor_1","params","r","responses","connect","url","useHttp","startsWith","rpcClient","rpcclients_1","create","_version","detectVersion","req","jsonrpc_1","requests","Method","Status","response","execute","result","node_info","Error","version","disconnect","abciInfo","query","method","AbciInfo","doCall","encodeAbciInfo","decodeAbciInfo","abciQuery","AbciQuery","encodeAbciQuery","decodeAbciQuery","block","height","Block","encodeBlock","decodeBlock","blockResults","BlockResults","encodeBlockResults","decodeBlockResults","blockSearch","BlockSearch","resp","encodeBlockSearch","decodeBlockSearch","blocks","sort","a","b","header","blockSearchAll","page","done","Object","push","length","totalCount","blockchain","minHeight","maxHeight","Blockchain","encodeBlockchain","decodeBlockchain","broadcastTxSync","BroadcastTxSync","encodeBroadcastTx","decodeBroadcastTxSync","broadcastTxAsync","BroadcastTxAsync","decodeBroadcastTxAsync","broadcastTxCommit","BroadcastTxCommit","decodeBroadcastTxCommit","commit","Commit","encodeCommit","decodeCommit","genesis","Genesis","encodeGenesis","decodeGenesis","health","Health","encodeHealth","decodeHealth","status","encodeStatus","decodeStatus","subscribeNewBlock","request","Subscribe","type","SubscriptionEventType","NewBlock","subscribe","decodeNewBlockEvent","subscribeNewBlockHeader","NewBlockHeader","decodeNewBlockHeaderEvent","subscribeTx","Tx","raw","decodeTxEvent","tx","encodeTx","decodeTx","txSearch","TxSearch","encodeTxSearch","decodeTxSearch","txSearchAll","txs","validators","Validators","encodeValidators","decodeValidators","validatorsAll","blockHeight","per_page","total","count","encode","decode","encodeSubscribe","eventStream","listen","map","event","exports"],"sourceRoot":"","sources":["../../src/tendermint34/tendermint34client.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}