{"ast":null,"code":"import { parsePersonalSign, parseTransactionData, convertArrayBufferToHex, convertHexToArrayBuffer, getClientMeta, payloadId, uuid, formatRpcError, parseWalletConnectUri, convertNumberToHex, isJsonRpcResponseSuccess, isJsonRpcResponseError, isSilentPayload, getLocal, signingMethods, mobileLinkChoiceKey, isMobile, removeLocal } from \"@deficonnect/utils\";\nimport SocketTransport from \"@deficonnect/socket-transport\";\nimport { ERROR_SESSION_CONNECTED, ERROR_SESSION_DISCONNECTED, ERROR_SESSION_REJECTED, ERROR_MISSING_JSON_RPC, ERROR_MISSING_RESULT, ERROR_MISSING_ERROR, ERROR_MISSING_METHOD, ERROR_MISSING_ID, ERROR_INVALID_RESPONSE, ERROR_INVALID_URI, ERROR_MISSING_REQUIRED, ERROR_QRCODE_MODAL_NOT_PROVIDED, ERROR_QRCODE_MODAL_USER_CLOSED } from \"./errors\";\nimport EventManager from \"./events\";\nimport SessionStorage from \"./storage\";\nimport { getBridgeUrl } from \"./url\";\n\nclass Connector {\n  constructor(opts) {\n    this.protocol = \"wc\";\n    this.version = 3;\n    this._bridge = \"\";\n    this._key = null;\n    this._clientId = \"\";\n    this._clientMeta = null;\n    this._peerId = \"\";\n    this._peerMeta = null;\n    this._handshakeId = 0;\n    this._handshakeTopic = \"\";\n    this._connected = false;\n    this._accounts = [];\n    this._chainId = \"\";\n    this._chainType = \"\";\n    this._rpcUrl = \"\";\n    this._selectedWalletId = \"\";\n    this._wallets = [];\n    this._eventManager = new EventManager();\n    this._clientMeta = opts.connectorOpts.clientMeta || getClientMeta() || null;\n    this._cryptoLib = opts.cryptoLib;\n    this._sessionStorage = opts.sessionStorage || new SessionStorage(opts.connectorOpts.storageId);\n    this._qrcodeModal = opts.connectorOpts.qrcodeModal;\n    this._qrcodeModalOptions = opts.connectorOpts.qrcodeModalOptions;\n    this._signingMethods = [...signingMethods, ...(opts.connectorOpts.signingMethods || [])];\n\n    if (!opts.connectorOpts.bridge && !opts.connectorOpts.uri && !opts.connectorOpts.session) {\n      throw new Error(ERROR_MISSING_REQUIRED);\n    }\n\n    if (opts.connectorOpts.bridge) {\n      this.bridge = getBridgeUrl(opts.connectorOpts.bridge);\n    }\n\n    if (opts.connectorOpts.uri) {\n      this.uri = opts.connectorOpts.uri;\n    }\n\n    const session = opts.connectorOpts.session || this._getStorageSession();\n\n    if (session) {\n      this.session = session;\n    }\n\n    if (this.handshakeId) {\n      this._subscribeToSessionResponse(this.handshakeId, \"Session request rejected\");\n    }\n\n    this._transport = opts.transport || new SocketTransport({\n      protocol: this.protocol,\n      version: this.version,\n      url: this.bridge,\n      subscriptions: [this.clientId]\n    });\n\n    this._subscribeToInternalEvents();\n\n    this._initTransport();\n\n    if (opts.connectorOpts.uri) {\n      this._subscribeToSessionRequest();\n    }\n\n    if (opts.pushServerOpts) {\n      this._registerPushServer(opts.pushServerOpts);\n    }\n  }\n\n  set bridge(value) {\n    if (!value) {\n      return;\n    }\n\n    this._bridge = value;\n  }\n\n  get bridge() {\n    return this._bridge;\n  }\n\n  set key(value) {\n    if (!value) {\n      return;\n    }\n\n    const key = convertHexToArrayBuffer(value);\n    this._key = key;\n  }\n\n  get key() {\n    if (this._key) {\n      const key = convertArrayBufferToHex(this._key, true);\n      return key;\n    }\n\n    return \"\";\n  }\n\n  set clientId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._clientId = value;\n  }\n\n  get clientId() {\n    let clientId = this._clientId;\n\n    if (!clientId) {\n      clientId = this._clientId = uuid();\n    }\n\n    return this._clientId;\n  }\n\n  set peerId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._peerId = value;\n  }\n\n  get peerId() {\n    return this._peerId;\n  }\n\n  set clientMeta(value) {}\n\n  get clientMeta() {\n    let clientMeta = this._clientMeta;\n\n    if (!clientMeta) {\n      clientMeta = this._clientMeta = getClientMeta();\n    }\n\n    return clientMeta;\n  }\n\n  set peerMeta(value) {\n    this._peerMeta = value;\n  }\n\n  get peerMeta() {\n    const peerMeta = this._peerMeta;\n    return peerMeta;\n  }\n\n  set selectedWalletId(value) {\n    this._selectedWalletId = value;\n  }\n\n  get selectedWalletId() {\n    const selectedWalletId = this._selectedWalletId;\n    return selectedWalletId;\n  }\n\n  set wallets(value) {\n    this._wallets = value;\n  }\n\n  get wallets() {\n    const wallets = this._wallets;\n    return wallets;\n  }\n\n  set handshakeTopic(value) {\n    if (!value) {\n      return;\n    }\n\n    this._handshakeTopic = value;\n  }\n\n  get handshakeTopic() {\n    return this._handshakeTopic;\n  }\n\n  set handshakeId(value) {\n    if (!value) {\n      return;\n    }\n\n    this._handshakeId = value;\n  }\n\n  get handshakeId() {\n    return this._handshakeId;\n  }\n\n  get uri() {\n    const _uri = this._formatUri();\n\n    return _uri;\n  }\n\n  set uri(value) {\n    if (!value) {\n      return;\n    }\n\n    const {\n      handshakeTopic,\n      bridge,\n      key\n    } = this._parseUri(value);\n\n    this.handshakeTopic = handshakeTopic;\n    this.bridge = bridge;\n    this.key = key;\n  }\n\n  set chainId(value) {\n    this._chainId = value;\n  }\n\n  get chainId() {\n    const chainId = this._chainId;\n    return chainId;\n  }\n\n  set chainType(value) {\n    this._chainType = value;\n  }\n\n  get chainType() {\n    const chainType = this._chainType;\n    return chainType;\n  }\n\n  set accounts(value) {\n    this._accounts = value;\n  }\n\n  get accounts() {\n    const accounts = this._accounts;\n    return accounts;\n  }\n\n  set rpcUrl(value) {\n    this._rpcUrl = value;\n  }\n\n  get rpcUrl() {\n    const rpcUrl = this._rpcUrl;\n    return rpcUrl;\n  }\n\n  set connected(value) {}\n\n  get connected() {\n    return this._connected;\n  }\n\n  set pending(value) {}\n\n  get pending() {\n    return !!this._handshakeTopic;\n  }\n\n  get session() {\n    return {\n      connected: this.connected,\n      accounts: this.accounts,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      bridge: this.bridge,\n      key: this.key,\n      clientId: this.clientId,\n      clientMeta: this.clientMeta,\n      peerId: this.peerId,\n      peerMeta: this.peerMeta,\n      handshakeId: this.handshakeId,\n      handshakeTopic: this.handshakeTopic,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n  }\n\n  set session(value) {\n    if (!value) {\n      return;\n    }\n\n    this._connected = value.connected;\n    this.accounts = value.accounts;\n    this.chainId = value.chainId;\n    this.chainType = value.chainType;\n    this.bridge = value.bridge;\n    this.key = value.key;\n    this.clientId = value.clientId;\n    this.clientMeta = value.clientMeta;\n    this.peerId = value.peerId;\n    this.peerMeta = value.peerMeta;\n    this.handshakeId = value.handshakeId;\n    this.handshakeTopic = value.handshakeTopic;\n    this.selectedWalletId = value.selectedWalletId;\n    this.wallets = value.wallets;\n  }\n\n  on(event, callback) {\n    const eventEmitter = {\n      event,\n      callback\n    };\n\n    this._eventManager.subscribe(eventEmitter);\n  }\n\n  off(event) {\n    this._eventManager.unsubscribe(event);\n  }\n\n  async createInstantRequest(instantRequest) {\n    this._key = await this._generateKey();\n\n    const request = this._formatRequest({\n      method: \"dc_instantRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        request: this._formatRequest(instantRequest)\n      }]\n    });\n\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n\n    this.on(\"modal_closed\", () => {\n      throw new Error(ERROR_QRCODE_MODAL_USER_CLOSED);\n    });\n\n    const endInstantRequest = () => {\n      this.killSession();\n    };\n\n    try {\n      const result = await this._sendCallRequest(request);\n\n      if (result) {\n        endInstantRequest();\n      }\n\n      return result;\n    } catch (error) {\n      endInstantRequest();\n      throw error;\n    }\n  }\n\n  async connect(opts) {\n    if (!this._qrcodeModal) {\n      throw new Error(ERROR_QRCODE_MODAL_NOT_PROVIDED);\n    }\n\n    if (this.connected) {\n      return {\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      };\n    }\n\n    await this.createSession(opts);\n    return new Promise(async (resolve, reject) => {\n      this.on(\"modal_closed\", () => reject(new Error(ERROR_QRCODE_MODAL_USER_CLOSED)));\n      this.on(\"connect\", (error, payload) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(payload.params[0]);\n      });\n    });\n  }\n\n  async createSession(opts) {\n    var _a, _b, _c;\n\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    if (this.pending) {\n      return;\n    }\n\n    this._key = await this._generateKey();\n\n    const request = this._formatRequest({\n      method: \"dc_sessionRequest\",\n      params: [{\n        peerId: this.clientId,\n        peerMeta: this.clientMeta,\n        chainId: (_a = opts === null || opts === void 0 ? void 0 : opts.chainId) !== null && _a !== void 0 ? _a : null,\n        chainType: (_b = opts === null || opts === void 0 ? void 0 : opts.chainType) !== null && _b !== void 0 ? _b : null,\n        accountTypes: (_c = opts === null || opts === void 0 ? void 0 : opts.accountTypes) !== null && _c !== void 0 ? _c : [\"eth\", \"cro\", \"tcro\"]\n      }]\n    });\n\n    this.handshakeId = request.id;\n    this.handshakeTopic = uuid();\n\n    this._sendSessionRequest(request, \"Session update rejected\", {\n      topic: this.handshakeTopic\n    });\n\n    this._eventManager.trigger({\n      event: \"display_uri\",\n      params: [this.uri]\n    });\n  }\n\n  approveSession(sessionStatus) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.chainType = sessionStatus.chainType || \"eth\";\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    this.selectedWalletId = sessionStatus.selectedWalletId;\n    this.wallets = sessionStatus.wallets;\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      peerId: this.clientId,\n      peerMeta: this.clientMeta,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n    const response = {\n      id: this.handshakeId,\n      jsonrpc: \"2.1\",\n      result: sessionParams\n    };\n\n    this._sendResponse(response);\n\n    this._connected = true;\n\n    this._setStorageSession();\n\n    this._eventManager.trigger({\n      event: \"connect\",\n      params: [{\n        peerId: this.peerId,\n        peerMeta: this.peerMeta,\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      }]\n    });\n  }\n\n  rejectSession(sessionError) {\n    if (this._connected) {\n      throw new Error(ERROR_SESSION_CONNECTED);\n    }\n\n    const message = sessionError && sessionError.message ? sessionError.message : ERROR_SESSION_REJECTED;\n\n    const response = this._formatResponse({\n      id: this.handshakeId,\n      error: {\n        message\n      }\n    });\n\n    this._sendResponse(response);\n\n    this._connected = false;\n\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n\n    this._removeStorageSession();\n  }\n\n  updateSession(sessionStatus) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    this.chainId = sessionStatus.chainId;\n    this.accounts = sessionStatus.accounts;\n    this.chainType = sessionStatus.chainType || \"\";\n    this.rpcUrl = sessionStatus.rpcUrl || \"\";\n    this.selectedWalletId = sessionStatus.selectedWalletId;\n    this.wallets = sessionStatus.wallets;\n    const sessionParams = {\n      approved: true,\n      chainId: this.chainId,\n      chainType: this.chainType,\n      accounts: this.accounts,\n      rpcUrl: this.rpcUrl,\n      selectedWalletId: this.selectedWalletId,\n      wallets: this.wallets\n    };\n\n    const request = this._formatRequest({\n      method: \"dc_sessionUpdate\",\n      params: [sessionParams]\n    });\n\n    this._sendSessionRequest(request, \"Session update rejected\");\n\n    this._eventManager.trigger({\n      event: \"session_update\",\n      params: [{\n        chainId: this.chainId,\n        chainType: this.chainType,\n        accounts: this.accounts,\n        selectedWalletId: this.selectedWalletId,\n        wallets: this.wallets\n      }]\n    });\n\n    this._manageStorageSession();\n  }\n\n  async killSession(sessionError) {\n    const message = sessionError ? sessionError.message : \"Session Disconnected\";\n    const sessionParams = {\n      approved: false,\n      chainId: null,\n      chainType: null,\n      accounts: null,\n      selectedWalletId: null,\n      wallets: []\n    };\n\n    const request = this._formatRequest({\n      method: \"dc_sessionUpdate\",\n      params: [sessionParams]\n    });\n\n    await this._sendRequest(request);\n\n    this._handleSessionDisconnect(message);\n  }\n\n  async sendTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const parsedTx = parseTransactionData(tx);\n\n    const request = this._formatRequest({\n      method: \"eth_sendTransaction\",\n      params: [parsedTx]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async sendJSONRequest(jsonRequest, options) {\n    var _a, _b;\n\n    const request = {\n      id: payloadId(),\n      jsonrpc: \"2.1\",\n      method: jsonRequest.method,\n      params: (_a = jsonRequest.params) !== null && _a !== void 0 ? _a : [],\n      session: jsonRequest.session\n    };\n    const encryptionPayload = await this._encrypt(request);\n    const topic = this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = (_b = !(options === null || options === void 0 ? void 0 : options.forcePushNotification)) !== null && _b !== void 0 ? _b : isSilentPayload(request);\n\n    this._transport.send(payload, topic, silent);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return this._subscribeToCallResponse(request.id);\n  }\n\n  async signTransaction(tx) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const parsedTx = parseTransactionData(tx);\n\n    const request = this._formatRequest({\n      method: \"eth_signTransaction\",\n      params: [parsedTx]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const request = this._formatRequest({\n      method: \"eth_sign\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signPersonalMessage(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    params = parsePersonalSign(params);\n\n    const request = this._formatRequest({\n      method: \"personal_sign\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async signTypedData(params) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    const request = this._formatRequest({\n      method: \"eth_signTypedData\",\n      params\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  async updateChain(chainParams) {\n    if (!this._connected) {\n      throw new Error(\"Session currently disconnected\");\n    }\n\n    const request = this._formatRequest({\n      method: \"wallet_updateChain\",\n      params: [chainParams]\n    });\n\n    const result = await this._sendCallRequest(request);\n    return result;\n  }\n\n  unsafeSend(request, options) {\n    this._sendRequest(request, options);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(request.id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        if (!payload) {\n          throw new Error(ERROR_MISSING_JSON_RPC);\n        }\n\n        resolve(payload);\n      });\n    });\n  }\n\n  async sendCustomRequest(request, options) {\n    if (!this._connected) {\n      throw new Error(ERROR_SESSION_DISCONNECTED);\n    }\n\n    switch (request.method) {\n      case \"eth_accounts\":\n        return this.accounts;\n\n      case \"eth_chainId\":\n        return convertNumberToHex(this.chainId);\n\n      case \"eth_sendTransaction\":\n      case \"eth_signTransaction\":\n        if (request.params) {\n          request.params[0] = parseTransactionData(request.params[0]);\n        }\n\n        break;\n\n      case \"personal_sign\":\n        if (request.params) {\n          request.params = parsePersonalSign(request.params);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    const formattedRequest = this._formatRequest(request);\n\n    const result = await this._sendCallRequest(formattedRequest, options);\n    return result;\n  }\n\n  approveRequest(response) {\n    if (isJsonRpcResponseSuccess(response)) {\n      const formattedResponse = this._formatResponse(response);\n\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_RESULT);\n    }\n  }\n\n  rejectRequest(response) {\n    if (isJsonRpcResponseError(response)) {\n      const formattedResponse = this._formatResponse(response);\n\n      this._sendResponse(formattedResponse);\n    } else {\n      throw new Error(ERROR_MISSING_ERROR);\n    }\n  }\n\n  transportClose() {\n    this._transport.close();\n  }\n\n  async _sendRequest(request, options) {\n    const callRequest = this._formatRequest(request);\n\n    const encryptionPayload = await this._encrypt(callRequest);\n    const topic = typeof (options === null || options === void 0 ? void 0 : options.topic) !== \"undefined\" ? options.topic : this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = typeof (options === null || options === void 0 ? void 0 : options.forcePushNotification) !== \"undefined\" ? !options.forcePushNotification : isSilentPayload(callRequest);\n\n    this._transport.send(payload, topic, silent);\n  }\n\n  async _sendResponse(response) {\n    const encryptionPayload = await this._encrypt(response);\n    const topic = this.peerId;\n    const payload = JSON.stringify(encryptionPayload);\n    const silent = true;\n\n    this._transport.send(payload, topic, silent);\n  }\n\n  async _sendSessionRequest(request, errorMsg, options) {\n    this._sendRequest(request, options);\n\n    this._subscribeToSessionResponse(request.id, errorMsg);\n  }\n\n  _sendCallRequest(request, options) {\n    this._sendRequest(request, options);\n\n    this._eventManager.trigger({\n      event: \"call_request_sent\",\n      params: [{\n        request,\n        options\n      }]\n    });\n\n    return this._subscribeToCallResponse(request.id);\n  }\n\n  _formatRequest(request) {\n    if (typeof request.method === \"undefined\") {\n      throw new Error(ERROR_MISSING_METHOD);\n    }\n\n    const formattedRequest = {\n      id: typeof request.id === \"undefined\" ? payloadId() : request.id,\n      jsonrpc: \"2.1\",\n      method: request.method,\n      params: typeof request.params === \"undefined\" ? [] : request.params,\n      session: {\n        chainId: `${this.session.chainId}`,\n        chainType: `${this.session.chainType}`,\n        account: this.session.accounts[0]\n      }\n    };\n    return formattedRequest;\n  }\n\n  _formatResponse(response) {\n    if (typeof response.id === \"undefined\") {\n      throw new Error(ERROR_MISSING_ID);\n    }\n\n    const baseResponse = {\n      id: response.id,\n      jsonrpc: \"2.1\"\n    };\n\n    if (isJsonRpcResponseError(response)) {\n      const error = formatRpcError(response.error);\n      const errorResponse = Object.assign(Object.assign(Object.assign({}, baseResponse), response), {\n        error\n      });\n      return errorResponse;\n    } else if (isJsonRpcResponseSuccess(response)) {\n      const successResponse = Object.assign(Object.assign({}, baseResponse), response);\n      return successResponse;\n    }\n\n    throw new Error(ERROR_INVALID_RESPONSE);\n  }\n\n  _handleSessionDisconnect(errorMsg) {\n    const message = errorMsg || \"Session Disconnected\";\n\n    if (!this._connected) {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n\n      removeLocal(mobileLinkChoiceKey);\n    }\n\n    if (this._connected) {\n      this._connected = false;\n    }\n\n    if (this._handshakeId) {\n      this._handshakeId = 0;\n    }\n\n    if (this._handshakeTopic) {\n      this._handshakeTopic = \"\";\n    }\n\n    this._eventManager.trigger({\n      event: \"disconnect\",\n      params: [{\n        message\n      }]\n    });\n\n    this._removeStorageSession();\n\n    this.transportClose();\n  }\n\n  _handleSessionResponse(errorMsg, sessionParams) {\n    if (sessionParams) {\n      if (sessionParams.approved) {\n        if (!this._connected) {\n          this._connected = true;\n\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n\n          if (sessionParams.chainType) {\n            this.chainType = sessionParams.chainType;\n          }\n\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n\n          if (sessionParams.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          if (sessionParams.selectedWalletId) {\n            this.selectedWalletId = sessionParams.selectedWalletId;\n          }\n\n          if (sessionParams.peerId && !this.peerId) {\n            this.peerId = sessionParams.peerId;\n          }\n\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n\n          if (sessionParams.wallets && !this.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          this._eventManager.trigger({\n            event: \"connect\",\n            params: [{\n              peerId: this.peerId,\n              peerMeta: this.peerMeta,\n              chainId: this.chainId,\n              chainType: this.chainType,\n              accounts: this.accounts,\n              selectedWalletId: this.selectedWalletId,\n              wallets: this.wallets\n            }]\n          });\n        } else {\n          if (sessionParams.chainId) {\n            this.chainId = sessionParams.chainId;\n          }\n\n          if (sessionParams.chainType) {\n            this.chainType = sessionParams.chainType;\n          }\n\n          if (sessionParams.accounts) {\n            this.accounts = sessionParams.accounts;\n          }\n\n          if (sessionParams.wallets) {\n            this.wallets = sessionParams.wallets;\n          }\n\n          if (sessionParams.selectedWalletId) {\n            this.selectedWalletId = sessionParams.selectedWalletId;\n          }\n\n          if (sessionParams.peerMeta && !this.peerMeta) {\n            this.peerMeta = sessionParams.peerMeta;\n          }\n\n          this._eventManager.trigger({\n            event: \"session_update\",\n            params: [{\n              chainId: this.chainId,\n              chainType: this.chainType,\n              accounts: this.accounts,\n              selectedWalletId: this.selectedWalletId,\n              wallets: this.wallets\n            }]\n          });\n        }\n\n        this._manageStorageSession();\n      } else {\n        this._handleSessionDisconnect(errorMsg);\n      }\n    } else {\n      this._handleSessionDisconnect(errorMsg);\n    }\n  }\n\n  async _handleIncomingMessages(socketMessage) {\n    const activeTopics = [this.clientId, this.handshakeTopic];\n\n    if (!activeTopics.includes(socketMessage.topic)) {\n      return;\n    }\n\n    let encryptionPayload;\n\n    try {\n      encryptionPayload = JSON.parse(socketMessage.payload);\n    } catch (error) {\n      return;\n    }\n\n    const payload = await this._decrypt(encryptionPayload);\n\n    if (payload) {\n      this._eventManager.trigger(payload);\n    }\n  }\n\n  _subscribeToSessionRequest() {\n    this._transport.subscribe(this.handshakeTopic);\n  }\n\n  _subscribeToResponse(id, callback) {\n    this.on(`response:${id}`, callback);\n  }\n\n  _subscribeToSessionResponse(id, errorMsg) {\n    this._subscribeToResponse(id, (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n\n        return;\n      }\n\n      if (payload.result) {\n        this._handleSessionResponse(errorMsg, payload.result);\n      } else if (payload.error && payload.error.message) {\n        this._handleSessionResponse(payload.error.message);\n      } else {\n        this._handleSessionResponse(errorMsg);\n      }\n    });\n  }\n\n  _subscribeToCallResponse(id) {\n    return new Promise((resolve, reject) => {\n      this._subscribeToResponse(id, (error, payload) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        if (payload.result) {\n          resolve(payload.result);\n        } else if (payload.error && payload.error.message) {\n          reject(new Error(payload.error.message));\n        } else {\n          reject(new Error(ERROR_INVALID_RESPONSE));\n        }\n      });\n    });\n  }\n\n  _subscribeToInternalEvents() {\n    this.on(\"display_uri\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.open(this.uri, () => {\n          this._eventManager.trigger({\n            event: \"modal_closed\",\n            params: []\n          });\n        }, this._qrcodeModalOptions);\n      }\n    });\n    this.on(\"connect\", () => {\n      if (this._qrcodeModal) {\n        this._qrcodeModal.close();\n      }\n    });\n    this.on(\"call_request_sent\", (error, payload) => {\n      const {\n        request\n      } = payload.params[0];\n\n      if (isMobile() && this._signingMethods.includes(request.method)) {\n        const mobileLinkUrl = getLocal(mobileLinkChoiceKey);\n\n        if (mobileLinkUrl) {\n          window.location.href = mobileLinkUrl.href;\n        }\n      }\n    });\n    this.on(\"dc_sessionRequest\", (error, payload) => {\n      if (error) {\n        this._eventManager.trigger({\n          event: \"error\",\n          params: [{\n            code: \"SESSION_REQUEST_ERROR\",\n            message: error.toString()\n          }]\n        });\n      }\n\n      this.handshakeId = payload.id;\n      this.peerId = payload.params[0].peerId;\n      this.peerMeta = payload.params[0].peerMeta;\n      const internalPayload = Object.assign(Object.assign({}, payload), {\n        method: \"session_request\"\n      });\n\n      this._eventManager.trigger(internalPayload);\n    });\n    this.on(\"dc_sessionUpdate\", (error, payload) => {\n      if (error) {\n        this._handleSessionResponse(error.message);\n      }\n\n      this._handleSessionResponse(\"Session disconnected\", payload.params[0]);\n    });\n  }\n\n  _initTransport() {\n    this._transport.on(\"message\", socketMessage => this._handleIncomingMessages(socketMessage));\n\n    this._transport.on(\"open\", () => this._eventManager.trigger({\n      event: \"transport_open\",\n      params: []\n    }));\n\n    this._transport.on(\"close\", () => this._eventManager.trigger({\n      event: \"transport_close\",\n      params: []\n    }));\n\n    this._transport.on(\"error\", () => this._eventManager.trigger({\n      event: \"transport_error\",\n      params: [\"Websocket connection failed\"]\n    }));\n\n    this._transport.open();\n  }\n\n  _formatUri() {\n    const protocol = this.protocol;\n    const handshakeTopic = this.handshakeTopic;\n    const version = this.version;\n    const bridge = encodeURIComponent(this.bridge);\n    const key = this.key;\n    const uri = `${protocol}:${handshakeTopic}@${version}?bridge=${bridge}&key=${key}`;\n    return uri;\n  }\n\n  _parseUri(uri) {\n    const result = parseWalletConnectUri(uri);\n\n    if (result.protocol === this.protocol) {\n      if (!result.handshakeTopic) {\n        throw Error(\"Invalid or missing handshakeTopic parameter value\");\n      }\n\n      const handshakeTopic = result.handshakeTopic;\n\n      if (!result.bridge) {\n        throw Error(\"Invalid or missing bridge url parameter value\");\n      }\n\n      const bridge = decodeURIComponent(result.bridge);\n\n      if (!result.key) {\n        throw Error(\"Invalid or missing key parameter value\");\n      }\n\n      const key = result.key;\n      return {\n        handshakeTopic,\n        bridge,\n        key\n      };\n    } else {\n      throw new Error(ERROR_INVALID_URI);\n    }\n  }\n\n  async _generateKey() {\n    if (this._cryptoLib) {\n      const result = await this._cryptoLib.generateKey();\n      return result;\n    }\n\n    return null;\n  }\n\n  async _encrypt(data) {\n    const key = this._key;\n\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.encrypt(data, key);\n      return result;\n    }\n\n    return null;\n  }\n\n  async _decrypt(payload) {\n    const key = this._key;\n\n    if (this._cryptoLib && key) {\n      const result = await this._cryptoLib.decrypt(payload, key);\n      return result;\n    }\n\n    return null;\n  }\n\n  _getStorageSession() {\n    let result = null;\n\n    if (this._sessionStorage) {\n      result = this._sessionStorage.getSession();\n    }\n\n    return result;\n  }\n\n  _setStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.setSession(this.session);\n    }\n  }\n\n  _removeStorageSession() {\n    if (this._sessionStorage) {\n      this._sessionStorage.removeSession();\n    }\n  }\n\n  _manageStorageSession() {\n    if (this._connected) {\n      this._setStorageSession();\n    } else {\n      this._removeStorageSession();\n    }\n  }\n\n  _registerPushServer(pushServerOpts) {\n    if (!pushServerOpts.url || typeof pushServerOpts.url !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.url parameter value\");\n    }\n\n    if (!pushServerOpts.type || typeof pushServerOpts.type !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.type parameter value\");\n    }\n\n    if (!pushServerOpts.token || typeof pushServerOpts.token !== \"string\") {\n      throw Error(\"Invalid or missing pushServerOpts.token parameter value\");\n    }\n\n    const pushSubscription = {\n      bridge: this.bridge,\n      topic: this.clientId,\n      type: pushServerOpts.type,\n      token: pushServerOpts.token,\n      peerName: \"\",\n      language: pushServerOpts.language || \"\"\n    };\n    this.on(\"connect\", async (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      if (pushServerOpts.peerMeta) {\n        const peerName = payload.params[0].peerMeta.name;\n        pushSubscription.peerName = peerName;\n      }\n\n      try {\n        const response = await fetch(`${pushServerOpts.url}/new`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(pushSubscription)\n        });\n        const json = await response.json();\n\n        if (!json.success) {\n          throw Error(\"Failed to register in Push Server\");\n        }\n      } catch (error) {\n        throw Error(\"Failed to register in Push Server\");\n      }\n    });\n  }\n\n}\n\nexport default Connector;","map":{"version":3,"mappings":"AA6BA,SACEA,iBADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,uBAJF,EAKEC,aALF,EAMEC,SANF,EAOEC,IAPF,EAQEC,cARF,EASEC,qBATF,EAUEC,kBAVF,EAWEC,wBAXF,EAYEC,sBAZF,EAaEC,eAbF,EAcEC,QAdF,EAeEC,cAfF,EAgBEC,mBAhBF,EAiBEC,QAjBF,EAkBEC,WAlBF,QAmBO,oBAnBP;AAoBA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SACEC,uBADF,EAEEC,0BAFF,EAGEC,sBAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,mBANF,EAOEC,oBAPF,EAQEC,gBARF,EASEC,sBATF,EAUEC,iBAVF,EAWEC,sBAXF,EAYEC,+BAZF,EAaEC,8BAbF,QAcO,UAdP;AAeA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,SAASC,YAAT,QAA6B,OAA7B;;AAIA,MAAMC,SAAN,CAAe;AAoDbC,cAAYC,IAAZ,EAAgC;AAnDhB,oBAAW,IAAX;AACA,mBAAU,CAAV;AAIR,mBAAU,EAAV;AACA,gBAA2B,IAA3B;AAIA,qBAAY,EAAZ;AACA,uBAAkC,IAAlC;AAIA,mBAAU,EAAV;AACA,qBAAgC,IAAhC;AAIA,wBAAe,CAAf;AACA,2BAAkB,EAAlB;AAIA,sBAAa,KAAb;AACA,qBAAsB,EAAtB;AACA,oBAAW,EAAX;AACA,sBAAa,EAAb;AACA,mBAAU,EAAV;AACA,6BAAoB,EAApB;AACA,oBAA0C,EAA1C;AAMA,yBAA8B,IAAIL,YAAJ,EAA9B;AAeN,SAAKM,WAAL,GAAmBD,IAAI,CAACE,aAAL,CAAmBC,UAAnB,IAAiCpC,aAAa,EAA9C,IAAoD,IAAvE;AACA,SAAKqC,UAAL,GAAkBJ,IAAI,CAACK,SAAvB;AACA,SAAKC,eAAL,GAAuBN,IAAI,CAACO,cAAL,IAAuB,IAAIX,cAAJ,CAAmBI,IAAI,CAACE,aAAL,CAAmBM,SAAtC,CAA9C;AACA,SAAKC,YAAL,GAAoBT,IAAI,CAACE,aAAL,CAAmBQ,WAAvC;AACA,SAAKC,mBAAL,GAA2BX,IAAI,CAACE,aAAL,CAAmBU,kBAA9C;AACA,SAAKC,eAAL,GAAuB,CAAC,GAAGpC,cAAJ,EAAoB,IAAIuB,IAAI,CAACE,aAAL,CAAmBzB,cAAnB,IAAqC,EAAzC,CAApB,CAAvB;;AAEA,QAAI,CAACuB,IAAI,CAACE,aAAL,CAAmBY,MAApB,IAA8B,CAACd,IAAI,CAACE,aAAL,CAAmBa,GAAlD,IAAyD,CAACf,IAAI,CAACE,aAAL,CAAmBc,OAAjF,EAA0F;AACxF,YAAM,IAAIC,KAAJ,CAAUzB,sBAAV,CAAN;AACD;;AAED,QAAIQ,IAAI,CAACE,aAAL,CAAmBY,MAAvB,EAA+B;AAC7B,WAAKA,MAAL,GAAcjB,YAAY,CAACG,IAAI,CAACE,aAAL,CAAmBY,MAApB,CAA1B;AACD;;AAED,QAAId,IAAI,CAACE,aAAL,CAAmBa,GAAvB,EAA4B;AAC1B,WAAKA,GAAL,GAAWf,IAAI,CAACE,aAAL,CAAmBa,GAA9B;AACD;;AAED,UAAMC,OAAO,GAAGhB,IAAI,CAACE,aAAL,CAAmBc,OAAnB,IAA8B,KAAKE,kBAAL,EAA9C;;AAEA,QAAIF,OAAJ,EAAa;AACX,WAAKA,OAAL,GAAeA,OAAf;AACD;;AAED,QAAI,KAAKG,WAAT,EAAsB;AACpB,WAAKC,2BAAL,CAAiC,KAAKD,WAAtC,EAAmD,0BAAnD;AACD;;AAED,SAAKE,UAAL,GACErB,IAAI,CAACsB,SAAL,IACA,IAAIzC,eAAJ,CAAoB;AAClB0C,cAAQ,EAAE,KAAKA,QADG;AAElBC,aAAO,EAAE,KAAKA,OAFI;AAGlBC,SAAG,EAAE,KAAKX,MAHQ;AAIlBY,mBAAa,EAAE,CAAC,KAAKC,QAAN;AAJG,KAApB,CAFF;;AASA,SAAKC,0BAAL;;AACA,SAAKC,cAAL;;AAEA,QAAI7B,IAAI,CAACE,aAAL,CAAmBa,GAAvB,EAA4B;AAC1B,WAAKe,0BAAL;AACD;;AAED,QAAI9B,IAAI,CAAC+B,cAAT,EAAyB;AACvB,WAAKC,mBAAL,CAAyBhC,IAAI,CAAC+B,cAA9B;AACD;AACF;;AAIS,MAANjB,MAAM,CAACmB,KAAD,EAAc;AACtB,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAKC,OAAL,GAAeD,KAAf;AACD;;AAES,MAANnB,MAAM;AACR,WAAO,KAAKoB,OAAZ;AACD;;AAEM,MAAHC,GAAG,CAACF,KAAD,EAAc;AACnB,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,UAAME,GAAG,GAAgBrE,uBAAuB,CAACmE,KAAD,CAAhD;AACA,SAAKG,IAAL,GAAYD,GAAZ;AACD;;AAEM,MAAHA,GAAG;AACL,QAAI,KAAKC,IAAT,EAAe;AACb,YAAMD,GAAG,GAAWtE,uBAAuB,CAAC,KAAKuE,IAAN,EAAY,IAAZ,CAA3C;AACA,aAAOD,GAAP;AACD;;AACD,WAAO,EAAP;AACD;;AAEW,MAARR,QAAQ,CAACM,KAAD,EAAc;AACxB,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAKI,SAAL,GAAiBJ,KAAjB;AACD;;AAEW,MAARN,QAAQ;AACV,QAAIA,QAAQ,GAAkB,KAAKU,SAAnC;;AACA,QAAI,CAACV,QAAL,EAAe;AACbA,cAAQ,GAAG,KAAKU,SAAL,GAAiBpE,IAAI,EAAhC;AACD;;AAED,WAAO,KAAKoE,SAAZ;AACD;;AAES,MAANC,MAAM,CAACL,KAAD,EAAM;AACd,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAKM,OAAL,GAAeN,KAAf;AACD;;AAES,MAANK,MAAM;AACR,WAAO,KAAKC,OAAZ;AACD;;AAEa,MAAVpC,UAAU,CAAC8B,KAAD,EAAM,CAEnB;;AAEa,MAAV9B,UAAU;AACZ,QAAIA,UAAU,GAAuB,KAAKF,WAA1C;;AACA,QAAI,CAACE,UAAL,EAAiB;AACfA,gBAAU,GAAG,KAAKF,WAAL,GAAmBlC,aAAa,EAA7C;AACD;;AACD,WAAOoC,UAAP;AACD;;AAEW,MAARqC,QAAQ,CAACP,KAAD,EAAM;AAChB,SAAKQ,SAAL,GAAiBR,KAAjB;AACD;;AAEW,MAARO,QAAQ;AACV,UAAMA,QAAQ,GAAuB,KAAKC,SAA1C;AACA,WAAOD,QAAP;AACD;;AAEmB,MAAhBE,gBAAgB,CAACT,KAAD,EAAM;AACxB,SAAKU,iBAAL,GAAyBV,KAAzB;AACD;;AAEmB,MAAhBS,gBAAgB;AAClB,UAAMA,gBAAgB,GAAkB,KAAKC,iBAA7C;AACA,WAAOD,gBAAP;AACD;;AAEU,MAAPE,OAAO,CAACX,KAAD,EAAM;AACf,SAAKY,QAAL,GAAgBZ,KAAhB;AACD;;AAEU,MAAPW,OAAO;AACT,UAAMA,OAAO,GAAkC,KAAKC,QAApD;AACA,WAAOD,OAAP;AACD;;AAEiB,MAAdE,cAAc,CAACb,KAAD,EAAM;AACtB,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAKc,eAAL,GAAuBd,KAAvB;AACD;;AAEiB,MAAda,cAAc;AAChB,WAAO,KAAKC,eAAZ;AACD;;AAEc,MAAX5B,WAAW,CAACc,KAAD,EAAM;AACnB,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAKe,YAAL,GAAoBf,KAApB;AACD;;AAEc,MAAXd,WAAW;AACb,WAAO,KAAK6B,YAAZ;AACD;;AAEM,MAAHjC,GAAG;AACL,UAAMkC,IAAI,GAAG,KAAKC,UAAL,EAAb;;AACA,WAAOD,IAAP;AACD;;AAEM,MAAHlC,GAAG,CAACkB,KAAD,EAAM;AACX,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,UAAM;AAAEa,oBAAF;AAAkBhC,YAAlB;AAA0BqB;AAA1B,QAAkC,KAAKgB,SAAL,CAAelB,KAAf,CAAxC;;AACA,SAAKa,cAAL,GAAsBA,cAAtB;AACA,SAAKhC,MAAL,GAAcA,MAAd;AACA,SAAKqB,GAAL,GAAWA,GAAX;AACD;;AAEU,MAAPiB,OAAO,CAACnB,KAAD,EAAM;AACf,SAAKoB,QAAL,GAAgBpB,KAAhB;AACD;;AAEU,MAAPmB,OAAO;AACT,UAAMA,OAAO,GAAW,KAAKC,QAA7B;AACA,WAAOD,OAAP;AACD;;AAEY,MAATE,SAAS,CAACrB,KAAD,EAAM;AACjB,SAAKsB,UAAL,GAAkBtB,KAAlB;AACD;;AAEY,MAATqB,SAAS;AACX,UAAMA,SAAS,GAAW,KAAKC,UAA/B;AACA,WAAOD,SAAP;AACD;;AAEW,MAARE,QAAQ,CAACvB,KAAD,EAAM;AAChB,SAAKwB,SAAL,GAAiBxB,KAAjB;AACD;;AAEW,MAARuB,QAAQ;AACV,UAAMA,QAAQ,GAAoB,KAAKC,SAAvC;AACA,WAAOD,QAAP;AACD;;AAES,MAANE,MAAM,CAACzB,KAAD,EAAM;AACd,SAAK0B,OAAL,GAAe1B,KAAf;AACD;;AAES,MAANyB,MAAM;AACR,UAAMA,MAAM,GAAkB,KAAKC,OAAnC;AACA,WAAOD,MAAP;AACD;;AAEY,MAATE,SAAS,CAAC3B,KAAD,EAAM,CAElB;;AAEY,MAAT2B,SAAS;AACX,WAAO,KAAKC,UAAZ;AACD;;AAEU,MAAPC,OAAO,CAAC7B,KAAD,EAAM,CAEhB;;AAEU,MAAP6B,OAAO;AACT,WAAO,CAAC,CAAC,KAAKf,eAAd;AACD;;AAEU,MAAP/B,OAAO;AACT,WAAO;AACL4C,eAAS,EAAE,KAAKA,SADX;AAELJ,cAAQ,EAAE,KAAKA,QAFV;AAGLJ,aAAO,EAAE,KAAKA,OAHT;AAILE,eAAS,EAAE,KAAKA,SAJX;AAKLxC,YAAM,EAAE,KAAKA,MALR;AAMLqB,SAAG,EAAE,KAAKA,GANL;AAOLR,cAAQ,EAAE,KAAKA,QAPV;AAQLxB,gBAAU,EAAE,KAAKA,UARZ;AASLmC,YAAM,EAAE,KAAKA,MATR;AAULE,cAAQ,EAAE,KAAKA,QAVV;AAWLrB,iBAAW,EAAE,KAAKA,WAXb;AAYL2B,oBAAc,EAAE,KAAKA,cAZhB;AAaLJ,sBAAgB,EAAE,KAAKA,gBAblB;AAcLE,aAAO,EAAE,KAAKA;AAdT,KAAP;AAgBD;;AAEU,MAAP5B,OAAO,CAACiB,KAAD,EAAM;AACf,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AACD,SAAK4B,UAAL,GAAkB5B,KAAK,CAAC2B,SAAxB;AACA,SAAKJ,QAAL,GAAgBvB,KAAK,CAACuB,QAAtB;AACA,SAAKJ,OAAL,GAAenB,KAAK,CAACmB,OAArB;AACA,SAAKE,SAAL,GAAiBrB,KAAK,CAACqB,SAAvB;AACA,SAAKxC,MAAL,GAAcmB,KAAK,CAACnB,MAApB;AACA,SAAKqB,GAAL,GAAWF,KAAK,CAACE,GAAjB;AACA,SAAKR,QAAL,GAAgBM,KAAK,CAACN,QAAtB;AACA,SAAKxB,UAAL,GAAkB8B,KAAK,CAAC9B,UAAxB;AACA,SAAKmC,MAAL,GAAcL,KAAK,CAACK,MAApB;AACA,SAAKE,QAAL,GAAgBP,KAAK,CAACO,QAAtB;AACA,SAAKrB,WAAL,GAAmBc,KAAK,CAACd,WAAzB;AACA,SAAK2B,cAAL,GAAsBb,KAAK,CAACa,cAA5B;AACA,SAAKJ,gBAAL,GAAwBT,KAAK,CAACS,gBAA9B;AACA,SAAKE,OAAL,GAAeX,KAAK,CAACW,OAArB;AACD;;AAIMmB,IAAE,CAACC,KAAD,EAAgBC,QAAhB,EAA4E;AACnF,UAAMC,YAAY,GAAG;AACnBF,WADmB;AAEnBC;AAFmB,KAArB;;AAIA,SAAKE,aAAL,CAAmBC,SAAnB,CAA6BF,YAA7B;AACD;;AAEMG,KAAG,CAACL,KAAD,EAAc;AACtB,SAAKG,aAAL,CAAmBG,WAAnB,CAA+BN,KAA/B;AACD;;AAEgC,QAApBO,oBAAoB,CAACC,cAAD,EAAyC;AACxE,SAAKpC,IAAL,GAAY,MAAM,KAAKqC,YAAL,EAAlB;;AAEA,UAAMC,OAAO,GAAoB,KAAKC,cAAL,CAAoB;AACnDC,YAAM,EAAE,mBAD2C;AAEnDC,YAAM,EAAE,CACN;AACEvC,cAAM,EAAE,KAAKX,QADf;AAEEa,gBAAQ,EAAE,KAAKrC,UAFjB;AAGEuE,eAAO,EAAE,KAAKC,cAAL,CAAoBH,cAApB;AAHX,OADM;AAF2C,KAApB,CAAjC;;AAWA,SAAKrD,WAAL,GAAmBuD,OAAO,CAACI,EAA3B;AACA,SAAKhC,cAAL,GAAsB7E,IAAI,EAA1B;;AAEA,SAAKkG,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,aADkB;AAEzBa,YAAM,EAAE,CAAC,KAAK9D,GAAN;AAFiB,KAA3B;;AAKA,SAAKgD,EAAL,CAAQ,cAAR,EAAwB,MAAK;AAC3B,YAAM,IAAI9C,KAAJ,CAAUvB,8BAAV,CAAN;AACD,KAFD;;AAIA,UAAMsF,iBAAiB,GAAG,MAAK;AAC7B,WAAKC,WAAL;AACD,KAFD;;AAIA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;;AAEA,UAAIQ,MAAJ,EAAY;AACVF,yBAAiB;AAClB;;AAED,aAAOE,MAAP;AACD,KARD,CAQE,OAAOE,KAAP,EAAc;AACdJ,uBAAiB;AACjB,YAAMI,KAAN;AACD;AACF;;AAEmB,QAAPC,OAAO,CAACrF,IAAD,EAA6B;AAC/C,QAAI,CAAC,KAAKS,YAAV,EAAwB;AACtB,YAAM,IAAIQ,KAAJ,CAAUxB,+BAAV,CAAN;AACD;;AAED,QAAI,KAAKmE,SAAT,EAAoB;AAClB,aAAO;AACLR,eAAO,EAAE,KAAKA,OADT;AAELE,iBAAS,EAAE,KAAKA,SAFX;AAGLE,gBAAQ,EAAE,KAAKA,QAHV;AAILd,wBAAgB,EAAE,KAAKA,gBAJlB;AAKLE,eAAO,EAAE,KAAKA;AALT,OAAP;AAOD;;AAED,UAAM,KAAK0C,aAAL,CAAmBtF,IAAnB,CAAN;AAEA,WAAO,IAAIuF,OAAJ,CAA4B,OAAOC,OAAP,EAAgBC,MAAhB,KAA0B;AAC3D,WAAK1B,EAAL,CAAQ,cAAR,EAAwB,MAAM0B,MAAM,CAAC,IAAIxE,KAAJ,CAAUvB,8BAAV,CAAD,CAApC;AAEA,WAAKqE,EAAL,CAAQ,SAAR,EAAmB,CAACqB,KAAD,EAAQM,OAAR,KAAmB;AACpC,YAAIN,KAAJ,EAAW;AACT,iBAAOK,MAAM,CAACL,KAAD,CAAb;AACD;;AAEDI,eAAO,CAACE,OAAO,CAACb,MAAR,CAAe,CAAf,CAAD,CAAP;AACD,OAND;AAOD,KAVM,CAAP;AAWD;;AAEyB,QAAbS,aAAa,CAACtF,IAAD,EAA6B;;;AACrD,QAAI,KAAK6D,UAAT,EAAqB;AACnB,YAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;AACD;;AAED,QAAI,KAAKgF,OAAT,EAAkB;AAChB;AACD;;AAED,SAAK1B,IAAL,GAAY,MAAM,KAAKqC,YAAL,EAAlB;;AAEA,UAAMC,OAAO,GAAoB,KAAKC,cAAL,CAAoB;AACnDC,YAAM,EAAE,mBAD2C;AAEnDC,YAAM,EAAE,CACN;AACEvC,cAAM,EAAE,KAAKX,QADf;AAEEa,gBAAQ,EAAE,KAAKrC,UAFjB;AAGEiD,eAAO,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,OAAN,MAAa,IAAb,IAAauC,aAAb,GAAaA,EAAb,GAAiB,IAH5B;AAIErC,iBAAS,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,SAAN,MAAe,IAAf,IAAesC,aAAf,GAAeA,EAAf,GAAmB,IAJhC;AAKEC,oBAAY,EAAE,UAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEA,YAAN,MAAkB,IAAlB,IAAkBC,aAAlB,GAAkBA,EAAlB,GAAsB,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf;AALtC,OADM;AAF2C,KAApB,CAAjC;;AAaA,SAAK3E,WAAL,GAAmBuD,OAAO,CAACI,EAA3B;AACA,SAAKhC,cAAL,GAAsB7E,IAAI,EAA1B;;AAEA,SAAK8H,mBAAL,CAAyBrB,OAAzB,EAAkC,yBAAlC,EAA6D;AAC3DsB,WAAK,EAAE,KAAKlD;AAD+C,KAA7D;;AAIA,SAAKqB,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,aADkB;AAEzBa,YAAM,EAAE,CAAC,KAAK9D,GAAN;AAFiB,KAA3B;AAID;;AAEMkF,gBAAc,CAACC,aAAD,EAA8B;AACjD,QAAI,KAAKrC,UAAT,EAAqB;AACnB,YAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;AACD;;AAED,SAAKsE,OAAL,GAAe8C,aAAa,CAAC9C,OAA7B;AACA,SAAKI,QAAL,GAAgB0C,aAAa,CAAC1C,QAA9B;AACA,SAAKF,SAAL,GAAiB4C,aAAa,CAAC5C,SAAd,IAA2B,KAA5C;AACA,SAAKI,MAAL,GAAcwC,aAAa,CAACxC,MAAd,IAAwB,EAAtC;AACA,SAAKhB,gBAAL,GAAwBwD,aAAa,CAACxD,gBAAtC;AACA,SAAKE,OAAL,GAAesD,aAAa,CAACtD,OAA7B;AAEA,UAAMuD,aAAa,GAAmB;AACpCC,cAAQ,EAAE,IAD0B;AAEpChD,aAAO,EAAE,KAAKA,OAFsB;AAGpCE,eAAS,EAAE,KAAKA,SAHoB;AAIpCE,cAAQ,EAAE,KAAKA,QAJqB;AAKpCE,YAAM,EAAE,KAAKA,MALuB;AAMpCpB,YAAM,EAAE,KAAKX,QANuB;AAOpCa,cAAQ,EAAE,KAAKrC,UAPqB;AAQpCuC,sBAAgB,EAAE,KAAKA,gBARa;AASpCE,aAAO,EAAE,KAAKA;AATsB,KAAtC;AAYA,UAAMyD,QAAQ,GAAG;AACfvB,QAAE,EAAE,KAAK3D,WADM;AAEfmF,aAAO,EAAE,KAFM;AAGfpB,YAAM,EAAEiB;AAHO,KAAjB;;AAMA,SAAKI,aAAL,CAAmBF,QAAnB;;AAEA,SAAKxC,UAAL,GAAkB,IAAlB;;AACA,SAAK2C,kBAAL;;AACA,SAAKrC,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,SADkB;AAEzBa,YAAM,EAAE,CACN;AACEvC,cAAM,EAAE,KAAKA,MADf;AAEEE,gBAAQ,EAAE,KAAKA,QAFjB;AAGEY,eAAO,EAAE,KAAKA,OAHhB;AAIEE,iBAAS,EAAE,KAAKA,SAJlB;AAKEE,gBAAQ,EAAE,KAAKA,QALjB;AAMEd,wBAAgB,EAAE,KAAKA,gBANzB;AAOEE,eAAO,EAAE,KAAKA;AAPhB,OADM;AAFiB,KAA3B;AAcD;;AAEM6D,eAAa,CAACC,YAAD,EAA6B;AAC/C,QAAI,KAAK7C,UAAT,EAAqB;AACnB,YAAM,IAAI5C,KAAJ,CAAUnC,uBAAV,CAAN;AACD;;AAED,UAAM6H,OAAO,GACXD,YAAY,IAAIA,YAAY,CAACC,OAA7B,GAAuCD,YAAY,CAACC,OAApD,GAA8D3H,sBADhE;;AAGA,UAAMqH,QAAQ,GAAG,KAAKO,eAAL,CAAqB;AACpC9B,QAAE,EAAE,KAAK3D,WAD2B;AAEpCiE,WAAK,EAAE;AAAEuB;AAAF;AAF6B,KAArB,CAAjB;;AAKA,SAAKJ,aAAL,CAAmBF,QAAnB;;AAEA,SAAKxC,UAAL,GAAkB,KAAlB;;AACA,SAAKM,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,YADkB;AAEzBa,YAAM,EAAE,CAAC;AAAE8B;AAAF,OAAD;AAFiB,KAA3B;;AAIA,SAAKE,qBAAL;AACD;;AAEMC,eAAa,CAACZ,aAAD,EAA8B;AAChD,QAAI,CAAC,KAAKrC,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,SAAKqE,OAAL,GAAe8C,aAAa,CAAC9C,OAA7B;AACA,SAAKI,QAAL,GAAgB0C,aAAa,CAAC1C,QAA9B;AACA,SAAKF,SAAL,GAAiB4C,aAAa,CAAC5C,SAAd,IAA2B,EAA5C;AACA,SAAKI,MAAL,GAAcwC,aAAa,CAACxC,MAAd,IAAwB,EAAtC;AACA,SAAKhB,gBAAL,GAAwBwD,aAAa,CAACxD,gBAAtC;AACA,SAAKE,OAAL,GAAesD,aAAa,CAACtD,OAA7B;AAEA,UAAMuD,aAAa,GAAmB;AACpCC,cAAQ,EAAE,IAD0B;AAEpChD,aAAO,EAAE,KAAKA,OAFsB;AAGpCE,eAAS,EAAE,KAAKA,SAHoB;AAIpCE,cAAQ,EAAE,KAAKA,QAJqB;AAKpCE,YAAM,EAAE,KAAKA,MALuB;AAMpChB,sBAAgB,EAAE,KAAKA,gBANa;AAOpCE,aAAO,EAAE,KAAKA;AAPsB,KAAtC;;AAUA,UAAM8B,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,kBAD0B;AAElCC,YAAM,EAAE,CAACsB,aAAD;AAF0B,KAApB,CAAhB;;AAKA,SAAKJ,mBAAL,CAAyBrB,OAAzB,EAAkC,yBAAlC;;AAEA,SAAKP,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,gBADkB;AAEzBa,YAAM,EAAE,CACN;AACEzB,eAAO,EAAE,KAAKA,OADhB;AAEEE,iBAAS,EAAE,KAAKA,SAFlB;AAGEE,gBAAQ,EAAE,KAAKA,QAHjB;AAIEd,wBAAgB,EAAE,KAAKA,gBAJzB;AAKEE,eAAO,EAAE,KAAKA;AALhB,OADM;AAFiB,KAA3B;;AAaA,SAAKmE,qBAAL;AACD;;AAEuB,QAAX9B,WAAW,CAACyB,YAAD,EAA6B;AACnD,UAAMC,OAAO,GAAGD,YAAY,GAAGA,YAAY,CAACC,OAAhB,GAA0B,sBAAtD;AAEA,UAAMR,aAAa,GAAmB;AACpCC,cAAQ,EAAE,KAD0B;AAEpChD,aAAO,EAAE,IAF2B;AAGpCE,eAAS,EAAE,IAHyB;AAIpCE,cAAQ,EAAE,IAJ0B;AAKpCd,sBAAgB,EAAE,IALkB;AAMpCE,aAAO,EAAE;AAN2B,KAAtC;;AASA,UAAM8B,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,kBAD0B;AAElCC,YAAM,EAAE,CAACsB,aAAD;AAF0B,KAApB,CAAhB;;AAKA,UAAM,KAAKa,YAAL,CAAkBtC,OAAlB,CAAN;;AAEA,SAAKuC,wBAAL,CAA8BN,OAA9B;AACD;;AAE2B,QAAfO,eAAe,CAACC,EAAD,EAAY;AACtC,QAAI,CAAC,KAAKtD,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,UAAMqI,QAAQ,GAAGxJ,oBAAoB,CAACuJ,EAAD,CAArC;;AAEA,UAAMzC,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,qBAD0B;AAElCC,YAAM,EAAE,CAACuC,QAAD;AAF0B,KAApB,CAAhB;;AAKA,UAAMlC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAE2B,QAAfmC,eAAe,CAACC,WAAD,EAIzBC,OAJyB,EAIA;;;AAC1B,UAAM7C,OAAO,GAAoB;AAC/BI,QAAE,EAAE9G,SAAS,EADkB;AAE/BsI,aAAO,EAAE,KAFsB;AAG/B1B,YAAM,EAAE0C,WAAW,CAAC1C,MAHW;AAI/BC,YAAM,EAAE,iBAAW,CAACA,MAAZ,MAAkB,IAAlB,IAAkBc,aAAlB,GAAkBA,EAAlB,GAAsB,EAJC;AAK/B3E,aAAO,EAAEsG,WAAW,CAACtG;AALU,KAAjC;AAQA,UAAMwG,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAc/C,OAAd,CAA3D;AACA,UAAMsB,KAAK,GAAW,KAAK1D,MAA3B;AACA,UAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;AACA,UAAMI,MAAM,GAAG,QAACL,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEM,qBAAV,OAA+B,IAA/B,IAA+BjC,aAA/B,GAA+BA,EAA/B,GAAmCrH,eAAe,CAACmG,OAAD,CAAjE;;AAEA,SAAKrD,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;;AAEA,SAAKzD,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,mBADkB;AAEzBa,YAAM,EAAE,CAAC;AAAEH,eAAF;AAAW6C;AAAX,OAAD;AAFiB,KAA3B;;AAIA,WAAO,KAAKQ,wBAAL,CAA8BrD,OAAO,CAACI,EAAtC,CAAP;AACD;;AAE2B,QAAfkD,eAAe,CAACb,EAAD,EAAY;AACtC,QAAI,CAAC,KAAKtD,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,UAAMqI,QAAQ,GAAGxJ,oBAAoB,CAACuJ,EAAD,CAArC;;AAEA,UAAMzC,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,qBAD0B;AAElCC,YAAM,EAAE,CAACuC,QAAD;AAF0B,KAApB,CAAhB;;AAKA,UAAMlC,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAEuB,QAAX+C,WAAW,CAACpD,MAAD,EAAc;AACpC,QAAI,CAAC,KAAKhB,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,UAAM2F,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,UAD0B;AAElCC;AAFkC,KAApB,CAAhB;;AAKA,UAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAE+B,QAAnBgD,mBAAmB,CAACrD,MAAD,EAAc;AAC5C,QAAI,CAAC,KAAKhB,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED8F,UAAM,GAAGlH,iBAAiB,CAACkH,MAAD,CAA1B;;AAEA,UAAMH,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,eAD0B;AAElCC;AAFkC,KAApB,CAAhB;;AAKA,UAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAEyB,QAAbiD,aAAa,CAACtD,MAAD,EAAc;AACtC,QAAI,CAAC,KAAKhB,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,UAAM2F,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,mBAD0B;AAElCC;AAFkC,KAApB,CAAhB;;AAKA,UAAMK,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAEuB,QAAXkD,WAAW,CAACC,WAAD,EAAgC;AACtD,QAAI,CAAC,KAAKxE,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,UAAMyD,OAAO,GAAG,KAAKC,cAAL,CAAoB;AAClCC,YAAM,EAAE,oBAD0B;AAElCC,YAAM,EAAE,CAACwD,WAAD;AAF0B,KAApB,CAAhB;;AAKA,UAAMnD,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBT,OAAtB,CAArB;AACA,WAAOQ,MAAP;AACD;;AAEMoD,YAAU,CACf5D,OADe,EAEf6C,OAFe,EAEU;AAEzB,SAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;AAEA,SAAKpD,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,mBADkB;AAEzBa,YAAM,EAAE,CAAC;AAAEH,eAAF;AAAW6C;AAAX,OAAD;AAFiB,KAA3B;;AAKA,WAAO,IAAIhC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACrC,WAAK8C,oBAAL,CAA0B7D,OAAO,CAACI,EAAlC,EAAsC,CAACM,KAAD,EAAsBM,OAAtB,KAA6C;AACjF,YAAIN,KAAJ,EAAW;AACTK,gBAAM,CAACL,KAAD,CAAN;AACA;AACD;;AACD,YAAI,CAACM,OAAL,EAAc;AACZ,gBAAM,IAAIzE,KAAJ,CAAUhC,sBAAV,CAAN;AACD;;AACDuG,eAAO,CAACE,OAAD,CAAP;AACD,OATD;AAUD,KAXM,CAAP;AAYD;;AAE6B,QAAjB8C,iBAAiB,CAAC9D,OAAD,EAAoC6C,OAApC,EAA6D;AACzF,QAAI,CAAC,KAAK1D,UAAV,EAAsB;AACpB,YAAM,IAAI5C,KAAJ,CAAUlC,0BAAV,CAAN;AACD;;AAED,YAAQ2F,OAAO,CAACE,MAAhB;AACE,WAAK,cAAL;AACE,eAAO,KAAKpB,QAAZ;;AACF,WAAK,aAAL;AACE,eAAOpF,kBAAkB,CAAC,KAAKgF,OAAN,CAAzB;;AACF,WAAK,qBAAL;AACA,WAAK,qBAAL;AACE,YAAIsB,OAAO,CAACG,MAAZ,EAAoB;AAClBH,iBAAO,CAACG,MAAR,CAAe,CAAf,IAAoBjH,oBAAoB,CAAC8G,OAAO,CAACG,MAAR,CAAe,CAAf,CAAD,CAAxC;AACD;;AACD;;AACF,WAAK,eAAL;AACE,YAAIH,OAAO,CAACG,MAAZ,EAAoB;AAClBH,iBAAO,CAACG,MAAR,GAAiBlH,iBAAiB,CAAC+G,OAAO,CAACG,MAAT,CAAlC;AACD;;AACD;;AACF;AACE;AAjBJ;;AAoBA,UAAM4D,gBAAgB,GAAG,KAAK9D,cAAL,CAAoBD,OAApB,CAAzB;;AAEA,UAAMQ,MAAM,GAAG,MAAM,KAAKC,gBAAL,CAAsBsD,gBAAtB,EAAwClB,OAAxC,CAArB;AACA,WAAOrC,MAAP;AACD;;AAEMwD,gBAAc,CAACrC,QAAD,EAA2C;AAC9D,QAAIhI,wBAAwB,CAACgI,QAAD,CAA5B,EAAwC;AACtC,YAAMsC,iBAAiB,GAAG,KAAK/B,eAAL,CAAqBP,QAArB,CAA1B;;AACA,WAAKE,aAAL,CAAmBoC,iBAAnB;AACD,KAHD,MAGO;AACL,YAAM,IAAI1H,KAAJ,CAAU/B,oBAAV,CAAN;AACD;AACF;;AAEM0J,eAAa,CAACvC,QAAD,EAAyC;AAC3D,QAAI/H,sBAAsB,CAAC+H,QAAD,CAA1B,EAAsC;AACpC,YAAMsC,iBAAiB,GAAG,KAAK/B,eAAL,CAAqBP,QAArB,CAA1B;;AACA,WAAKE,aAAL,CAAmBoC,iBAAnB;AACD,KAHD,MAGO;AACL,YAAM,IAAI1H,KAAJ,CAAU9B,mBAAV,CAAN;AACD;AACF;;AAEM0J,gBAAc;AACnB,SAAKxH,UAAL,CAAgByH,KAAhB;AACD;;AAI2B,QAAZ9B,YAAY,CAC1BtC,OAD0B,EAE1B6C,OAF0B,EAEgB;AAE1C,UAAMwB,WAAW,GAAoB,KAAKpE,cAAL,CAAoBD,OAApB,CAArC;;AAEA,UAAM8C,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAcsB,WAAd,CAA3D;AAEA,UAAM/C,KAAK,GAAW,QAAOuB,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEvB,KAAhB,MAA0B,WAA1B,GAAwCuB,OAAO,CAACvB,KAAhD,GAAwD,KAAK1D,MAAnF;AACA,UAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;AACA,UAAMI,MAAM,GACV,QAAOL,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEM,qBAAhB,MAA0C,WAA1C,GACI,CAACN,OAAO,CAACM,qBADb,GAEItJ,eAAe,CAACwK,WAAD,CAHrB;;AAKA,SAAK1H,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;AACD;;AAE4B,QAAbrB,aAAa,CAACF,QAAD,EAA0D;AACrF,UAAMmB,iBAAiB,GAA8B,MAAM,KAAKC,QAAL,CAAcpB,QAAd,CAA3D;AAEA,UAAML,KAAK,GAAW,KAAK1D,MAA3B;AACA,UAAMoD,OAAO,GAAWgC,IAAI,CAACC,SAAL,CAAeH,iBAAf,CAAxB;AACA,UAAMI,MAAM,GAAG,IAAf;;AAEA,SAAKvG,UAAL,CAAgByG,IAAhB,CAAqBpC,OAArB,EAA8BM,KAA9B,EAAqC4B,MAArC;AACD;;AAEkC,QAAnB7B,mBAAmB,CACjCrB,OADiC,EAEjCsE,QAFiC,EAGjCzB,OAHiC,EAGA;AAEjC,SAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;AACA,SAAKnG,2BAAL,CAAiCsD,OAAO,CAACI,EAAzC,EAA6CkE,QAA7C;AACD;;AAES7D,kBAAgB,CAACT,OAAD,EAA2B6C,OAA3B,EAAoD;AAC5E,SAAKP,YAAL,CAAkBtC,OAAlB,EAA2B6C,OAA3B;;AAEA,SAAKpD,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,mBADkB;AAEzBa,YAAM,EAAE,CAAC;AAAEH,eAAF;AAAW6C;AAAX,OAAD;AAFiB,KAA3B;;AAKA,WAAO,KAAKQ,wBAAL,CAA8BrD,OAAO,CAACI,EAAtC,CAAP;AACD;;AAESH,gBAAc,CAACD,OAAD,EAAkC;AACxD,QAAI,OAAOA,OAAO,CAACE,MAAf,KAA0B,WAA9B,EAA2C;AACzC,YAAM,IAAI3D,KAAJ,CAAU7B,oBAAV,CAAN;AACD;;AACD,UAAMqJ,gBAAgB,GAAoB;AACxC3D,QAAE,EAAE,OAAOJ,OAAO,CAACI,EAAf,KAAsB,WAAtB,GAAoC9G,SAAS,EAA7C,GAAkD0G,OAAO,CAACI,EADtB;AAExCwB,aAAO,EAAE,KAF+B;AAGxC1B,YAAM,EAAEF,OAAO,CAACE,MAHwB;AAIxCC,YAAM,EAAE,OAAOH,OAAO,CAACG,MAAf,KAA0B,WAA1B,GAAwC,EAAxC,GAA6CH,OAAO,CAACG,MAJrB;AAKxC7D,aAAO,EAAE;AACPoC,eAAO,EAAE,GAAG,KAAKpC,OAAL,CAAaoC,OAAO,EADzB;AAEPE,iBAAS,EAAE,GAAG,KAAKtC,OAAL,CAAasC,SAAS,EAF7B;AAGP2F,eAAO,EAAE,KAAKjI,OAAL,CAAawC,QAAb,CAAsB,CAAtB;AAHF;AAL+B,KAA1C;AAWA,WAAOiF,gBAAP;AACD;;AAES7B,iBAAe,CACvBP,QADuB,EAC2C;AAElE,QAAI,OAAOA,QAAQ,CAACvB,EAAhB,KAAuB,WAA3B,EAAwC;AACtC,YAAM,IAAI7D,KAAJ,CAAU5B,gBAAV,CAAN;AACD;;AAED,UAAM6J,YAAY,GAAG;AAAEpE,QAAE,EAAEuB,QAAQ,CAACvB,EAAf;AAAmBwB,aAAO,EAAE;AAA5B,KAArB;;AAEA,QAAIhI,sBAAsB,CAAC+H,QAAD,CAA1B,EAAsC;AACpC,YAAMjB,KAAK,GAAGlH,cAAc,CAACmI,QAAQ,CAACjB,KAAV,CAA5B;AAEA,YAAM+D,aAAa,iDACdD,YADc,GAEd7C,QAFc,GAEN;AACXjB;AADW,OAFM,CAAnB;AAKA,aAAO+D,aAAP;AACD,KATD,MASO,IAAI9K,wBAAwB,CAACgI,QAAD,CAA5B,EAAwC;AAC7C,YAAM+C,eAAe,mCAChBF,YADgB,GAEhB7C,QAFgB,CAArB;AAKA,aAAO+C,eAAP;AACD;;AAED,UAAM,IAAInI,KAAJ,CAAU3B,sBAAV,CAAN;AACD;;AAEO2H,0BAAwB,CAAC+B,QAAD,EAAkB;AAChD,UAAMrC,OAAO,GAAGqC,QAAQ,IAAI,sBAA5B;;AACA,QAAI,CAAC,KAAKnF,UAAV,EAAsB;AACpB,UAAI,KAAKpD,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBqI,KAAlB;AACD;;AACDlK,iBAAW,CAACF,mBAAD,CAAX;AACD;;AACD,QAAI,KAAKmF,UAAT,EAAqB;AACnB,WAAKA,UAAL,GAAkB,KAAlB;AACD;;AACD,QAAI,KAAKb,YAAT,EAAuB;AACrB,WAAKA,YAAL,GAAoB,CAApB;AACD;;AACD,QAAI,KAAKD,eAAT,EAA0B;AACxB,WAAKA,eAAL,GAAuB,EAAvB;AACD;;AACD,SAAKoB,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,YADkB;AAEzBa,YAAM,EAAE,CAAC;AAAE8B;AAAF,OAAD;AAFiB,KAA3B;;AAIA,SAAKE,qBAAL;;AACA,SAAKgC,cAAL;AACD;;AAEOQ,wBAAsB,CAACL,QAAD,EAAmB7C,aAAnB,EAAiD;AAC7E,QAAIA,aAAJ,EAAmB;AACjB,UAAIA,aAAa,CAACC,QAAlB,EAA4B;AAC1B,YAAI,CAAC,KAAKvC,UAAV,EAAsB;AACpB,eAAKA,UAAL,GAAkB,IAAlB;;AAEA,cAAIsC,aAAa,CAAC/C,OAAlB,EAA2B;AACzB,iBAAKA,OAAL,GAAe+C,aAAa,CAAC/C,OAA7B;AACD;;AAED,cAAI+C,aAAa,CAAC7C,SAAlB,EAA6B;AAC3B,iBAAKA,SAAL,GAAiB6C,aAAa,CAAC7C,SAA/B;AACD;;AAED,cAAI6C,aAAa,CAAC3C,QAAlB,EAA4B;AAC1B,iBAAKA,QAAL,GAAgB2C,aAAa,CAAC3C,QAA9B;AACD;;AAED,cAAI2C,aAAa,CAACvD,OAAlB,EAA2B;AACzB,iBAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;AACD;;AAED,cAAIuD,aAAa,CAACzD,gBAAlB,EAAoC;AAClC,iBAAKA,gBAAL,GAAwByD,aAAa,CAACzD,gBAAtC;AACD;;AAED,cAAIyD,aAAa,CAAC7D,MAAd,IAAwB,CAAC,KAAKA,MAAlC,EAA0C;AACxC,iBAAKA,MAAL,GAAc6D,aAAa,CAAC7D,MAA5B;AACD;;AAED,cAAI6D,aAAa,CAAC3D,QAAd,IAA0B,CAAC,KAAKA,QAApC,EAA8C;AAC5C,iBAAKA,QAAL,GAAgB2D,aAAa,CAAC3D,QAA9B;AACD;;AAED,cAAI2D,aAAa,CAACvD,OAAd,IAAyB,CAAC,KAAKA,OAAnC,EAA4C;AAC1C,iBAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;AACD;;AAED,eAAKuB,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,iBAAK,EAAE,SADkB;AAEzBa,kBAAM,EAAE,CACN;AACEvC,oBAAM,EAAE,KAAKA,MADf;AAEEE,sBAAQ,EAAE,KAAKA,QAFjB;AAGEY,qBAAO,EAAE,KAAKA,OAHhB;AAIEE,uBAAS,EAAE,KAAKA,SAJlB;AAKEE,sBAAQ,EAAE,KAAKA,QALjB;AAMEd,8BAAgB,EAAE,KAAKA,gBANzB;AAOEE,qBAAO,EAAE,KAAKA;AAPhB,aADM;AAFiB,WAA3B;AAcD,SAjDD,MAiDO;AACL,cAAIuD,aAAa,CAAC/C,OAAlB,EAA2B;AACzB,iBAAKA,OAAL,GAAe+C,aAAa,CAAC/C,OAA7B;AACD;;AACD,cAAI+C,aAAa,CAAC7C,SAAlB,EAA6B;AAC3B,iBAAKA,SAAL,GAAiB6C,aAAa,CAAC7C,SAA/B;AACD;;AACD,cAAI6C,aAAa,CAAC3C,QAAlB,EAA4B;AAC1B,iBAAKA,QAAL,GAAgB2C,aAAa,CAAC3C,QAA9B;AACD;;AACD,cAAI2C,aAAa,CAACvD,OAAlB,EAA2B;AACzB,iBAAKA,OAAL,GAAeuD,aAAa,CAACvD,OAA7B;AACD;;AACD,cAAIuD,aAAa,CAACzD,gBAAlB,EAAoC;AAClC,iBAAKA,gBAAL,GAAwByD,aAAa,CAACzD,gBAAtC;AACD;;AACD,cAAIyD,aAAa,CAAC3D,QAAd,IAA0B,CAAC,KAAKA,QAApC,EAA8C;AAC5C,iBAAKA,QAAL,GAAgB2D,aAAa,CAAC3D,QAA9B;AACD;;AAED,eAAK2B,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,iBAAK,EAAE,gBADkB;AAEzBa,kBAAM,EAAE,CACN;AACEzB,qBAAO,EAAE,KAAKA,OADhB;AAEEE,uBAAS,EAAE,KAAKA,SAFlB;AAGEE,sBAAQ,EAAE,KAAKA,QAHjB;AAIEd,8BAAgB,EAAE,KAAKA,gBAJzB;AAKEE,qBAAO,EAAE,KAAKA;AALhB,aADM;AAFiB,WAA3B;AAYD;;AAED,aAAKmE,qBAAL;AACD,OArFD,MAqFO;AACL,aAAKE,wBAAL,CAA8B+B,QAA9B;AACD;AACF,KAzFD,MAyFO;AACL,WAAK/B,wBAAL,CAA8B+B,QAA9B;AACD;AACF;;AAEoC,QAAvBM,uBAAuB,CAACC,aAAD,EAA8B;AACjE,UAAMC,YAAY,GAAG,CAAC,KAAK7H,QAAN,EAAgB,KAAKmB,cAArB,CAArB;;AAEA,QAAI,CAAC0G,YAAY,CAACC,QAAb,CAAsBF,aAAa,CAACvD,KAApC,CAAL,EAAiD;AAC/C;AACD;;AAED,QAAIwB,iBAAJ;;AACA,QAAI;AACFA,uBAAiB,GAAGE,IAAI,CAACgC,KAAL,CAAWH,aAAa,CAAC7D,OAAzB,CAApB;AACD,KAFD,CAEE,OAAON,KAAP,EAAc;AACd;AACD;;AAED,UAAMM,OAAO,GAIF,MAAM,KAAKiE,QAAL,CAAcnC,iBAAd,CAJjB;;AAMA,QAAI9B,OAAJ,EAAa;AACX,WAAKvB,aAAL,CAAmBY,OAAnB,CAA2BW,OAA3B;AACD;AACF;;AAEO5D,4BAA0B;AAChC,SAAKT,UAAL,CAAgB+C,SAAhB,CAA0B,KAAKtB,cAA/B;AACD;;AAEOyF,sBAAoB,CAC1BzD,EAD0B,EAE1Bb,QAF0B,EAEkC;AAE5D,SAAKF,EAAL,CAAQ,YAAYe,EAAE,EAAtB,EAA0Bb,QAA1B;AACD;;AAEO7C,6BAA2B,CAAC0D,EAAD,EAAakE,QAAb,EAA6B;AAC9D,SAAKT,oBAAL,CAA0BzD,EAA1B,EAA8B,CAACM,KAAD,EAAQM,OAAR,KAAmB;AAC/C,UAAIN,KAAJ,EAAW;AACT,aAAKiE,sBAAL,CAA4BjE,KAAK,CAACuB,OAAlC;;AACA;AACD;;AACD,UAAIjB,OAAO,CAACR,MAAZ,EAAoB;AAClB,aAAKmE,sBAAL,CAA4BL,QAA5B,EAAsCtD,OAAO,CAACR,MAA9C;AACD,OAFD,MAEO,IAAIQ,OAAO,CAACN,KAAR,IAAiBM,OAAO,CAACN,KAAR,CAAcuB,OAAnC,EAA4C;AACjD,aAAK0C,sBAAL,CAA4B3D,OAAO,CAACN,KAAR,CAAcuB,OAA1C;AACD,OAFM,MAEA;AACL,aAAK0C,sBAAL,CAA4BL,QAA5B;AACD;AACF,KAZD;AAaD;;AAEOjB,0BAAwB,CAACjD,EAAD,EAAW;AACzC,WAAO,IAAIS,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACrC,WAAK8C,oBAAL,CAA0BzD,EAA1B,EAA8B,CAACM,KAAD,EAAQM,OAAR,KAAmB;AAC/C,YAAIN,KAAJ,EAAW;AACTK,gBAAM,CAACL,KAAD,CAAN;AACA;AACD;;AACD,YAAIM,OAAO,CAACR,MAAZ,EAAoB;AAClBM,iBAAO,CAACE,OAAO,CAACR,MAAT,CAAP;AACD,SAFD,MAEO,IAAIQ,OAAO,CAACN,KAAR,IAAiBM,OAAO,CAACN,KAAR,CAAcuB,OAAnC,EAA4C;AACjDlB,gBAAM,CAAC,IAAIxE,KAAJ,CAAUyE,OAAO,CAACN,KAAR,CAAcuB,OAAxB,CAAD,CAAN;AACD,SAFM,MAEA;AACLlB,gBAAM,CAAC,IAAIxE,KAAJ,CAAU3B,sBAAV,CAAD,CAAN;AACD;AACF,OAZD;AAaD,KAdM,CAAP;AAeD;;AAEOsC,4BAA0B;AAChC,SAAKmC,EAAL,CAAQ,aAAR,EAAuB,MAAK;AAC1B,UAAI,KAAKtD,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBmJ,IAAlB,CACE,KAAK7I,GADP,EAEE,MAAK;AACH,eAAKoD,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,iBAAK,EAAE,cADkB;AAEzBa,kBAAM,EAAE;AAFiB,WAA3B;AAID,SAPH,EAQE,KAAKlE,mBARP;AAUD;AACF,KAbD;AAeA,SAAKoD,EAAL,CAAQ,SAAR,EAAmB,MAAK;AACtB,UAAI,KAAKtD,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBqI,KAAlB;AACD;AACF,KAJD;AAMA,SAAK/E,EAAL,CAAQ,mBAAR,EAA6B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;AAC9C,YAAM;AAAEhB;AAAF,UAAcgB,OAAO,CAACb,MAAR,CAAe,CAAf,CAApB;;AACA,UAAIlG,QAAQ,MAAM,KAAKkC,eAAL,CAAqB4I,QAArB,CAA8B/E,OAAO,CAACE,MAAtC,CAAlB,EAAiE;AAC/D,cAAMiF,aAAa,GAAGrL,QAAQ,CAACE,mBAAD,CAA9B;;AACA,YAAImL,aAAJ,EAAmB;AACjBC,gBAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBH,aAAa,CAACG,IAArC;AACD;AACF;AACF,KARD;AAUA,SAAKjG,EAAL,CAAQ,mBAAR,EAA6B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;AAC9C,UAAIN,KAAJ,EAAW;AACT,aAAKjB,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,eAAK,EAAE,OADkB;AAEzBa,gBAAM,EAAE,CACN;AACEoF,gBAAI,EAAE,uBADR;AAEEtD,mBAAO,EAAEvB,KAAK,CAAC8E,QAAN;AAFX,WADM;AAFiB,SAA3B;AASD;;AACD,WAAK/I,WAAL,GAAmBuE,OAAO,CAACZ,EAA3B;AACA,WAAKxC,MAAL,GAAcoD,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBvC,MAAhC;AACA,WAAKE,QAAL,GAAgBkD,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBrC,QAAlC;AAEA,YAAM2H,eAAe,mCAChBzE,OADgB,GACT;AACVd,cAAM,EAAE;AADE,OADS,CAArB;;AAIA,WAAKT,aAAL,CAAmBY,OAAnB,CAA2BoF,eAA3B;AACD,KArBD;AAuBA,SAAKpG,EAAL,CAAQ,kBAAR,EAA4B,CAACqB,KAAD,EAAQM,OAAR,KAAmB;AAC7C,UAAIN,KAAJ,EAAW;AACT,aAAKiE,sBAAL,CAA4BjE,KAAK,CAACuB,OAAlC;AACD;;AACD,WAAK0C,sBAAL,CAA4B,sBAA5B,EAAoD3D,OAAO,CAACb,MAAR,CAAe,CAAf,CAApD;AACD,KALD;AAMD;;AAEOhD,gBAAc;AACpB,SAAKR,UAAL,CAAgB0C,EAAhB,CAAmB,SAAnB,EAA+BwF,aAAD,IAC5B,KAAKD,uBAAL,CAA6BC,aAA7B,CADF;;AAIA,SAAKlI,UAAL,CAAgB0C,EAAhB,CAAmB,MAAnB,EAA2B,MACzB,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;AAAEf,WAAK,EAAE,gBAAT;AAA2Ba,YAAM,EAAE;AAAnC,KAA3B,CADF;;AAIA,SAAKxD,UAAL,CAAgB0C,EAAhB,CAAmB,OAAnB,EAA4B,MAC1B,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;AAAEf,WAAK,EAAE,iBAAT;AAA4Ba,YAAM,EAAE;AAApC,KAA3B,CADF;;AAIA,SAAKxD,UAAL,CAAgB0C,EAAhB,CAAmB,OAAnB,EAA4B,MAC1B,KAAKI,aAAL,CAAmBY,OAAnB,CAA2B;AACzBf,WAAK,EAAE,iBADkB;AAEzBa,YAAM,EAAE,CAAC,6BAAD;AAFiB,KAA3B,CADF;;AAOA,SAAKxD,UAAL,CAAgBuI,IAAhB;AACD;;AAIO1G,YAAU;AAChB,UAAM3B,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMuB,cAAc,GAAG,KAAKA,cAA5B;AACA,UAAMtB,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMV,MAAM,GAAGsJ,kBAAkB,CAAC,KAAKtJ,MAAN,CAAjC;AACA,UAAMqB,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMpB,GAAG,GAAG,GAAGQ,QAAQ,IAAIuB,cAAc,IAAItB,OAAO,WAAWV,MAAM,QAAQqB,GAAG,EAAhF;AACA,WAAOpB,GAAP;AACD;;AAEOoC,WAAS,CAACpC,GAAD,EAAY;AAC3B,UAAMmE,MAAM,GAAoB/G,qBAAqB,CAAC4C,GAAD,CAArD;;AAEA,QAAImE,MAAM,CAAC3D,QAAP,KAAoB,KAAKA,QAA7B,EAAuC;AACrC,UAAI,CAAC2D,MAAM,CAACpC,cAAZ,EAA4B;AAC1B,cAAM7B,KAAK,CAAC,mDAAD,CAAX;AACD;;AACD,YAAM6B,cAAc,GAAGoC,MAAM,CAACpC,cAA9B;;AAEA,UAAI,CAACoC,MAAM,CAACpE,MAAZ,EAAoB;AAClB,cAAMG,KAAK,CAAC,+CAAD,CAAX;AACD;;AACD,YAAMH,MAAM,GAAGuJ,kBAAkB,CAACnF,MAAM,CAACpE,MAAR,CAAjC;;AAEA,UAAI,CAACoE,MAAM,CAAC/C,GAAZ,EAAiB;AACf,cAAMlB,KAAK,CAAC,wCAAD,CAAX;AACD;;AACD,YAAMkB,GAAG,GAAG+C,MAAM,CAAC/C,GAAnB;AAEA,aAAO;AAAEW,sBAAF;AAAkBhC,cAAlB;AAA0BqB;AAA1B,OAAP;AACD,KAjBD,MAiBO;AACL,YAAM,IAAIlB,KAAJ,CAAU1B,iBAAV,CAAN;AACD;AACF;;AAIyB,QAAZkF,YAAY;AACxB,QAAI,KAAKrE,UAAT,EAAqB;AACnB,YAAM8E,MAAM,GAAG,MAAM,KAAK9E,UAAL,CAAgBkK,WAAhB,EAArB;AACA,aAAOpF,MAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEqB,QAARuC,QAAQ,CACpB8C,IADoB,EACmD;AAEvE,UAAMpI,GAAG,GAAuB,KAAKC,IAArC;;AACA,QAAI,KAAKhC,UAAL,IAAmB+B,GAAvB,EAA4B;AAC1B,YAAM+C,MAAM,GAAuB,MAAM,KAAK9E,UAAL,CAAgBoK,OAAhB,CAAwBD,IAAxB,EAA8BpI,GAA9B,CAAzC;AACA,aAAO+C,MAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAEqB,QAARyE,QAAQ,CACpBjE,OADoB,EACO;AAE3B,UAAMvD,GAAG,GAAuB,KAAKC,IAArC;;AACA,QAAI,KAAKhC,UAAL,IAAmB+B,GAAvB,EAA4B;AAC1B,YAAM+C,MAAM,GAID,MAAM,KAAK9E,UAAL,CAAgBqK,OAAhB,CAAwB/E,OAAxB,EAAiCvD,GAAjC,CAJjB;AAKA,aAAO+C,MAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAIOhE,oBAAkB;AACxB,QAAIgE,MAAM,GAAiC,IAA3C;;AACA,QAAI,KAAK5E,eAAT,EAA0B;AACxB4E,YAAM,GAAG,KAAK5E,eAAL,CAAqBoK,UAArB,EAAT;AACD;;AACD,WAAOxF,MAAP;AACD;;AAEOsB,oBAAkB;AACxB,QAAI,KAAKlG,eAAT,EAA0B;AACxB,WAAKA,eAAL,CAAqBqK,UAArB,CAAgC,KAAK3J,OAArC;AACD;AACF;;AAEO6F,uBAAqB;AAC3B,QAAI,KAAKvG,eAAT,EAA0B;AACxB,WAAKA,eAAL,CAAqBsK,aAArB;AACD;AACF;;AAEO7D,uBAAqB;AAC3B,QAAI,KAAKlD,UAAT,EAAqB;AACnB,WAAK2C,kBAAL;AACD,KAFD,MAEO;AACL,WAAKK,qBAAL;AACD;AACF;;AAIO7E,qBAAmB,CAACD,cAAD,EAAmC;AAC5D,QAAI,CAACA,cAAc,CAACN,GAAhB,IAAuB,OAAOM,cAAc,CAACN,GAAtB,KAA8B,QAAzD,EAAmE;AACjE,YAAMR,KAAK,CAAC,uDAAD,CAAX;AACD;;AAED,QAAI,CAACc,cAAc,CAAC8I,IAAhB,IAAwB,OAAO9I,cAAc,CAAC8I,IAAtB,KAA+B,QAA3D,EAAqE;AACnE,YAAM5J,KAAK,CAAC,wDAAD,CAAX;AACD;;AAED,QAAI,CAACc,cAAc,CAAC+I,KAAhB,IAAyB,OAAO/I,cAAc,CAAC+I,KAAtB,KAAgC,QAA7D,EAAuE;AACrE,YAAM7J,KAAK,CAAC,yDAAD,CAAX;AACD;;AAED,UAAM8J,gBAAgB,GAAsB;AAC1CjK,YAAM,EAAE,KAAKA,MAD6B;AAE1CkF,WAAK,EAAE,KAAKrE,QAF8B;AAG1CkJ,UAAI,EAAE9I,cAAc,CAAC8I,IAHqB;AAI1CC,WAAK,EAAE/I,cAAc,CAAC+I,KAJoB;AAK1CE,cAAQ,EAAE,EALgC;AAM1CC,cAAQ,EAAElJ,cAAc,CAACkJ,QAAf,IAA2B;AANK,KAA5C;AASA,SAAKlH,EAAL,CAAQ,SAAR,EAAmB,OAAOqB,KAAP,EAA4BM,OAA5B,KAA4C;AAC7D,UAAIN,KAAJ,EAAW;AACT,cAAMA,KAAN;AACD;;AAED,UAAIrD,cAAc,CAACS,QAAnB,EAA6B;AAC3B,cAAMwI,QAAQ,GAAGtF,OAAO,CAACb,MAAR,CAAe,CAAf,EAAkBrC,QAAlB,CAA2B0I,IAA5C;AACAH,wBAAgB,CAACC,QAAjB,GAA4BA,QAA5B;AACD;;AAED,UAAI;AACF,cAAM3E,QAAQ,GAAG,MAAM8E,KAAK,CAAC,GAAGpJ,cAAc,CAACN,GAAG,MAAtB,EAA8B;AACxDmD,gBAAM,EAAE,MADgD;AAExDwG,iBAAO,EAAE;AACPC,kBAAM,EAAE,kBADD;AAEP,4BAAgB;AAFT,WAF+C;AAMxDC,cAAI,EAAE5D,IAAI,CAACC,SAAL,CAAeoD,gBAAf;AANkD,SAA9B,CAA5B;AASA,cAAMQ,IAAI,GAAG,MAAMlF,QAAQ,CAACkF,IAAT,EAAnB;;AACA,YAAI,CAACA,IAAI,CAACC,OAAV,EAAmB;AACjB,gBAAMvK,KAAK,CAAC,mCAAD,CAAX;AACD;AACF,OAdD,CAcE,OAAOmE,KAAP,EAAc;AACd,cAAMnE,KAAK,CAAC,mCAAD,CAAX;AACD;AACF,KA3BD;AA4BD;;AAnyCY;;AAqyCf,eAAenB,SAAf","names":["parsePersonalSign","parseTransactionData","convertArrayBufferToHex","convertHexToArrayBuffer","getClientMeta","payloadId","uuid","formatRpcError","parseWalletConnectUri","convertNumberToHex","isJsonRpcResponseSuccess","isJsonRpcResponseError","isSilentPayload","getLocal","signingMethods","mobileLinkChoiceKey","isMobile","removeLocal","SocketTransport","ERROR_SESSION_CONNECTED","ERROR_SESSION_DISCONNECTED","ERROR_SESSION_REJECTED","ERROR_MISSING_JSON_RPC","ERROR_MISSING_RESULT","ERROR_MISSING_ERROR","ERROR_MISSING_METHOD","ERROR_MISSING_ID","ERROR_INVALID_RESPONSE","ERROR_INVALID_URI","ERROR_MISSING_REQUIRED","ERROR_QRCODE_MODAL_NOT_PROVIDED","ERROR_QRCODE_MODAL_USER_CLOSED","EventManager","SessionStorage","getBridgeUrl","Connector","constructor","opts","_clientMeta","connectorOpts","clientMeta","_cryptoLib","cryptoLib","_sessionStorage","sessionStorage","storageId","_qrcodeModal","qrcodeModal","_qrcodeModalOptions","qrcodeModalOptions","_signingMethods","bridge","uri","session","Error","_getStorageSession","handshakeId","_subscribeToSessionResponse","_transport","transport","protocol","version","url","subscriptions","clientId","_subscribeToInternalEvents","_initTransport","_subscribeToSessionRequest","pushServerOpts","_registerPushServer","value","_bridge","key","_key","_clientId","peerId","_peerId","peerMeta","_peerMeta","selectedWalletId","_selectedWalletId","wallets","_wallets","handshakeTopic","_handshakeTopic","_handshakeId","_uri","_formatUri","_parseUri","chainId","_chainId","chainType","_chainType","accounts","_accounts","rpcUrl","_rpcUrl","connected","_connected","pending","on","event","callback","eventEmitter","_eventManager","subscribe","off","unsubscribe","createInstantRequest","instantRequest","_generateKey","request","_formatRequest","method","params","id","trigger","endInstantRequest","killSession","result","_sendCallRequest","error","connect","createSession","Promise","resolve","reject","payload","_a","_b","accountTypes","_c","_sendSessionRequest","topic","approveSession","sessionStatus","sessionParams","approved","response","jsonrpc","_sendResponse","_setStorageSession","rejectSession","sessionError","message","_formatResponse","_removeStorageSession","updateSession","_manageStorageSession","_sendRequest","_handleSessionDisconnect","sendTransaction","tx","parsedTx","sendJSONRequest","jsonRequest","options","encryptionPayload","_encrypt","JSON","stringify","silent","forcePushNotification","send","_subscribeToCallResponse","signTransaction","signMessage","signPersonalMessage","signTypedData","updateChain","chainParams","unsafeSend","_subscribeToResponse","sendCustomRequest","formattedRequest","approveRequest","formattedResponse","rejectRequest","transportClose","close","callRequest","errorMsg","account","baseResponse","errorResponse","successResponse","_handleSessionResponse","_handleIncomingMessages","socketMessage","activeTopics","includes","parse","_decrypt","open","mobileLinkUrl","window","location","href","code","toString","internalPayload","encodeURIComponent","decodeURIComponent","generateKey","data","encrypt","decrypt","getSession","setSession","removeSession","type","token","pushSubscription","peerName","language","name","fetch","headers","Accept","body","json","success"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}