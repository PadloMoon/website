{"ast":null,"code":"// walletSlice\nexport const defaultRefreshing = {\n  status: false,\n  message: \"Please wait a few seconds...\"\n};\nexport const defaultWallet = {\n  walletProviderName: \"\",\n  address: \"\",\n  browserWeb3Provider: null,\n  serverWeb3Provider: null,\n  wcConnector: null,\n  wcProvider: null,\n  connected: false,\n  chainId: 0\n};\nexport const defaultWalletWeb3Modal = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null\n};\nexport const defaultQueryResults = {\n  lastBlockNumber: 0,\n  croBalance: 0,\n  padloBalance: 0,\n  lastTxHash: \"\"\n}; // transactionSlice","map":{"version":3,"sources":["/home/vanka/dev/padlomoon/frontend/src/slices/interfaces.ts"],"names":["defaultRefreshing","status","message","defaultWallet","walletProviderName","address","browserWeb3Provider","serverWeb3Provider","wcConnector","wcProvider","connected","chainId","defaultWalletWeb3Modal","fetching","web3","provider","networkId","assets","showModal","pendingRequest","result","defaultQueryResults","lastBlockNumber","croBalance","padloBalance","lastTxHash"],"mappings":"AAEA;AAqDA,OAAO,MAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,KADuB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAA1B;AAKP,OAAO,MAAMC,aAAsB,GAAG;AACpCC,EAAAA,kBAAkB,EAAE,EADgB;AAEpCC,EAAAA,OAAO,EAAE,EAF2B;AAGpCC,EAAAA,mBAAmB,EAAE,IAHe;AAIpCC,EAAAA,kBAAkB,EAAE,IAJgB;AAKpCC,EAAAA,WAAW,EAAE,IALuB;AAMpCC,EAAAA,UAAU,EAAE,IANwB;AAOpCC,EAAAA,SAAS,EAAE,KAPyB;AAQpCC,EAAAA,OAAO,EAAE;AAR2B,CAA/B;AAWP,OAAO,MAAMC,sBAAwC,GAAG;AACtDC,EAAAA,QAAQ,EAAE,KAD4C;AAEtDR,EAAAA,OAAO,EAAE,EAF6C;AAGtDS,EAAAA,IAAI,EAAE,IAHgD;AAItDC,EAAAA,QAAQ,EAAE,IAJ4C;AAKtDL,EAAAA,SAAS,EAAE,KAL2C;AAMtDC,EAAAA,OAAO,EAAE,CAN6C;AAOtDK,EAAAA,SAAS,EAAE,CAP2C;AAQtDC,EAAAA,MAAM,EAAE,EAR8C;AAStDC,EAAAA,SAAS,EAAE,KAT2C;AAUtDC,EAAAA,cAAc,EAAE,KAVsC;AAWtDC,EAAAA,MAAM,EAAE;AAX8C,CAAjD;AAcP,OAAO,MAAMC,mBAAkC,GAAG;AAChDC,EAAAA,eAAe,EAAE,CAD+B;AAEhDC,EAAAA,UAAU,EAAE,CAFoC;AAGhDC,EAAAA,YAAY,EAAE,CAHkC;AAIhDC,EAAAA,UAAU,EAAE;AAJoC,CAA3C,C,CAOP","sourcesContent":["import { ethers } from \"ethers\";\n\n// walletSlice\nexport interface WalletState {\n  refreshing: IRefreshing;\n  wallet: IWallet;\n  walletWeb3Modal: IWalletWeb3Modal;\n  queryResults: IQueryResults;\n}\n\nexport interface IRefreshing {\n  status: boolean;\n  message: string;\n}\n\nexport interface IWallet {\n  walletProviderName: string; // for example, \"metamask\" or \"defiwallet\"\n  address: string; // 0x address of the user\n  browserWeb3Provider: any; // Web3 provider connected to the wallet's browser extension\n  serverWeb3Provider: ethers.providers.JsonRpcProvider | null; // cloud based Web3 provider for read-only\n  wcConnector: any; // connector object provided by some wallet connection methods, stored if relevant\n  wcProvider: any; // provider object provided by some wallet connection methods, stored if relevant\n  connected: boolean; // is the wallet connected to the Dapp, or not?\n  chainId: number; // for example, 25 for Cronos mainnet, and 338 for Cronos testnet\n}\n\nexport interface IWalletWeb3Modal {\n  fetching: boolean;\n  address: string;\n  web3: any;\n  provider: any;\n  connected: boolean;\n  chainId: number;\n  networkId: number;\n  assets: IAssetData[];\n  showModal: boolean;\n  pendingRequest: boolean;\n  result: any | null;\n}\n\nexport interface IAssetData {\n  symbol: string;\n  name: string;\n  decimals: string;\n  contractAddress: string;\n  balance?: string;\n}\n\nexport interface IQueryResults {\n  lastBlockNumber: number;\n  croBalance: number;\n  padloBalance: number;\n  lastTxHash: string;\n}\n\nexport const defaultRefreshing = {\n  status: false,\n  message: \"Please wait a few seconds...\",\n};\n\nexport const defaultWallet: IWallet = {\n  walletProviderName: \"\",\n  address: \"\",\n  browserWeb3Provider: null,\n  serverWeb3Provider: null,\n  wcConnector: null,\n  wcProvider: null,\n  connected: false,\n  chainId: 0,\n};\n\nexport const defaultWalletWeb3Modal: IWalletWeb3Modal = {\n  fetching: false,\n  address: \"\",\n  web3: null,\n  provider: null,\n  connected: false,\n  chainId: 1,\n  networkId: 1,\n  assets: [],\n  showModal: false,\n  pendingRequest: false,\n  result: null,\n};\n\nexport const defaultQueryResults: IQueryResults = {\n  lastBlockNumber: 0,\n  croBalance: 0,\n  padloBalance: 0,\n  lastTxHash: \"\",\n};\n\n// transactionSlice\n\nexport interface TransactionState {\n  processing: boolean;\n  transaction: string | null;\n}\n"]},"metadata":{},"sourceType":"module"}