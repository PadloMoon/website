{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  processing: false,\n  transaction: null\n};\nexport const transactionSlice = createSlice({\n  name: \"transaction\",\n  initialState,\n  reducers: {\n    setProcessing: (state, action) => {\n      state.processing = action.payload;\n    },\n    setTransaction: (state, action) => {\n      state.transaction = action.payload;\n    }\n  }\n});\nexport const {\n  setProcessing,\n  setTransaction\n} = transactionSlice.actions;\nexport const selectRefreshing = state => state.transaction.processing;\nexport const selectTransaction = state => state.transaction.transaction;\nexport default transactionSlice.reducer;","map":{"version":3,"sources":["/home/vanka/dev/padlomoon/frontend/src/slices/transactionSlice.ts"],"names":["createSlice","initialState","processing","transaction","transactionSlice","name","reducers","setProcessing","state","action","payload","setTransaction","actions","selectRefreshing","selectTransaction","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAIA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,WAAW,EAAE;AAFwB,CAAvC;AAKA,OAAO,MAAMC,gBAAgB,GAAGJ,WAAW,CAAC;AAC1CK,EAAAA,IAAI,EAAE,aADoC;AAE1CJ,EAAAA,YAF0C;AAG1CK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA2C;AACxDD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD,KAHO;AAIRC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAA0C;AACxDD,MAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B;AACD;AANO;AAHgC,CAAD,CAApC;AAaP,OAAO,MAAM;AAAEH,EAAAA,aAAF;AAAiBI,EAAAA;AAAjB,IAAoCP,gBAAgB,CAACQ,OAA3D;AAEP,OAAO,MAAMC,gBAAgB,GAAIL,KAAD,IAC9BA,KAAK,CAACL,WAAN,CAAkBD,UADb;AAEP,OAAO,MAAMY,iBAAiB,GAAIN,KAAD,IAC/BA,KAAK,CAACL,WAAN,CAAkBA,WADb;AAGP,eAAeC,gBAAgB,CAACW,OAAhC","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TransactionState } from \"./interfaces\";\nimport { RootState } from \"./store\";\n\nconst initialState: TransactionState = {\n  processing: false,\n  transaction: null,\n};\n\nexport const transactionSlice = createSlice({\n  name: \"transaction\",\n  initialState,\n  reducers: {\n    setProcessing: (state, action: PayloadAction<boolean>) => {\n      state.processing = action.payload;\n    },\n    setTransaction: (state, action: PayloadAction<string>) => {\n      state.transaction = action.payload;\n    },\n  },\n});\n\nexport const { setProcessing, setTransaction } = transactionSlice.actions;\n\nexport const selectRefreshing = (state: RootState) =>\n  state.transaction.processing;\nexport const selectTransaction = (state: RootState) =>\n  state.transaction.transaction;\n\nexport default transactionSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}