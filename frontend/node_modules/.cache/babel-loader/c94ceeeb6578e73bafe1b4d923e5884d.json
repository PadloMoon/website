{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hmac = void 0;\n\nclass Hmac {\n  constructor(hashFunctionConstructor, originalKey) {\n    // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n    // with the addition of incremental hashing support. Thus part of the algorithm\n    // is in the constructor and the rest in digest().\n    const blockSize = new hashFunctionConstructor().blockSize;\n\n    this.hash = data => new hashFunctionConstructor().update(data).digest();\n\n    let key = originalKey;\n\n    if (key.length > blockSize) {\n      key = this.hash(key);\n    }\n\n    if (key.length < blockSize) {\n      const zeroPadding = new Uint8Array(blockSize - key.length);\n      key = new Uint8Array([...key, ...zeroPadding]);\n    } // eslint-disable-next-line no-bitwise\n\n\n    this.oKeyPad = key.map(keyByte => keyByte ^ 0x5c); // eslint-disable-next-line no-bitwise\n\n    this.iKeyPad = key.map(keyByte => keyByte ^ 0x36);\n    this.messageHasher = new hashFunctionConstructor();\n    this.blockSize = blockSize;\n    this.update(this.iKeyPad);\n  }\n\n  update(data) {\n    this.messageHasher.update(data);\n    return this;\n  }\n\n  digest() {\n    const innerHash = this.messageHasher.digest();\n    return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n  }\n\n}\n\nexports.Hmac = Hmac;","map":{"version":3,"mappings":";;;;;;;AAEA,MAAaA,IAAb,CAAiB;AAQfC,cAAmBC,uBAAnB,EAAyDC,WAAzD,EAAgF;AAC9E;AACA;AACA;AAEA,UAAMC,SAAS,GAAG,IAAIF,uBAAJ,GAA8BE,SAAhD;;AAEA,SAAKC,IAAL,GAAaC,IAAD,IAAU,IAAIJ,uBAAJ,GAA8BK,MAA9B,CAAqCD,IAArC,EAA2CE,MAA3C,EAAtB;;AAEA,QAAIC,GAAG,GAAGN,WAAV;;AACA,QAAIM,GAAG,CAACC,MAAJ,GAAaN,SAAjB,EAA4B;AAC1BK,SAAG,GAAG,KAAKJ,IAAL,CAAUI,GAAV,CAAN;AACD;;AAED,QAAIA,GAAG,CAACC,MAAJ,GAAaN,SAAjB,EAA4B;AAC1B,YAAMO,WAAW,GAAG,IAAIC,UAAJ,CAAeR,SAAS,GAAGK,GAAG,CAACC,MAA/B,CAApB;AACAD,SAAG,GAAG,IAAIG,UAAJ,CAAe,CAAC,GAAGH,GAAJ,EAAS,GAAGE,WAAZ,CAAf,CAAN;AACD,KAjB6E,CAmB9E;;;AACA,SAAKE,OAAL,GAAeJ,GAAG,CAACK,GAAJ,CAASC,OAAD,IAAaA,OAAO,GAAG,IAA/B,CAAf,CApB8E,CAqB9E;;AACA,SAAKC,OAAL,GAAeP,GAAG,CAACK,GAAJ,CAASC,OAAD,IAAaA,OAAO,GAAG,IAA/B,CAAf;AACA,SAAKE,aAAL,GAAqB,IAAIf,uBAAJ,EAArB;AACA,SAAKE,SAAL,GAAiBA,SAAjB;AAEA,SAAKG,MAAL,CAAY,KAAKS,OAAjB;AACD;;AAEMT,QAAM,CAACD,IAAD,EAAiB;AAC5B,SAAKW,aAAL,CAAmBV,MAAnB,CAA0BD,IAA1B;AACA,WAAO,IAAP;AACD;;AAEME,QAAM;AACX,UAAMU,SAAS,GAAG,KAAKD,aAAL,CAAmBT,MAAnB,EAAlB;AACA,WAAO,KAAKH,IAAL,CAAU,IAAIO,UAAJ,CAAe,CAAC,GAAG,KAAKC,OAAT,EAAkB,GAAGK,SAArB,CAAf,CAAV,CAAP;AACD;;AA7Cc;;AAAjBC","names":["Hmac","constructor","hashFunctionConstructor","originalKey","blockSize","hash","data","update","digest","key","length","zeroPadding","Uint8Array","oKeyPad","map","keyByte","iKeyPad","messageHasher","innerHash","exports"],"sourceRoot":"","sources":["../src/hmac.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}