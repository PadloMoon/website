{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AminoTypes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst amino_1 = require(\"@cosmjs/amino\");\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst utils_1 = require(\"@cosmjs/utils\");\n\nconst gov_1 = require(\"cosmjs-types/cosmos/gov/v1beta1/gov\");\n\nconst any_1 = require(\"cosmjs-types/google/protobuf/any\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nfunction omitDefault(input) {\n  if (typeof input === \"string\") {\n    return input === \"\" ? undefined : input;\n  }\n\n  if (typeof input === \"number\") {\n    return input === 0 ? undefined : input;\n  }\n\n  if (long_1.default.isLong(input)) {\n    return input.isZero() ? undefined : input;\n  }\n\n  throw new Error(`Got unsupported type '${typeof input}'`);\n}\n\nfunction createDefaultTypes(prefix) {\n  return {\n    // bank\n    \"/cosmos.bank.v1beta1.MsgSend\": {\n      aminoType: \"cosmos-sdk/MsgSend\",\n      toAmino: _ref => {\n        let {\n          fromAddress,\n          toAddress,\n          amount\n        } = _ref;\n        return {\n          from_address: fromAddress,\n          to_address: toAddress,\n          amount: [...amount]\n        };\n      },\n      fromAmino: _ref2 => {\n        let {\n          from_address,\n          to_address,\n          amount\n        } = _ref2;\n        return {\n          fromAddress: from_address,\n          toAddress: to_address,\n          amount: [...amount]\n        };\n      }\n    },\n    \"/cosmos.bank.v1beta1.MsgMultiSend\": {\n      aminoType: \"cosmos-sdk/MsgMultiSend\",\n      toAmino: _ref3 => {\n        let {\n          inputs,\n          outputs\n        } = _ref3;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      },\n      fromAmino: _ref4 => {\n        let {\n          inputs,\n          outputs\n        } = _ref4;\n        return {\n          inputs: inputs.map(input => ({\n            address: input.address,\n            coins: [...input.coins]\n          })),\n          outputs: outputs.map(output => ({\n            address: output.address,\n            coins: [...output.coins]\n          }))\n        };\n      }\n    },\n    // distribution\n    \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\": {\n      aminoType: \"cosmos-sdk/MsgFundCommunityPool\",\n      toAmino: _ref5 => {\n        let {\n          amount,\n          depositor\n        } = _ref5;\n        return {\n          amount: [...amount],\n          depositor: depositor\n        };\n      },\n      fromAmino: _ref6 => {\n        let {\n          amount,\n          depositor\n        } = _ref6;\n        return {\n          amount: [...amount],\n          depositor: depositor\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\": {\n      aminoType: \"cosmos-sdk/MsgModifyWithdrawAddress\",\n      toAmino: _ref7 => {\n        let {\n          delegatorAddress,\n          withdrawAddress\n        } = _ref7;\n        return {\n          delegator_address: delegatorAddress,\n          withdraw_address: withdrawAddress\n        };\n      },\n      fromAmino: _ref8 => {\n        let {\n          delegator_address,\n          withdraw_address\n        } = _ref8;\n        return {\n          delegatorAddress: delegator_address,\n          withdrawAddress: withdraw_address\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawDelegationReward\",\n      toAmino: _ref9 => {\n        let {\n          delegatorAddress,\n          validatorAddress\n        } = _ref9;\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref10 => {\n        let {\n          delegator_address,\n          validator_address\n        } = _ref10;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\": {\n      aminoType: \"cosmos-sdk/MsgWithdrawValidatorCommission\",\n      toAmino: _ref11 => {\n        let {\n          validatorAddress\n        } = _ref11;\n        return {\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref12 => {\n        let {\n          validator_address\n        } = _ref12;\n        return {\n          validatorAddress: validator_address\n        };\n      }\n    },\n    // gov\n    \"/cosmos.gov.v1beta1.MsgDeposit\": {\n      aminoType: \"cosmos-sdk/MsgDeposit\",\n      toAmino: _ref13 => {\n        let {\n          amount,\n          depositor,\n          proposalId\n        } = _ref13;\n        return {\n          amount,\n          depositor,\n          proposal_id: proposalId.toString()\n        };\n      },\n      fromAmino: _ref14 => {\n        let {\n          amount,\n          depositor,\n          proposal_id\n        } = _ref14;\n        return {\n          amount: Array.from(amount),\n          depositor,\n          proposalId: long_1.default.fromString(proposal_id)\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgVote\": {\n      aminoType: \"cosmos-sdk/MsgVote\",\n      toAmino: _ref15 => {\n        let {\n          option,\n          proposalId,\n          voter\n        } = _ref15;\n        return {\n          option: option,\n          proposal_id: proposalId.toString(),\n          voter: voter\n        };\n      },\n      fromAmino: _ref16 => {\n        let {\n          option,\n          proposal_id,\n          voter\n        } = _ref16;\n        return {\n          option: gov_1.voteOptionFromJSON(option),\n          proposalId: long_1.default.fromString(proposal_id),\n          voter: voter\n        };\n      }\n    },\n    \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n      aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n      toAmino: _ref17 => {\n        let {\n          initialDeposit,\n          proposer,\n          content\n        } = _ref17;\n        utils_1.assertDefinedAndNotNull(content);\n        let proposal;\n\n        switch (content.typeUrl) {\n          case \"/cosmos.gov.v1beta1.TextProposal\":\n            {\n              const textProposal = gov_1.TextProposal.decode(content.value);\n              proposal = {\n                type: \"cosmos-sdk/TextProposal\",\n                value: {\n                  description: textProposal.description,\n                  title: textProposal.title\n                }\n              };\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n        }\n\n        return {\n          initial_deposit: initialDeposit,\n          proposer: proposer,\n          content: proposal\n        };\n      },\n      fromAmino: _ref18 => {\n        let {\n          initial_deposit,\n          proposer,\n          content\n        } = _ref18;\n        let any_content;\n\n        switch (content.type) {\n          case \"cosmos-sdk/TextProposal\":\n            {\n              const {\n                value\n              } = content;\n              utils_1.assert(utils_1.isNonNullObject(value));\n              const {\n                title,\n                description\n              } = value;\n              utils_1.assert(typeof title === \"string\");\n              utils_1.assert(typeof description === \"string\");\n              any_content = any_1.Any.fromPartial({\n                typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                  title: title,\n                  description: description\n                })).finish()\n              });\n              break;\n            }\n\n          default:\n            throw new Error(`Unsupported proposal type: '${content.type}'`);\n        }\n\n        return {\n          initialDeposit: Array.from(initial_deposit),\n          proposer: proposer,\n          content: any_content\n        };\n      }\n    },\n    // staking\n    \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n      aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n      toAmino: _ref19 => {\n        let {\n          delegatorAddress,\n          validatorSrcAddress,\n          validatorDstAddress,\n          amount\n        } = _ref19;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_src_address: validatorSrcAddress,\n          validator_dst_address: validatorDstAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref20 => {\n        let {\n          delegator_address,\n          validator_src_address,\n          validator_dst_address,\n          amount\n        } = _ref20;\n        return {\n          delegatorAddress: delegator_address,\n          validatorSrcAddress: validator_src_address,\n          validatorDstAddress: validator_dst_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n      aminoType: \"cosmos-sdk/MsgCreateValidator\",\n      toAmino: _ref21 => {\n        let {\n          description,\n          commission,\n          minSelfDelegation,\n          delegatorAddress,\n          validatorAddress,\n          pubkey,\n          value\n        } = _ref21;\n        utils_1.assertDefinedAndNotNull(description, \"missing description\");\n        utils_1.assertDefinedAndNotNull(commission, \"missing commission\");\n        utils_1.assertDefinedAndNotNull(pubkey, \"missing pubkey\");\n        utils_1.assertDefinedAndNotNull(value, \"missing value\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            max_rate: commission.maxRate,\n            max_change_rate: commission.maxChangeRate\n          },\n          min_self_delegation: minSelfDelegation,\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          pubkey: amino_1.encodeBech32Pubkey({\n            type: \"tendermint/PubKeySecp256k1\",\n            value: encoding_1.toBase64(pubkey.value)\n          }, prefix),\n          value: value\n        };\n      },\n      fromAmino: _ref22 => {\n        let {\n          description,\n          commission,\n          min_self_delegation,\n          delegator_address,\n          validator_address,\n          pubkey,\n          value\n        } = _ref22;\n        const decodedPubkey = amino_1.decodeBech32Pubkey(pubkey);\n\n        if (decodedPubkey.type !== \"tendermint/PubKeySecp256k1\") {\n          throw new Error(\"Only Secp256k1 public keys are supported\");\n        }\n\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commission: {\n            rate: commission.rate,\n            maxRate: commission.max_rate,\n            maxChangeRate: commission.max_change_rate\n          },\n          minSelfDelegation: min_self_delegation,\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          pubkey: {\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: encoding_1.fromBase64(decodedPubkey.value)\n          },\n          value: value\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgDelegate\": {\n      aminoType: \"cosmos-sdk/MsgDelegate\",\n      toAmino: _ref23 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref23;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref24 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref24;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n      aminoType: \"cosmos-sdk/MsgEditValidator\",\n      toAmino: _ref25 => {\n        let {\n          description,\n          commissionRate,\n          minSelfDelegation,\n          validatorAddress\n        } = _ref25;\n        utils_1.assertDefinedAndNotNull(description, \"missing description\");\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            security_contact: description.securityContact,\n            details: description.details\n          },\n          commission_rate: commissionRate,\n          min_self_delegation: minSelfDelegation,\n          validator_address: validatorAddress\n        };\n      },\n      fromAmino: _ref26 => {\n        let {\n          description,\n          commission_rate,\n          min_self_delegation,\n          validator_address\n        } = _ref26;\n        return {\n          description: {\n            moniker: description.moniker,\n            identity: description.identity,\n            website: description.website,\n            securityContact: description.security_contact,\n            details: description.details\n          },\n          commissionRate: commission_rate,\n          minSelfDelegation: min_self_delegation,\n          validatorAddress: validator_address\n        };\n      }\n    },\n    \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n      aminoType: \"cosmos-sdk/MsgUndelegate\",\n      toAmino: _ref27 => {\n        let {\n          delegatorAddress,\n          validatorAddress,\n          amount\n        } = _ref27;\n        utils_1.assertDefinedAndNotNull(amount, \"missing amount\");\n        return {\n          delegator_address: delegatorAddress,\n          validator_address: validatorAddress,\n          amount: amount\n        };\n      },\n      fromAmino: _ref28 => {\n        let {\n          delegator_address,\n          validator_address,\n          amount\n        } = _ref28;\n        return {\n          delegatorAddress: delegator_address,\n          validatorAddress: validator_address,\n          amount: amount\n        };\n      }\n    },\n    // ibc\n    \"/ibc.applications.transfer.v1.MsgTransfer\": {\n      aminoType: \"cosmos-sdk/MsgTransfer\",\n      toAmino: _ref29 => {\n        let {\n          sourcePort,\n          sourceChannel,\n          token,\n          sender,\n          receiver,\n          timeoutHeight,\n          timeoutTimestamp\n        } = _ref29;\n\n        var _a, _b, _c;\n\n        return {\n          source_port: sourcePort,\n          source_channel: sourceChannel,\n          token: token,\n          sender: sender,\n          receiver: receiver,\n          timeout_height: timeoutHeight ? {\n            revision_height: (_a = omitDefault(timeoutHeight.revisionHeight)) === null || _a === void 0 ? void 0 : _a.toString(),\n            revision_number: (_b = omitDefault(timeoutHeight.revisionNumber)) === null || _b === void 0 ? void 0 : _b.toString()\n          } : {},\n          timeout_timestamp: (_c = omitDefault(timeoutTimestamp)) === null || _c === void 0 ? void 0 : _c.toString()\n        };\n      },\n      fromAmino: _ref30 => {\n        let {\n          source_port,\n          source_channel,\n          token,\n          sender,\n          receiver,\n          timeout_height,\n          timeout_timestamp\n        } = _ref30;\n        return {\n          sourcePort: source_port,\n          sourceChannel: source_channel,\n          token: token,\n          sender: sender,\n          receiver: receiver,\n          timeoutHeight: timeout_height ? {\n            revisionHeight: long_1.default.fromString(timeout_height.revision_height || \"0\", true),\n            revisionNumber: long_1.default.fromString(timeout_height.revision_number || \"0\", true)\n          } : undefined,\n          timeoutTimestamp: long_1.default.fromString(timeout_timestamp || \"0\", true)\n        };\n      }\n    }\n  };\n}\n/**\n * A map from Stargate message types as used in the messages's `Any` type\n * to Amino types.\n */\n\n\nclass AminoTypes {\n  constructor() {\n    let {\n      additions = {},\n      prefix = \"cosmos\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const additionalAminoTypes = Object.values(additions);\n    const filteredDefaultTypes = Object.entries(createDefaultTypes(prefix)).reduce((acc, _ref31) => {\n      let [key, value] = _ref31;\n      return additionalAminoTypes.find(_ref32 => {\n        let {\n          aminoType\n        } = _ref32;\n        return value.aminoType === aminoType;\n      }) ? acc : Object.assign(Object.assign({}, acc), {\n        [key]: value\n      });\n    }, {});\n    this.register = Object.assign(Object.assign({}, filteredDefaultTypes), additions);\n  }\n\n  toAmino(_ref33) {\n    let {\n      typeUrl,\n      value\n    } = _ref33;\n    const converter = this.register[typeUrl];\n\n    if (!converter) {\n      throw new Error(\"Type URL does not exist in the Amino message type register. \" + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n\n    return {\n      type: converter.aminoType,\n      value: converter.toAmino(value)\n    };\n  }\n\n  fromAmino(_ref34) {\n    let {\n      type,\n      value\n    } = _ref34;\n    const result = Object.entries(this.register).find(_ref35 => {\n      let [_typeUrl, {\n        aminoType\n      }] = _ref35;\n      return aminoType === type;\n    });\n\n    if (!result) {\n      throw new Error(\"Type does not exist in the Amino message type register. \" + \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" + \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n    }\n\n    const [typeUrl, converter] = result;\n    return {\n      typeUrl: typeUrl,\n      value: converter.fromAmino(value)\n    };\n  }\n\n}\n\nexports.AminoTypes = AminoTypes;","map":{"version":3,"mappings":"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","names":["omitDefault","input","undefined","long_1","isLong","isZero","Error","createDefaultTypes","prefix","aminoType","toAmino","fromAddress","toAddress","amount","from_address","to_address","fromAmino","inputs","outputs","map","address","coins","output","depositor","delegatorAddress","withdrawAddress","delegator_address","withdraw_address","validatorAddress","validator_address","proposalId","proposal_id","toString","Array","from","fromString","option","voter","gov_1","initialDeposit","proposer","content","utils_1","proposal","typeUrl","textProposal","decode","value","type","description","title","initial_deposit","any_content","any_1","fromPartial","encode","finish","validatorSrcAddress","validatorDstAddress","validator_src_address","validator_dst_address","commission","minSelfDelegation","pubkey","moniker","identity","website","security_contact","securityContact","details","rate","max_rate","maxRate","max_change_rate","maxChangeRate","min_self_delegation","amino_1","encoding_1","decodedPubkey","commissionRate","commission_rate","sourcePort","sourceChannel","token","sender","receiver","timeoutHeight","timeoutTimestamp","source_port","source_channel","timeout_height","revision_height","revisionHeight","_a","revision_number","revisionNumber","_b","timeout_timestamp","_c","AminoTypes","constructor","additions","additionalAminoTypes","Object","values","filteredDefaultTypes","entries","reduce","acc","key","find","register","converter","result","_typeUrl","exports"],"sourceRoot":"","sources":["../src/aminotypes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}