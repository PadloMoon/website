{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReconnectingSocket = void 0;\n\nconst xstream_1 = require(\"xstream\");\n\nconst queueingstreamingsocket_1 = require(\"./queueingstreamingsocket\");\n/**\n * A wrapper around QueueingStreamingSocket that reconnects automatically.\n */\n\n\nclass ReconnectingSocket {\n  constructor(url) {\n    let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10000;\n    let reconnectedHandler = arguments.length > 2 ? arguments[2] : undefined;\n    this.unconnected = true;\n    this.disconnected = false;\n    this.timeoutIndex = 0;\n    this.reconnectTimeout = null;\n    const eventProducer = {\n      start: listener => this.eventProducerListener = listener,\n      stop: () => this.eventProducerListener = undefined\n    };\n    this.events = xstream_1.Stream.create(eventProducer);\n    this.socket = new queueingstreamingsocket_1.QueueingStreamingSocket(url, timeout, reconnectedHandler);\n    this.socket.events.subscribe({\n      next: event => {\n        if (this.eventProducerListener) {\n          this.eventProducerListener.next(event);\n        }\n      },\n      error: error => {\n        if (this.eventProducerListener) {\n          this.eventProducerListener.error(error);\n        }\n      }\n    });\n    this.connectionStatus = this.socket.connectionStatus;\n    this.connectionStatus.updates.subscribe({\n      next: status => {\n        if (status === queueingstreamingsocket_1.ConnectionStatus.Connected) {\n          this.timeoutIndex = 0;\n        }\n\n        if (status === queueingstreamingsocket_1.ConnectionStatus.Disconnected) {\n          if (this.reconnectTimeout) {\n            clearTimeout(this.reconnectTimeout);\n            this.reconnectTimeout = null;\n          }\n\n          this.reconnectTimeout = setTimeout(() => this.socket.reconnect(), ReconnectingSocket.calculateTimeout(this.timeoutIndex++));\n        }\n      }\n    });\n  }\n  /** Starts with a 0.1 second timeout, then doubles every attempt with a maximum timeout of 5 seconds. */\n\n\n  static calculateTimeout(index) {\n    return Math.min(2 ** index * 100, 5000);\n  }\n\n  connect() {\n    if (!this.unconnected) {\n      throw new Error(\"Cannot connect: socket has already connected\");\n    }\n\n    this.socket.connect();\n    this.unconnected = false;\n  }\n\n  disconnect() {\n    if (this.unconnected) {\n      throw new Error(\"Cannot disconnect: socket has not yet connected\");\n    }\n\n    this.socket.disconnect();\n\n    if (this.eventProducerListener) {\n      this.eventProducerListener.complete();\n    }\n\n    this.disconnected = true;\n  }\n\n  queueRequest(request) {\n    if (this.disconnected) {\n      throw new Error(\"Cannot queue request: socket has disconnected\");\n    }\n\n    this.socket.queueRequest(request);\n  }\n\n}\n\nexports.ReconnectingSocket = ReconnectingSocket;","map":{"version":3,"mappings":";;;;;;;AACA;;AAEA;AAGA;;;;;AAGA,MAAaA,kBAAb,CAA+B;AAgB7BC,cAAmBC,GAAnB,EAAiF;AAAA,QAAjDC,OAAiD,uEAAvC,KAAuC;AAAA,QAA/BC,kBAA+B;AALzE,uBAAc,IAAd;AACA,wBAAe,KAAf;AACA,wBAAe,CAAf;AACA,4BAA0C,IAA1C;AAGN,UAAMC,aAAa,GAAkB;AACnCC,WAAK,EAAGC,QAAD,IAAe,KAAKC,qBAAL,GAA6BD,QADhB;AAEnCE,UAAI,EAAE,MAAO,KAAKD,qBAAL,GAA6BE;AAFP,KAArC;AAIA,SAAKC,MAAL,GAAcC,iBAAOC,MAAP,CAAcR,aAAd,CAAd;AAEA,SAAKS,MAAL,GAAc,IAAIC,iDAAJ,CAA4Bb,GAA5B,EAAiCC,OAAjC,EAA0CC,kBAA1C,CAAd;AACA,SAAKU,MAAL,CAAYH,MAAZ,CAAmBK,SAAnB,CAA6B;AAC3BC,UAAI,EAAGC,KAAD,IAAU;AACd,YAAI,KAAKV,qBAAT,EAAgC;AAC9B,eAAKA,qBAAL,CAA2BS,IAA3B,CAAgCC,KAAhC;AACD;AACF,OAL0B;AAM3BC,WAAK,EAAGA,KAAD,IAAU;AACf,YAAI,KAAKX,qBAAT,EAAgC;AAC9B,eAAKA,qBAAL,CAA2BW,KAA3B,CAAiCA,KAAjC;AACD;AACF;AAV0B,KAA7B;AAaA,SAAKC,gBAAL,GAAwB,KAAKN,MAAL,CAAYM,gBAApC;AACA,SAAKA,gBAAL,CAAsBC,OAAtB,CAA8BL,SAA9B,CAAwC;AACtCC,UAAI,EAAGK,MAAD,IAAW;AACf,YAAIA,MAAM,KAAKP,2CAAiBQ,SAAhC,EAA2C;AACzC,eAAKC,YAAL,GAAoB,CAApB;AACD;;AACD,YAAIF,MAAM,KAAKP,2CAAiBU,YAAhC,EAA8C;AAC5C,cAAI,KAAKC,gBAAT,EAA2B;AACzBC,wBAAY,CAAC,KAAKD,gBAAN,CAAZ;AACA,iBAAKA,gBAAL,GAAwB,IAAxB;AACD;;AACD,eAAKA,gBAAL,GAAwBE,UAAU,CAChC,MAAM,KAAKd,MAAL,CAAYe,SAAZ,EAD0B,EAEhC7B,kBAAkB,CAAC8B,gBAAnB,CAAoC,KAAKN,YAAL,EAApC,CAFgC,CAAlC;AAID;AACF;AAfqC,KAAxC;AAiBD;AAtDD;;;AAC+B,SAAhBM,gBAAgB,CAACC,KAAD,EAAc;AAC3C,WAAOC,IAAI,CAACC,GAAL,CAAS,KAAKF,KAAL,GAAa,GAAtB,EAA2B,IAA3B,CAAP;AACD;;AAqDMG,SAAO;AACZ,QAAI,CAAC,KAAKC,WAAV,EAAuB;AACrB,YAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAKtB,MAAL,CAAYoB,OAAZ;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACD;;AAEME,YAAU;AACf,QAAI,KAAKF,WAAT,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;;AACD,SAAKtB,MAAL,CAAYuB,UAAZ;;AACA,QAAI,KAAK7B,qBAAT,EAAgC;AAC9B,WAAKA,qBAAL,CAA2B8B,QAA3B;AACD;;AACD,SAAKC,YAAL,GAAoB,IAApB;AACD;;AAEMC,cAAY,CAACC,OAAD,EAAgB;AACjC,QAAI,KAAKF,YAAT,EAAuB;AACrB,YAAM,IAAIH,KAAJ,CAAU,+CAAV,CAAN;AACD;;AACD,SAAKtB,MAAL,CAAY0B,YAAZ,CAAyBC,OAAzB;AACD;;AAjF4B;;AAA/BC","names":["ReconnectingSocket","constructor","url","timeout","reconnectedHandler","eventProducer","start","listener","eventProducerListener","stop","undefined","events","xstream_1","create","socket","queueingstreamingsocket_1","subscribe","next","event","error","connectionStatus","updates","status","Connected","timeoutIndex","Disconnected","reconnectTimeout","clearTimeout","setTimeout","reconnect","calculateTimeout","index","Math","min","connect","unconnected","Error","disconnect","complete","disconnected","queueRequest","request","exports"],"sourceRoot":"","sources":["../src/reconnectingsocket.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}