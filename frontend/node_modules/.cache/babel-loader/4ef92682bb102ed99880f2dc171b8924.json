{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"cosmos.crypto.secp256k1\";\nconst basePubKey = {};\nexports.PubKey = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePubKey);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, basePubKey);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, basePubKey);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n\n};\nconst basePrivKey = {};\nexports.PrivKey = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, basePrivKey);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, basePrivKey);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, basePrivKey);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","basePubKey","encode","message","writer","minimal_1","Writer","create","key","length","uint32","bytes","decode","input","reader","Reader","end","undefined","len","pos","Object","Uint8Array","tag","skipType","fromJSON","object","bytesFromBase64","toJSON","obj","base64FromBytes","fromPartial","_a","basePrivKey","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","push","String","fromCharCode","join","util","Long","long_1","configure"],"sourceRoot":"","sources":["../../../../src/cosmos/crypto/secp256k1/keys.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}