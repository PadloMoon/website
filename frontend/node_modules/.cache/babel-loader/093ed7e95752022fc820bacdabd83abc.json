{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toRfc3339 = exports.fromRfc3339 = void 0;\nconst rfc3339Matcher = /^(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?((?:[+-]\\d{2}:\\d{2})|Z)$/;\n\nfunction padded(integer) {\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  const filled = \"00000\" + integer.toString();\n  return filled.substring(filled.length - length);\n}\n\nfunction fromRfc3339(str) {\n  const matches = rfc3339Matcher.exec(str);\n\n  if (!matches) {\n    throw new Error(\"Date string is not in RFC3339 format\");\n  }\n\n  const year = +matches[1];\n  const month = +matches[2];\n  const day = +matches[3];\n  const hour = +matches[4];\n  const minute = +matches[5];\n  const second = +matches[6]; // fractional seconds match either undefined or a string like \".1\", \".123456789\"\n\n  const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1000) : 0;\n  let tzOffsetSign;\n  let tzOffsetHours;\n  let tzOffsetMinutes; // if timezone is undefined, it must be Z or nothing (otherwise the group would have captured).\n\n  if (matches[8] === \"Z\") {\n    tzOffsetSign = 1;\n    tzOffsetHours = 0;\n    tzOffsetMinutes = 0;\n  } else {\n    tzOffsetSign = matches[8].substring(0, 1) === \"-\" ? -1 : 1;\n    tzOffsetHours = +matches[8].substring(1, 3);\n    tzOffsetMinutes = +matches[8].substring(4, 6);\n  }\n\n  const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60; // seconds\n\n  const timestamp = Date.UTC(year, month - 1, day, hour, minute, second, milliSeconds) - tzOffset * 1000;\n  return new Date(timestamp);\n}\n\nexports.fromRfc3339 = fromRfc3339;\n\nfunction toRfc3339(date) {\n  const year = date.getUTCFullYear();\n  const month = padded(date.getUTCMonth() + 1);\n  const day = padded(date.getUTCDate());\n  const hour = padded(date.getUTCHours());\n  const minute = padded(date.getUTCMinutes());\n  const second = padded(date.getUTCSeconds());\n  const ms = padded(date.getUTCMilliseconds(), 3);\n  return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;\n}\n\nexports.toRfc3339 = toRfc3339;","map":{"version":3,"mappings":"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","names":["rfc3339Matcher","padded","integer","length","filled","toString","substring","fromRfc3339","str","matches","exec","Error","year","month","day","hour","minute","second","milliSeconds","Math","floor","tzOffsetSign","tzOffsetHours","tzOffsetMinutes","tzOffset","timestamp","Date","UTC","exports","toRfc3339","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ms","getUTCMilliseconds"],"sourceRoot":"","sources":["../src/rfc3339.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}