{"ast":null,"code":"var _jsxFileName = \"/home/vanka/dev/padlomoon/frontend/src/routes/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Login.module.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CREATE_LOGIN_MUTATION = gql`\n  mutation Mutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      name\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [createLogin] = useMutation(CREATE_LOGIN_MUTATION, {\n    variables: {\n      email: event.target.email.value,\n      password: event.target.password.value\n    }\n  });\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    console.log(event.target.email.value);\n    console.log(event.target.password.value);\n    event.preventDefault();\n    console.log(\"createLogin\", createLogin);\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Container,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            className: styles.Input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter password\",\n            className: styles.Input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classNames(mainStyles.Button, styles.SubmitButton),\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"13N78smNLvCIEvbOpKcJmq/xKgI=\", false, function () {\n  return [useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vanka/dev/padlomoon/frontend/src/routes/Login/Login.tsx"],"names":["React","useState","classNames","useMutation","gql","mainStyles","styles","Form","Button","CREATE_LOGIN_MUTATION","Login","validated","setValidated","loginState","setLoginState","email","password","createLogin","variables","event","target","value","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","console","log","Container","Input","SubmitButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Login.module.css\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst CREATE_LOGIN_MUTATION = gql`\n  mutation Mutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      name\n    }\n  }\n`;\n\nconst Login = () => {\n  const [validated, setValidated] = useState(false);\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [createLogin] = useMutation(CREATE_LOGIN_MUTATION, {\n    variables: {\n      email: event.target.email.value,\n      password: event.target.password.value,\n    },\n  });\n\n  const handleSubmit = (event: React.BaseSyntheticEvent) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    console.log(event.target.email.value);\n    console.log(event.target.password.value);\n    event.preventDefault();\n\n    console.log(\"createLogin\", createLogin);\n    setValidated(true);\n  };\n  return (\n    <>\n      <div className={styles.Container}>\n        <Form validated={validated} onSubmit={handleSubmit}>\n          <Form.Group controlId=\"email\">\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              className={styles.Input}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control\n              required\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              className={styles.Input}\n            />\n          </Form.Group>\n          <Button\n            className={classNames(mainStyles.Button, styles.SubmitButton)}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}