{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupDistributionExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst query_1 = require(\"cosmjs-types/cosmos/distribution/v1beta1/query\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst utils_1 = require(\"./utils\");\n\nfunction setupDistributionExtension(base) {\n  const rpc = utils_1.createProtobufRpcClient(base); // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    distribution: {\n      communityPool: async () => {\n        const response = await queryService.CommunityPool({});\n        return response;\n      },\n      delegationRewards: async (delegatorAddress, validatorAddress) => {\n        const response = await queryService.DelegationRewards({\n          delegatorAddress: delegatorAddress,\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      delegationTotalRewards: async delegatorAddress => {\n        const response = await queryService.DelegationTotalRewards({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      delegatorValidators: async delegatorAddress => {\n        const response = await queryService.DelegatorValidators({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      delegatorWithdrawAddress: async delegatorAddress => {\n        const response = await queryService.DelegatorWithdrawAddress({\n          delegatorAddress: delegatorAddress\n        });\n        return response;\n      },\n      params: async () => {\n        const response = await queryService.Params({});\n        return response;\n      },\n      validatorCommission: async validatorAddress => {\n        const response = await queryService.ValidatorCommission({\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      validatorOutstandingRewards: async validatorAddress => {\n        const response = await queryService.ValidatorOutstandingRewards({\n          validatorAddress: validatorAddress\n        });\n        return response;\n      },\n      validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {\n        const response = await queryService.ValidatorSlashes({\n          validatorAddress: validatorAddress,\n          startingHeight: long_1.default.fromNumber(startingHeight, true),\n          endingHeight: long_1.default.fromNumber(endingHeight, true),\n          pagination: utils_1.createPagination(paginationKey)\n        });\n        return response;\n      }\n    }\n  };\n}\n\nexports.setupDistributionExtension = setupDistributionExtension;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAYA;;AAGA;;AA0BA,SAAgBA,0BAAhB,CAA2CC,IAA3C,EAA4D;AAC1D,QAAMC,GAAG,GAAGC,gCAAwBF,IAAxB,CAAZ,CAD0D,CAE1D;AACA;;AACA,QAAMG,YAAY,GAAG,IAAIC,uBAAJ,CAAoBH,GAApB,CAArB;AAEA,SAAO;AACLI,gBAAY,EAAE;AACZC,mBAAa,EAAE,YAAW;AACxB,cAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACK,aAAb,CAA2B,EAA3B,CAAvB;AACA,eAAOD,QAAP;AACD,OAJW;AAKZE,uBAAiB,EAAE,OAAOC,gBAAP,EAAiCC,gBAAjC,KAA6D;AAC9E,cAAMJ,QAAQ,GAAG,MAAMJ,YAAY,CAACS,iBAAb,CAA+B;AACpDF,0BAAgB,EAAEA,gBADkC;AAEpDC,0BAAgB,EAAEA;AAFkC,SAA/B,CAAvB;AAIA,eAAOJ,QAAP;AACD,OAXW;AAYZM,4BAAsB,EAAE,MAAOH,gBAAP,IAAmC;AACzD,cAAMH,QAAQ,GAAG,MAAMJ,YAAY,CAACW,sBAAb,CAAoC;AACzDJ,0BAAgB,EAAEA;AADuC,SAApC,CAAvB;AAGA,eAAOH,QAAP;AACD,OAjBW;AAkBZQ,yBAAmB,EAAE,MAAOL,gBAAP,IAAmC;AACtD,cAAMH,QAAQ,GAAG,MAAMJ,YAAY,CAACa,mBAAb,CAAiC;AACtDN,0BAAgB,EAAEA;AADoC,SAAjC,CAAvB;AAGA,eAAOH,QAAP;AACD,OAvBW;AAwBZU,8BAAwB,EAAE,MAAOP,gBAAP,IAAmC;AAC3D,cAAMH,QAAQ,GAAG,MAAMJ,YAAY,CAACe,wBAAb,CAAsC;AAC3DR,0BAAgB,EAAEA;AADyC,SAAtC,CAAvB;AAGA,eAAOH,QAAP;AACD,OA7BW;AA8BZY,YAAM,EAAE,YAAW;AACjB,cAAMZ,QAAQ,GAAG,MAAMJ,YAAY,CAACiB,MAAb,CAAoB,EAApB,CAAvB;AACA,eAAOb,QAAP;AACD,OAjCW;AAkCZc,yBAAmB,EAAE,MAAOV,gBAAP,IAAmC;AACtD,cAAMJ,QAAQ,GAAG,MAAMJ,YAAY,CAACmB,mBAAb,CAAiC;AACtDX,0BAAgB,EAAEA;AADoC,SAAjC,CAAvB;AAGA,eAAOJ,QAAP;AACD,OAvCW;AAwCZgB,iCAA2B,EAAE,MAAOZ,gBAAP,IAAmC;AAC9D,cAAMJ,QAAQ,GAAG,MAAMJ,YAAY,CAACqB,2BAAb,CAAyC;AAC9Db,0BAAgB,EAAEA;AAD4C,SAAzC,CAAvB;AAGA,eAAOJ,QAAP;AACD,OA7CW;AA8CZkB,sBAAgB,EAAE,OAChBd,gBADgB,EAEhBe,cAFgB,EAGhBC,YAHgB,EAIhBC,aAJgB,KAKd;AACF,cAAMrB,QAAQ,GAAG,MAAMJ,YAAY,CAAC0B,gBAAb,CAA8B;AACnDlB,0BAAgB,EAAEA,gBADiC;AAEnDe,wBAAc,EAAEI,eAAKC,UAAL,CAAgBL,cAAhB,EAAgC,IAAhC,CAFmC;AAGnDC,sBAAY,EAAEG,eAAKC,UAAL,CAAgBJ,YAAhB,EAA8B,IAA9B,CAHqC;AAInDK,oBAAU,EAAE9B,yBAAiB0B,aAAjB;AAJuC,SAA9B,CAAvB;AAMA,eAAOrB,QAAP;AACD;AA3DW;AADT,GAAP;AA+DD;;AArED0B","names":["setupDistributionExtension","base","rpc","utils_1","queryService","query_1","distribution","communityPool","response","CommunityPool","delegationRewards","delegatorAddress","validatorAddress","DelegationRewards","delegationTotalRewards","DelegationTotalRewards","delegatorValidators","DelegatorValidators","delegatorWithdrawAddress","DelegatorWithdrawAddress","params","Params","validatorCommission","ValidatorCommission","validatorOutstandingRewards","ValidatorOutstandingRewards","validatorSlashes","startingHeight","endingHeight","paginationKey","ValidatorSlashes","long_1","fromNumber","pagination","exports"],"sourceRoot":"","sources":["../../src/queries/distribution.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}