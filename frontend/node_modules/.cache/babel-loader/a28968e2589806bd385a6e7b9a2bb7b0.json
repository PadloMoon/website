{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProofOps = exports.ProofOp = exports.DominoOp = exports.ValueOp = exports.Proof = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"tendermint.crypto\";\nconst baseProof = {\n  total: long_1.default.ZERO,\n  index: long_1.default.ZERO\n};\nexports.Proof = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.total.isZero()) {\n      writer.uint32(8).int64(message.total);\n    }\n\n    if (!message.index.isZero()) {\n      writer.uint32(16).int64(message.index);\n    }\n\n    if (message.leafHash.length !== 0) {\n      writer.uint32(26).bytes(message.leafHash);\n    }\n\n    for (const v of message.aunts) {\n      writer.uint32(34).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.total = reader.int64();\n          break;\n\n        case 2:\n          message.index = reader.int64();\n          break;\n\n        case 3:\n          message.leafHash = reader.bytes();\n          break;\n\n        case 4:\n          message.aunts.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProof);\n    message.aunts = [];\n    message.leafHash = new Uint8Array();\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = long_1.default.fromString(object.total);\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = long_1.default.fromString(object.index);\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n\n    if (object.leafHash !== undefined && object.leafHash !== null) {\n      message.leafHash = bytesFromBase64(object.leafHash);\n    }\n\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.total !== undefined && (obj.total = (message.total || long_1.default.ZERO).toString());\n    message.index !== undefined && (obj.index = (message.index || long_1.default.ZERO).toString());\n    message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n\n    if (message.aunts) {\n      obj.aunts = message.aunts.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.aunts = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseProof);\n\n    if (object.total !== undefined && object.total !== null) {\n      message.total = object.total;\n    } else {\n      message.total = long_1.default.ZERO;\n    }\n\n    if (object.index !== undefined && object.index !== null) {\n      message.index = object.index;\n    } else {\n      message.index = long_1.default.ZERO;\n    }\n\n    message.leafHash = (_a = object.leafHash) !== null && _a !== void 0 ? _a : new Uint8Array();\n    message.aunts = [];\n\n    if (object.aunts !== undefined && object.aunts !== null) {\n      for (const e of object.aunts) {\n        message.aunts.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseValueOp = {};\nexports.ValueOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    if (message.proof !== undefined) {\n      exports.Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        case 2:\n          message.proof = exports.Proof.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseValueOp);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromJSON(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = message.proof ? exports.Proof.toJSON(message.proof) : undefined);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a;\n\n    const message = Object.assign({}, baseValueOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array();\n\n    if (object.proof !== undefined && object.proof !== null) {\n      message.proof = exports.Proof.fromPartial(object.proof);\n    } else {\n      message.proof = undefined;\n    }\n\n    return message;\n  }\n\n};\nconst baseDominoOp = {\n  key: \"\",\n  input: \"\",\n  output: \"\"\n};\nexports.DominoOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n\n    if (message.input !== \"\") {\n      writer.uint32(18).string(message.input);\n    }\n\n    if (message.output !== \"\") {\n      writer.uint32(26).string(message.output);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseDominoOp);\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.string();\n          break;\n\n        case 2:\n          message.input = reader.string();\n          break;\n\n        case 3:\n          message.output = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseDominoOp);\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = String(object.key);\n    } else {\n      message.key = \"\";\n    }\n\n    if (object.input !== undefined && object.input !== null) {\n      message.input = String(object.input);\n    } else {\n      message.input = \"\";\n    }\n\n    if (object.output !== undefined && object.output !== null) {\n      message.output = String(object.output);\n    } else {\n      message.output = \"\";\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.key !== undefined && (obj.key = message.key);\n    message.input !== undefined && (obj.input = message.input);\n    message.output !== undefined && (obj.output = message.output);\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseDominoOp);\n    message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n    message.input = (_b = object.input) !== null && _b !== void 0 ? _b : \"\";\n    message.output = (_c = object.output) !== null && _c !== void 0 ? _c : \"\";\n    return message;\n  }\n\n};\nconst baseProofOp = {\n  type: \"\"\n};\nexports.ProofOp = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.type !== \"\") {\n      writer.uint32(10).string(message.type);\n    }\n\n    if (message.key.length !== 0) {\n      writer.uint32(18).bytes(message.key);\n    }\n\n    if (message.data.length !== 0) {\n      writer.uint32(26).bytes(message.data);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.type = reader.string();\n          break;\n\n        case 2:\n          message.key = reader.bytes();\n          break;\n\n        case 3:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOp);\n    message.key = new Uint8Array();\n    message.data = new Uint8Array();\n\n    if (object.type !== undefined && object.type !== null) {\n      message.type = String(object.type);\n    } else {\n      message.type = \"\";\n    }\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.type !== undefined && (obj.type = message.type);\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    var _a, _b, _c;\n\n    const message = Object.assign({}, baseProofOp);\n    message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n    message.key = (_b = object.key) !== null && _b !== void 0 ? _b : new Uint8Array();\n    message.data = (_c = object.data) !== null && _c !== void 0 ? _c : new Uint8Array();\n    return message;\n  }\n\n};\nconst baseProofOps = {};\nexports.ProofOps = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.ops) {\n      exports.ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.ops.push(exports.ProofOp.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromJSON(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.ops) {\n      obj.ops = message.ops.map(e => e ? exports.ProofOp.toJSON(e) : undefined);\n    } else {\n      obj.ops = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseProofOps);\n    message.ops = [];\n\n    if (object.ops !== undefined && object.ops !== null) {\n      for (const e of object.ops) {\n        message.ops.push(exports.ProofOp.fromPartial(e));\n      }\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","baseProof","total","long_1","ZERO","index","encode","message","writer","minimal_1","Writer","create","isZero","uint32","int64","leafHash","length","bytes","v","aunts","decode","input","reader","Reader","end","undefined","len","pos","Object","Uint8Array","tag","push","skipType","fromJSON","object","fromString","bytesFromBase64","e","toJSON","obj","toString","base64FromBytes","map","fromPartial","_a","baseValueOp","key","proof","fork","ldelim","baseDominoOp","output","string","String","_b","_c","baseProofOp","type","data","baseProofOps","ops","globalThis","self","window","global","atob","b64","Buffer","from","bin","arr","i","charCodeAt","btoa","byte","fromCharCode","join","util","Long","configure"],"sourceRoot":"","sources":["../../../src/tendermint/crypto/proof.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}