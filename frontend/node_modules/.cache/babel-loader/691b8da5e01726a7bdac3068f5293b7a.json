{"ast":null,"code":"var _jsxFileName = \"/home/vanka/dev/padlomoon/frontend/src/routes/Login/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Login.module.css\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CREATE_LOGIN_MUTATION = gql`\n  mutation Mutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const [error, setError] = useState(false);\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [createLogin] = useMutation(CREATE_LOGIN_MUTATION, {\n    variables: {\n      email: loginState.email,\n      password: loginState.password\n    }\n  });\n  console.log(loginState.email);\n  console.log(loginState.password);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const foo = await createLogin();\n      console.log(\"foo\", foo);\n    } catch {\n      console.log(\"failure\");\n    } finally {\n      setLoginState({\n        email: \"\",\n        password: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Container,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Enter email\",\n            className: styles.Input,\n            value: loginState.email,\n            onChange: e => setLoginState({ ...loginState,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Enter password\",\n            className: styles.Input,\n            value: loginState.password,\n            onChange: e => setLoginState({ ...loginState,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classNames(mainStyles.Button, styles.SubmitButton),\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"foobar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"pSLcuk+NPOtCPZ+OTHA4/k0GS70=\", false, function () {\n  return [useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vanka/dev/padlomoon/frontend/src/routes/Login/Login.tsx"],"names":["React","useState","classNames","useMutation","gql","mainStyles","styles","Form","Button","CREATE_LOGIN_MUTATION","Login","error","setError","loginState","setLoginState","email","password","createLogin","variables","console","log","handleSubmit","event","preventDefault","foo","Container","Input","e","target","value","SubmitButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nimport mainStyles from \"../../styles/main.module.css\";\nimport styles from \"./Login.module.css\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst CREATE_LOGIN_MUTATION = gql`\n  mutation Mutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst Login = () => {\n  const [error, setError] = useState(false);\n  const [loginState, setLoginState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [createLogin] = useMutation(CREATE_LOGIN_MUTATION, {\n    variables: {\n      email: loginState.email,\n      password: loginState.password,\n    },\n  });\n\n  console.log(loginState.email);\n  console.log(loginState.password);\n\n  const handleSubmit = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    try {\n      const foo = await createLogin();\n      console.log(\"foo\", foo);\n    } catch {\n      console.log(\"failure\");\n    } finally {\n      setLoginState({\n        email: \"\",\n        password: \"\",\n      });\n    }\n  };\n  return (\n    <>\n      <div className={styles.Container}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"email\">\n            <Form.Control\n              required\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              className={styles.Input}\n              value={loginState.email}\n              onChange={(e) =>\n                setLoginState({\n                  ...loginState,\n                  email: e.target.value,\n                })\n              }\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control\n              required\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n              className={styles.Input}\n              value={loginState.password}\n              onChange={(e) =>\n                setLoginState({\n                  ...loginState,\n                  password: e.target.value,\n                })\n              }\n            />\n          </Form.Group>\n          <Button\n            className={classNames(mainStyles.Button, styles.SubmitButton)}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Form>\n        <div>foobar</div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}